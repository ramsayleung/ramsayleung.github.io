<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on In Pursuit of Hubris</title><link>https://ramsayleung.github.io/categories/java/</link><description>Recent content in java on In Pursuit of Hubris</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 18 May 2017 00:00:00 +0800</lastBuildDate><atom:link href="https://ramsayleung.github.io/categories/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Java UUID 源码剖析</title><link>https://ramsayleung.github.io/post/2017/uuid/</link><pubDate>Thu, 18 May 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/uuid/</guid><description>笔者近来闲来无事，又因为有需要构造全局唯一 ID 的需求，所以就去看了 UUID 这个提供稳定的系统唯一标识符的类的源码 1 UUID variant 事实上是存在很多中 UID 的不同实现</description></item><item><title>Spock 一个优雅的Groovy/Java测试框架</title><link>https://ramsayleung.github.io/post/2017/spock/</link><pubDate>Tue, 11 Apr 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/spock/</guid><description>因为需要编写 RESTful api 测试的缘故，重拾了 Spock 这个适用于 Groovy/Java 的测试 框架，顺便把以前写的一篇旧文整理了一下，权当重温。 1 关于 Spock Spock 是一个适用于 Java(Groovy) 的一个优雅并</description></item><item><title>Java读写文件小结</title><link>https://ramsayleung.github.io/post/2017/java8_file_io/</link><pubDate>Mon, 06 Mar 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/java8_file_io/</guid><description>今天在完成《算法》上的练习的时候，要对文件进行读写，而书上的例子是直接通过 Linux/Unix的重定向来实现的，我要把它修改成直接读取文件。</description></item><item><title>Lambda与Java Collection有感</title><link>https://ramsayleung.github.io/post/2017/java_collection_lambda/</link><pubDate>Sat, 04 Mar 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/java_collection_lambda/</guid><description>我平时也有浏览各类博客的习惯，毕竟三人行则必有我师嘛。今天在浏览关于Java的一个博客的时候，对博主的观点有一些不同的开发，但是困于没法在博</description></item></channel></rss>