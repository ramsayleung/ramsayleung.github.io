<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>distributed_system on 中文博客</title>
    <link>https://ramsayleung.github.io/zh/tags/distributed_system/</link>
    <description>Recent content in distributed_system on 中文博客</description>
    <image>
      <title>中文博客</title>
      <url>https://ramsayleung.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ramsayleung.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>See this site&#39;s source code [here](https://github.com/ramsayleung/ramsayleung.github.io), licensed under GPLv3 ·</copyright>
    <lastBuildDate>Thu, 05 Aug 2021 09:19:36 +0000</lastBuildDate><atom:link href="https://ramsayleung.github.io/zh/tags/distributed_system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How To Design A Reliable Distributed Timer</title>
      <link>https://ramsayleung.github.io/zh/post/2021/how_to_design_a_reliable_distributed_timer/</link>
      <pubDate>Thu, 05 Aug 2021 09:19:36 +0000</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2021/how_to_design_a_reliable_distributed_timer/</guid>
      <description>1 Preface I have been maintained a legacy distributed timer for months for my employer, then some important pay business are leveraging on it, with 1 billion tasks handled every day and 20k tasks added per second at most.
Even though it&amp;rsquo;s old and full of black magic code, but it also also have insighted and well-designed code. Based on this old, running timer, I summarize and extract as this article, and it wont include any running code(perhaps pseudocode, and a lot of figures, as an adage says: A picture is worth a thousand words).</description>
    </item>
    
    <item>
      <title>(笔记)Distributed Systems for fun and profit</title>
      <link>https://ramsayleung.github.io/zh/post/2021/distributed_system_for_fun_and_profit/</link>
      <pubDate>Sat, 12 Jun 2021 13:08:54 +0000</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2021/distributed_system_for_fun_and_profit/</guid>
      <description>1 Distributed Systems for fun and profit source: http://book.mixu.net/distsys/ 2 1. Basic 2.1 Basic concept 本章介绍了分布式系统的基本概念, 例如 scalablity, perfomance, latency, availability 关于 latent, 这里给出了一个很cool的描述: For example, imagine that you are infected with an airbone virus that turns people</description>
    </item>
    
    <item>
      <title>关于分布式系统唯一ID的探究</title>
      <link>https://ramsayleung.github.io/zh/post/2017/distributed_system_unique_id/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2017/distributed_system_unique_id/</guid>
      <description>An discussion about unique id in distributed system</description>
    </item>
    
  </channel>
</rss>
