<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>自由庄园</title>
    <link>https://ramsayleung.github.io/zh/</link>
    <description>Recent content on 自由庄园</description>
    <image>
      <title>自由庄园</title>
      <url>https://ramsayleung.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ramsayleung.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>See this site&#39;s source code [here](https://github.com/ramsayleung/ramsayleung.github.io), licensed under GPLv3 ·</copyright>
    <lastBuildDate>Tue, 09 Apr 2024 19:04:00 -0700</lastBuildDate><atom:link href="https://ramsayleung.github.io/zh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>100 Days of SwiftUI</title>
      <link>https://ramsayleung.github.io/zh/post/2024/100_days_of_swiftui/</link>
      <pubDate>Tue, 09 Apr 2024 19:04:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2024/100_days_of_swiftui/</guid>
      <description>1 缘起 我花了半年多的时间，在闲暇时间，学习了苹果的Swift语言和SwiftUI框架，想体验下IOS开发，再看下有没有机会通过写软件来做点副</description>
      <content:encoded><![CDATA[<h2 id="缘起"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 缘起</h2>
<p>我花了半年多的时间，在闲暇时间，学习了苹果的Swift语言和SwiftUI框架，想体验下IOS开发，再看下有没有机会通过写软件来做点副业。 <!-- raw HTML omitted --></p>
<p>先花了大概3个月时间，通过阅读 <a href="https://docs.swift.org/swift-book/documentation/the-swift-programming-language/guidedtour/">The Swift Programming Language</a> 这本官方电子书<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>来学习Swift这门语言，又花了接近4个月的时候来学习 <a href="https://www.hackingwithswift.com/100/swiftui">100 Days of SwiftUI</a> 这门课程<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>，每天花费1到2小时来学习一课，总共100课，所以顾名思义叫 100 Days of SwiftUI. <!-- raw HTML omitted --></p>
<p>每完成一课，就在Twitter上发一条推文，今天刚好把第100天的推文发了. <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/tweet_day_100.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/tweet_day_99.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/tweet_day_96.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>今天是结课之日，我通过了结课的考试，总分100分，考了91分，喜提课程证书一枚. <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/100_days_of_swiftui_certificate.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>在整个课程中，我写了19个IOS App(虽说大部分是功能简单的App), 源码也基本放在<a href="https://github.com/ramsayleung?tab=repositories&amp;q=&amp;type=&amp;language=swift&amp;sort="> GitHub</a> <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>上了，不过所有的App都没有上架App Store，因为我还没有给苹果交税(99美刀的开发者注册费). <!-- raw HTML omitted --></p>
<p>经过这100节课和19个APP的训练，我自觉已经掌握了使用Swift和SwiftUI的基础开发技能，算是个入门的IOS开发了, 现在我可以说自己是前端，后端，数据开发，IOS开发都搞过的全栈(<del>干</del>)工程师了（不是） <!-- raw HTML omitted --></p>
<p>但是在苹果对SwiftUI开发思路做出改变之前，我SwiftUI之旅可能就先到此为止了，原因下文再谈 <!-- raw HTML omitted --></p>
<h2 id="swift-初体验"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> Swift 初体验</h2>
<p>Swift 是由LLVM之父 <a href="https://en.wikipedia.org/wiki/Chris_Lattner">Chris Lattner</a> <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>在2010开始开发，在2014年的WWDC苹果开发者大会正式推出的一门编程语言。 <!-- raw HTML omitted --></p>
<p>按照官方的说法，Swift从 Objective-C, Rust, Haskell, Ruby, Python, C#身上都有不同程度的借鉴和学习。 <!-- raw HTML omitted --></p>
<p>因为我对上面提到的语言多少有涉猎，所以学习Swift起来基本没有什么困难，=Optional=, <code>Error Handling</code>, <code>Result</code>, <code>Generic</code>, <code>Enumerations</code>, <code>Protocol</code> 这些概念都和Rust的大同小异。 <!-- raw HTML omitted --></p>
<p>又是由LLVM之父来操刀，所以语言本身也设计得很优雅. <!-- raw HTML omitted --></p>
<p>让我眼前一亮的可能是借鉴自 <a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods">C# Extension Methods</a> <sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup>的 <code>extension</code> 功能 , 可以对已有的 class, enum 或者是 protocol 类型增加新的函数，也就是在不修改源码的情况下，扩展已有的功能. <!-- raw HTML omitted --></p>
<p>例如，以下的代码就可以扩展内置的 <code>Double</code> 类型, 实现以米为单位，进行千米, 厘米，毫米，公尺的转换: <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">extension</span> <span class="nc">Double</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nv">km</span><span class="p">:</span> <span class="nb">Double</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">self</span> <span class="o">*</span> <span class="mf">1_000.0</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nv">m</span><span class="p">:</span> <span class="nb">Double</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">self</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nv">cm</span><span class="p">:</span> <span class="nb">Double</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">self</span> <span class="o">/</span> <span class="mf">100.0</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nv">mm</span><span class="p">:</span> <span class="nb">Double</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">self</span> <span class="o">/</span> <span class="mf">1_000.0</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nv">ft</span><span class="p">:</span> <span class="nb">Double</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">self</span> <span class="o">/</span> <span class="mf">3.28084</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nv">oneInch</span> <span class="p">=</span> <span class="mf">25.4</span><span class="p">.</span><span class="n">mm</span>
</span></span><span class="line"><span class="cl"><span class="bp">print</span><span class="p">(</span><span class="s">&#34;One inch is </span><span class="si">\(</span><span class="n">oneInch</span><span class="si">)</span><span class="s"> meters&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Prints &#34;One inch is 0.0254 meters&#34;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nv">threeFeet</span> <span class="p">=</span> <span class="mf">3.</span><span class="n">ft</span>
</span></span><span class="line"><span class="cl"><span class="bp">print</span><span class="p">(</span><span class="s">&#34;Three feet is </span><span class="si">\(</span><span class="n">threeFeet</span><span class="si">)</span><span class="s"> meters&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Prints &#34;Three feet is 0.914399970739201 meters&#34;</span>
</span></span></code></pre></div><p>总体而言, Swift是一门吸收了众多PL理论的现代编程语言, 官方说支持Linux，Windows，MacOS等多个平台，不过我估计大多是在MacOS上用来写IOS和Mac应用 <!-- raw HTML omitted --></p>
<h2 id="swiftui"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> SwiftUI</h2>
<p>SwiftUI 使用的声明式语法，让开发者写页面布局和效果变得简洁清晰, 例如通过 <code>VStack</code>, <code>HStack</code>, <code>ZStack</code> 就可以实现X轴，Y轴，和Z轴方向的布局 <!-- raw HTML omitted --></p>
<p>例如下面这个就是通过 <code>ZStack</code> 几行代码实现的叠加效果: <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nv">colors</span><span class="p">:</span> <span class="p">[</span><span class="n">Color</span><span class="p">]</span> <span class="p">=</span>
</span></span><span class="line"><span class="cl">    <span class="p">[.</span><span class="n">red</span><span class="p">,</span> <span class="p">.</span><span class="n">orange</span><span class="p">,</span> <span class="p">.</span><span class="n">yellow</span><span class="p">,</span> <span class="p">.</span><span class="n">green</span><span class="p">,</span> <span class="p">.</span><span class="n">blue</span><span class="p">,</span> <span class="p">.</span><span class="n">purple</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nv">body</span><span class="p">:</span> <span class="n">some</span> <span class="n">View</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">ZStack</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">ForEach</span><span class="p">(</span><span class="mf">0.</span><span class="p">.&lt;</span><span class="n">colors</span><span class="p">.</span><span class="bp">count</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">Rectangle</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                <span class="p">.</span><span class="n">fill</span><span class="p">(</span><span class="n">colors</span><span class="p">[</span><span class="nv">$0</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">                <span class="p">.</span><span class="n">frame</span><span class="p">(</span><span class="n">width</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">100</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">.</span><span class="n">offset</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="nv">$0</span><span class="p">)</span> <span class="o">*</span> <span class="mf">10.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                        <span class="n">y</span><span class="p">:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="nv">$0</span><span class="p">)</span> <span class="o">*</span> <span class="mf">10.0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><figure>
    <img loading="lazy" src="/ox-hugo/zstack_rectangle.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>除了声明式语法之外，SwiftUI让人赏心悦目的就是动画。好的动画在App里面绝对能起到画龙点睛的作用，而SwiftUI的内置动画已经非常强大了，下面就是使用内置动画实现的动画效果: <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">struct</span> <span class="nc">ContentView</span><span class="p">:</span> <span class="n">View</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="p">@</span><span class="n">State</span> <span class="kd">private</span> <span class="kd">var</span> <span class="nv">dragAmount</span> <span class="p">=</span> <span class="n">CGSize</span><span class="p">.</span><span class="n">zero</span>
</span></span><span class="line"><span class="cl">    <span class="p">@</span><span class="n">State</span> <span class="kd">private</span> <span class="kd">var</span> <span class="nv">enable</span> <span class="p">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nv">letters</span> <span class="p">=</span> <span class="s">&#34;Hello, World&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nv">body</span><span class="p">:</span> <span class="n">some</span> <span class="n">View</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">HStack</span><span class="p">(</span><span class="n">spacing</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">ForEach</span><span class="p">(</span><span class="mf">0.</span><span class="p">.&lt;</span><span class="n">letters</span><span class="p">.</span><span class="bp">count</span><span class="p">,</span> <span class="n">id</span><span class="p">:</span> <span class="err">\</span><span class="p">.</span><span class="kc">self</span><span class="p">)</span> <span class="p">{</span> <span class="n">index</span> <span class="k">in</span>
</span></span><span class="line"><span class="cl">                <span class="n">Text</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="n">letters</span><span class="p">[</span><span class="n">letters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">letters</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="n">offsetBy</span><span class="p">:</span> <span class="n">index</span><span class="p">)]))</span>
</span></span><span class="line"><span class="cl">                    <span class="p">.</span><span class="n">padding</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="p">.</span><span class="n">font</span><span class="p">(.</span><span class="n">title</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="p">.</span><span class="n">background</span><span class="p">(</span><span class="n">enable</span> <span class="p">?</span> <span class="p">.</span><span class="n">green</span> <span class="p">:</span> <span class="p">.</span><span class="n">blue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="p">.</span><span class="n">offset</span><span class="p">(</span><span class="n">dragAmount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="p">.</span><span class="n">animation</span><span class="p">(.</span><span class="n">linear</span><span class="p">.</span><span class="n">delay</span><span class="p">(</span><span class="nb">Double</span><span class="p">(</span><span class="n">index</span><span class="p">)</span> <span class="o">/</span> <span class="mi">20</span><span class="p">),</span> <span class="n">value</span><span class="p">:</span> <span class="n">dragAmount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}.</span><span class="n">gesture</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">DragGesture</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                <span class="p">.</span><span class="n">onChanged</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">dragAmount</span> <span class="p">=</span> <span class="nv">$0</span><span class="p">.</span><span class="n">translation</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="p">.</span><span class="n">onEnded</span> <span class="p">{</span> <span class="kc">_</span> <span class="k">in</span>
</span></span><span class="line"><span class="cl">                    <span class="n">dragAmount</span> <span class="p">=</span> <span class="n">CGSize</span><span class="p">.</span><span class="n">zero</span>
</span></span><span class="line"><span class="cl">                    <span class="n">enable</span><span class="p">.</span><span class="n">toggle</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><figure>
    <img loading="lazy" src="/ox-hugo/drag_animation.gif"/> 
</figure>
 <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl">  <span class="kd">struct</span> <span class="nc">HeartBeatView</span><span class="p">:</span> <span class="n">View</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="p">@</span><span class="n">State</span> <span class="kd">private</span> <span class="kd">var</span> <span class="nv">animationAmount</span> <span class="p">=</span> <span class="mf">1.0</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nv">body</span><span class="p">:</span> <span class="n">some</span> <span class="n">View</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Button</span><span class="p">(</span><span class="s">&#34;SOS&#34;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">padding</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">background</span><span class="p">(.</span><span class="n">red</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">foregroundColor</span><span class="p">(.</span><span class="n">white</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">clipShape</span><span class="p">(</span><span class="n">Circle</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">overlay</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">Circle</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                <span class="p">.</span><span class="n">stroke</span><span class="p">(.</span><span class="n">red</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">.</span><span class="n">scaleEffect</span><span class="p">(</span><span class="n">animationAmount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">.</span><span class="n">opacity</span><span class="p">(</span><span class="mi">2</span> <span class="o">-</span> <span class="n">animationAmount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">.</span><span class="n">animation</span><span class="p">(.</span><span class="n">easeOut</span><span class="p">(</span><span class="n">duration</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="p">.</span><span class="n">repeatForever</span><span class="p">(</span><span class="n">autoreverses</span><span class="p">:</span> <span class="kc">false</span><span class="p">),</span> <span class="n">value</span><span class="p">:</span> <span class="n">animationAmount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">onAppear</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">animationAmount</span> <span class="p">=</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><figure>
    <img loading="lazy" src="/ox-hugo/hearbeat.gif"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>而Xcode 15新增的预览功能也很好用，可以让开发者不需要启动iPhone模拟器就能预览页面效果，节省了非常多的等待时间。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/xcode_preview.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="问题"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 问题</h2>
<p>听起来好像很美好: IDE新功能好用，编程语言优雅, UI框架简洁好用; 但是苹果的开发思路却有大问题： 苹果开发的SwiftUI不向后兼容老版本的IOS。 <!-- raw HTML omitted --></p>
<p>SwiftUI大部分功能都是只支持IOS16及以后的版本，而苹果新出来的数据持久框架 <code>SwiftData</code> 甚至只支持IOS17, <!-- raw HTML omitted -->
更离谱的是，SwiftUI的 BugFix 也只支持高版本IOS, 这就意味着用户不升级IOS版本，甚至SwiftUI的bug开发者都没法修复。 <!-- raw HTML omitted --></p>
<p>不支持旧版本的IOS就让一大批的开发者和公司都没有动力去使用SwiftUI: <!-- raw HTML omitted --></p>
<p>对于开发新应用的开发者而言，只支持IOS17就意味着会流失一大群使用IOS16及以下版本的用户， <!-- raw HTML omitted -->
而对于拥有存量用户的公司而言，更没有动力去使用SwiftUI，用了之后，旧版本IOS的用户可能直接无法打开应用。 <!-- raw HTML omitted --></p>
<p>因此SwiftUI就陷入了一个尴尬的境地，东西做得好，但是不会有人用; <!-- raw HTML omitted --></p>
<p>没有人自然就不用有人分享，宣传这门技术，自然就导致相关的学习资料非常匮乏, 进一步加深了初学者的学习难度; <!-- raw HTML omitted --></p>
<p>开发遇到问题连懂的人都不用，官方文档写了又约等于没有写, 直接劝退初学者，恶性循环。 <!-- raw HTML omitted --></p>
<p>又因为接受SwiftUI的开发者还不多，苹果版本迭代起来更加肆无忌惮，新版本又引入一堆的Breaking change，导致开发者更新版本非常痛苦. <!-- raw HTML omitted --></p>
<p>另外一个问题就是SwiftUI与苹果现有框架整合得不够好，如 <code>CoreImage</code> 框架，顾名思义是用来作图片处理. <!-- raw HTML omitted --></p>
<p>但之前是使用Objective-C写的，通过SwiftUI来调用，就会变成相当恶心，需要把Swift的数据结构传换成Objective-C来处理, 如： <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">applyProcess</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="k">guard</span> <span class="kd">let</span> <span class="nv">outputImage</span> <span class="p">=</span> <span class="n">currentFilter</span><span class="p">.</span><span class="n">outputImage</span> <span class="k">else</span> <span class="p">{</span><span class="k">return</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">guard</span> <span class="kd">let</span> <span class="nv">cgImage</span> <span class="p">=</span> <span class="n">context</span><span class="p">.</span><span class="n">createCGImage</span><span class="p">(</span><span class="n">outputImage</span><span class="p">,</span> <span class="n">from</span><span class="p">:</span> <span class="n">outputImage</span><span class="p">.</span><span class="n">extent</span><span class="p">)</span> <span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nv">uiImage</span> <span class="p">=</span> <span class="n">UIImage</span><span class="p">(</span><span class="n">cgImage</span><span class="p">:</span> <span class="n">cgImage</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">processedImage</span> <span class="p">=</span> <span class="n">Image</span><span class="p">(</span><span class="n">uiImage</span><span class="p">:</span> <span class="n">uiImage</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">loadImage</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Task</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">guard</span> <span class="kd">let</span> <span class="nv">imageData</span> <span class="p">=</span> <span class="k">try</span> <span class="n">await</span> <span class="n">selectedItem</span><span class="p">?.</span><span class="n">loadTransferable</span><span class="p">(</span><span class="n">type</span><span class="p">:</span> <span class="n">Data</span><span class="p">.</span><span class="kc">self</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span><span class="k">return</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">guard</span> <span class="kd">let</span> <span class="nv">inputImage</span> <span class="p">=</span> <span class="n">UIImage</span><span class="p">(</span><span class="n">data</span><span class="p">:</span> <span class="n">imageData</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span><span class="k">return</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nv">beginImage</span> <span class="p">=</span> <span class="n">CIImage</span><span class="p">(</span><span class="n">image</span><span class="p">:</span> <span class="n">inputImage</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">currentFilter</span><span class="p">.</span><span class="n">setValue</span><span class="p">(</span><span class="n">beginImage</span><span class="p">,</span> <span class="n">forKey</span><span class="p">:</span> <span class="n">kCIInputImageKey</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">applyProcess</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>把 <code>CoreImage</code> 框架的 <code>CIImage</code> 转成 <code>CoreGraphics</code> 框架的 <code>CGImage</code>, 然后再把 <code>CGImage</code> 转换成 <code>UIKit</code> 框架 <code>UIImage</code>, 然后再转换回SwiftUI 内置的 <code>Image</code> 类型, 可谓是相当麻烦了. <!-- raw HTML omitted --></p>
<p>但是对比SwiftUI只支持高版本的问题，Objective-C和Swift的互操作问题也只能算是恶心，但是起码有解决方法，对于前者，开发者是完全没法自行解决. <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 总结</h2>
<p>过了一把野生IOS开发的瘾，但是除非是苹果愿意让SwiftUI支持低版本的IOS， <!-- raw HTML omitted -->
不然我是不会继续使用SwiftUI来开发IOS了，受众太有限了，也没有太大的前景。 <!-- raw HTML omitted --></p>
<p>想要支持低版本的IOS，就只能走UIKit和Objective-C这条历史老路，我对此着实是望而生畏，有空还是学习点其他有趣的东西。 <!-- raw HTML omitted --></p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://docs.swift.org/swift-book/documentation/the-swift-programming-language/guidedtour/">https://docs.swift.org/swift-book/documentation/the-swift-programming-language/guidedtour/</a> <!-- raw HTML omitted -->&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.hackingwithswift.com/100/swiftui">https://www.hackingwithswift.com/100/swiftui</a> <!-- raw HTML omitted -->&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://github.com/ramsayleung?tab=repositories&amp;q=&amp;type=&amp;language=swift&amp;sort">https://github.com/ramsayleung?tab=repositories&amp;q=&amp;type=&amp;language=swift&amp;sort</a>= <!-- raw HTML omitted -->&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://en.wikipedia.org/wiki/Chris_Lattner">https://en.wikipedia.org/wiki/Chris_Lattner</a>  <!-- raw HTML omitted -->&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p><a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods">https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods</a>  <!-- raw HTML omitted -->&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>三月的樱花</title>
      <link>https://ramsayleung.github.io/zh/post/2024/%E4%B8%89%E6%9C%88%E7%9A%84%E6%A8%B1%E8%8A%B1/</link>
      <pubDate>Sun, 24 Mar 2024 22:00:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2024/%E4%B8%89%E6%9C%88%E7%9A%84%E6%A8%B1%E8%8A%B1/</guid>
      <description>2024的温哥华比2023来得温暖，年底的大雪没有持续多久就消融，去年三月还寒意深深，现在已春意浓浓. 温哥华的樱花也比去年提早了半个多月盛放</description>
      <content:encoded><![CDATA[<p>2024的温哥华比2023来得温暖，年底的大雪没有持续多久就消融，去年三月还寒意深深，现在已春意浓浓. <!-- raw HTML omitted --></p>
<p>温哥华的樱花也比去年提早了半个多月盛放。 <!-- raw HTML omitted --></p>
<p>​在春日的夕阳下，漫步在樱花树下，微风吹过，樱花落下, 着实有「落英缤纷」的感觉 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.39.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.05.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.11.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.14.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.16.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.18.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.23.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.33.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.37.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.42.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.43.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.46.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.53.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.56.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>看着眼前的樱花，想着她冬日的美貌，脑海浮起诗句： <!-- raw HTML omitted --></p>
<blockquote>
<p>昨日雪如花，今日花如雪 <!-- raw HTML omitted --></p>
</blockquote>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.49.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sakura.52.jpeg"/> 
</figure>
 <!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>简明写作指南</title>
      <link>https://ramsayleung.github.io/zh/post/2024/%E7%AE%80%E6%98%8E%E5%86%99%E4%BD%9C%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 15 Mar 2024 20:27:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2024/%E7%AE%80%E6%98%8E%E5%86%99%E4%BD%9C%E6%8C%87%E5%8D%97/</guid>
      <description>1 前言 最近在阅读李笑来的《人人都能用英语》1，想要继续提升自己的英语能力。 李笑来是新东方出来的英语教学名师，此书由浅入深来介绍如何「用」好英</description>
      <content:encoded><![CDATA[<h2 id="前言"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前言</h2>
<p>最近在阅读李笑来的<a href="https://github.com/xiaolai/everyone-can-use-english/blob/main/book/README.md">《人人都能用英语》</a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>，想要继续提升自己的英语能力。 <!-- raw HTML omitted -->
李笑来是新东方出来的英语教学名师，此书由浅入深来介绍如何「用」好英语，而不是像在学校那样「学」好英语。 <!-- raw HTML omitted --></p>
<p>在《口语篇》中，李笑来提到，比口语更重要的是思考能力，英文说不出口的原因，可能是脑子里面没有什么思考沉淀的东西可以说的，并藉此推荐了三本关于文风（Style）的必读书籍，其中一本就叫：<a href="https://www.sec.gov/pdf/handbook.pdf">A Plain English Handbook</a>(简明英文写作指南)<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>。 <!-- raw HTML omitted --></p>
<p>这本书竟然是美国的证券交易委员会(Securities and Exchange Commission)1998年编著的, 旨在指导投资机构和金融机构创建更清晰，更易理解的披露文件。 <!-- raw HTML omitted --></p>
<p>可能是投资机构写的东西，普通投资者根本看不懂，逼得证券交易委员会都要下场指导投资机构写作了。 <!-- raw HTML omitted --></p>
<p>这本小册子只有83页，内容却很详实，读完之后，觉得其中的许多技巧不只适用于英文写作， <!-- raw HTML omitted -->
因此就结合读后感和个人心得，分享下简明写作的心得。 <!-- raw HTML omitted --></p>
<h2 id="为什么写作"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 为什么写作</h2>
<p>以我自己的工作为例，日常开发新项目，需要撰写文档来向同事和经理介绍项目背景， <!-- raw HTML omitted -->
动机和具体的实现细节，以寻求支持并推动项目的进展；技术交流时，需要撰写文档分享你的成果和经验；在晋升时，需要撰写文档，给自己找数据点来说服经理，为什么要给我晋升。 <!-- raw HTML omitted --></p>
<p>需要让别人「看见」我的时候，写文章就是一种非常好的手段，默默无闻的老黄牛，是很难被人看到的，酒香也怕巷子深。 <!-- raw HTML omitted --></p>
<p>你可能会认为自己工作用不到文档，但是你总归是要向同事或者上司阐述自己的观点， <!-- raw HTML omitted -->
无论是述职，晋升，演讲，甚至口头汇报，用文档作腹稿, 理清脉络，做到胸有成竹。 <!-- raw HTML omitted --></p>
<p>关于写作的动机和好处，我之前写过一篇文章专门来聊：<a href="https://ramsayleung.github.io/zh/post/2023/%E9%97%B2%E8%81%8A%E5%86%99%E4%BD%9C/">《闲聊写作的好处》</a>，这里就不赘述了。 <!-- raw HTML omitted --></p>
<h2 id="如何写"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 如何写</h2>
<p>如果把文章比作一个人的话，那么文风就是人的血肉和皮囊，文章的结构就是人的骨架，只有当骨架先立了起来，才能在其上涂血肉，张皮囊。 <!-- raw HTML omitted --></p>
<p>A Plain English Handbook 主要介绍的是改善文风的技巧，那么如何立起文章的骨架呢？我推荐的是黄金圈法则和金字塔原理。 <!-- raw HTML omitted --></p>
<h3 id="结构"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 结构</h3>
<h4 id="黄金圈法则"><!-- raw HTML omitted -->3.1.1<!-- raw HTML omitted --> 黄金圈法则</h4>
<p>所谓的黄金圈法则，概括来说，就是思考问题的三个层面，分别是： <!-- raw HTML omitted --></p>
<ul>
<li>Why: 最内层, 为什么，做一件事的原因或者目的，也就是我们为什么做这样的事情，战略层面。 <!-- raw HTML omitted --></li>
<li>How: 中间层, 怎么做，我们如何实现我们想要做的事情, 战术层面的事 <!-- raw HTML omitted --></li>
<li>What: 最外层，事情的表象，我们具体做的每一件具体的事，执行层面的事 <!-- raw HTML omitted --></li>
</ul>
<p><figure>
    <img loading="lazy" src="/ox-hugo/%e9%bb%84%e9%87%91%e5%9c%88%e6%b3%95%e5%88%99.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>比如我要推动一个新项目，需要写项目文档，或者口头向老板阐述项目，如果不用黄金圈法则，可能会是这样表述的： <!-- raw HTML omitted --></p>
<ul>
<li>What: 我要做一个XX的服务，会有哪些新功能 <!-- raw HTML omitted --></li>
<li>How: 我是通过什么业界领先的XX技术实现的，用到了什么组件. <!-- raw HTML omitted --></li>
</ul>
<p>如果以黄金圈法则来重写项目文档，那么文章的结构应该是如何的： <!-- raw HTML omitted --></p>
<ul>
<li>Why: 我们为什么要做这个项目？这个项目能给我们带来什么好处，不做会有什么损失？ <!-- raw HTML omitted --></li>
<li>How: 大方向上应该怎么实施，大概会用到什么组件，架构如何？ <!-- raw HTML omitted --></li>
<li>What: 具体的底层实现是什么，每个组件是怎么实现的？ <!-- raw HTML omitted --></li>
</ul>
<p>大方向没有定好，再走下去也只是南辕北辙，于事无补。 <!-- raw HTML omitted --></p>
<p>其实这篇文章也使用了黄金圈法则，开篇就介绍为什么要写作，后续再介绍如何写作。 <!-- raw HTML omitted --></p>
<h4 id="金字塔原理"><!-- raw HTML omitted -->3.1.2<!-- raw HTML omitted --> 金字塔原理</h4>
<p>关于金字塔原理，我觉得冯唐的<a href="https://zhuanlan.zhihu.com/p/196733201">《老聃的金字塔原理》</a>一文<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>已经解释得非常清晰明了了： <!-- raw HTML omitted --></p>
<blockquote>
<p>用一句话说，金字塔原则就是，任何事情都可以归纳出一个中心论点，而此中心论点可由三至七个论据支持，这些一级论据本身也可以是个论点，被二级的三至七个论据支持，如此延伸，状如金字塔。 <!-- raw HTML omitted --></p>
</blockquote>
<p><figure>
    <img loading="lazy" src="/ox-hugo/%e9%87%91%e5%ad%97%e5%a1%94%e5%8e%9f%e7%90%86.png"/> 
</figure>
  <!-- raw HTML omitted --></p>
<p>如果用金字塔原理来分析「为什么小王是个好对象」的论点，那么论据就可以拆分成： <!-- raw HTML omitted --></p>
<ul>
<li>家境殷实 <!-- raw HTML omitted -->
<ul>
<li>年入百万 <!-- raw HTML omitted --></li>
<li>有车有房无贷 <!-- raw HTML omitted --></li>
<li>父母养老无忧 <!-- raw HTML omitted --></li>
</ul>
</li>
<li>前景光明 <!-- raw HTML omitted -->
<ul>
<li>名校毕业 <!-- raw HTML omitted --></li>
<li>年纪轻轻身居中层 <!-- raw HTML omitted --></li>
<li>领导赏识 <!-- raw HTML omitted --></li>
</ul>
</li>
<li>相处融洽 <!-- raw HTML omitted -->
<ul>
<li>提供情绪价值 <!-- raw HTML omitted --></li>
<li>共同话题多 <!-- raw HTML omitted --></li>
<li>情绪稳定 <!-- raw HTML omitted --></li>
</ul>
</li>
<li>颜值高 <!-- raw HTML omitted -->
<ul>
<li>皮肤白里透红 <!-- raw HTML omitted --></li>
<li>五官端正 <!-- raw HTML omitted --></li>
<li>身材修长 <!-- raw HTML omitted --></li>
<li>穿衣显瘦，脱衣有肉 <!-- raw HTML omitted --></li>
<li>基因好，后代获得先发优势 <!-- raw HTML omitted --></li>
</ul>
</li>
</ul>
<p>写作时，每个一级论据就是一个大的篇章，每个二级论据就是篇章下的章节，三级论据就是章节里面的小节， <!-- raw HTML omitted -->
依此类推，并给予最底层的论据适当的文字描述。 <!-- raw HTML omitted -->
如果还不够的话，还可以继续向下拆分论据。 <!-- raw HTML omitted --></p>
<p>有了黄金圈法则和金字塔原理，就很容易把一篇文章的结构给搭起来。 <!-- raw HTML omitted --></p>
<h3 id="文风"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> 文风</h3>
<h4 id="明确你的观众"><!-- raw HTML omitted -->3.2.1<!-- raw HTML omitted --> 明确你的观众</h4>
<p>明确你的观众，是确保你写的文档能让人理解的最重要步骤。 <!-- raw HTML omitted --></p>
<p>不同的读者，有不同的背景，对你要传递的信息是有不同的理解难度。 <!-- raw HTML omitted --></p>
<p>以我自己为例，因为我在公众号写的文章大多都是与编程技术无关的， <!-- raw HTML omitted -->
那么吸引到的读者自然也不会是编程从业者，所以我在公众号里面写技术文章，基本不会有什么读者阅读。 <!-- raw HTML omitted --></p>
<p>兼之微信这个阅读平台本身的局限，大多数情况下只能是在手机上阅读， <!-- raw HTML omitted -->
读者无法投入大量时间「沉浸式」地主动阅读，可能是快速下拉翻页读完了。 <!-- raw HTML omitted -->
而图表和代码在手机屏幕上展示效果不佳，就进一步影响阅读体验了。 <!-- raw HTML omitted --></p>
<p>如果我把写满技术名词和代码的文档给一个完全没有技术背景的读者来阅读， <!-- raw HTML omitted -->
即使我的文档写得妙笔生花，对他也没有任何信息可言。 <!-- raw HTML omitted --></p>
<p>因此我基本不会在公众号写技术文章，技术文章都放在更适合在电脑阅读的博客上。 <!-- raw HTML omitted --></p>
<p>这里还有个小技巧，就是在明确你的观众的时候，可以设定到一个具体的人， <!-- raw HTML omitted -->
例如是你的女友/男友，你的同事，或者是你的经理。 <!-- raw HTML omitted --></p>
<p>具体的人比抽象的概念更深入人心。 <!-- raw HTML omitted --></p>
<h4 id="言简意赅"><!-- raw HTML omitted -->3.2.2<!-- raw HTML omitted --> 言简意赅</h4>
<p>能用简洁明了的段落表达全的信息，就不要长篇大论。 <!-- raw HTML omitted --></p>
<p>读者是有心智负担的，文章的内容越长，读者的负担越重，就越有可能在还没读完的情况下将文章关闭。 <!-- raw HTML omitted -->
另外一方面，如果要传递的信息量是固定的，你的文章内容越长，你文章的信息密度越低，通俗点来说，就是干货越少。 <!-- raw HTML omitted --></p>
<p>所以我对「万字长文，讲透xxx」,「爆肝x天，四万字长文带你解读xxx」之类的文章不感冒， <!-- raw HTML omitted -->
文字多也不能说明干货多，爆不爆肝和干货含量也没有逻辑关联。 <!-- raw HTML omitted --></p>
<p>现在写作不按字数算稿酬，不需要搞「文字灌水」。 <!-- raw HTML omitted --></p>
<p>《唐宋八家丛话》中有一说： <!-- raw HTML omitted --></p>
<blockquote>
<p>欧阳修在翰林院时，常常与同院他人出游。 <!-- raw HTML omitted --></p>
<p>一次，见有匹飞驰的马踩死了一只狗。 <!-- raw HTML omitted --></p>
<p>欧阳修说：“请你们尝试描述一下这事。” <!-- raw HTML omitted --></p>
<p>一人说：“有犬卧于通衢，逸马蹄而杀之。” <!-- raw HTML omitted --></p>
<p>另一人说：“有马逸于街衢，卧犬遭之而毙。” <!-- raw HTML omitted --></p>
<p>欧阳修笑说：“像你们这样修史，一万卷也写不完。”那二人说：“那你说呢？” <!-- raw HTML omitted --></p>
<p>欧阳修道：“逸马杀犬于道。” <!-- raw HTML omitted --></p>
<p>那二人相互笑了起来。 <!-- raw HTML omitted --></p>
</blockquote>
<h4 id="少说黑话"><!-- raw HTML omitted -->3.2.3<!-- raw HTML omitted --> 少说黑话</h4>
<p>少说黑话和行话，例如「组合拳」，「赋能」，「抓手」之类的，字我都认识，合起来就不明白是什么意思。 <!-- raw HTML omitted --></p>
<p>如果你明确了你的观众，你可能就会意识到你的观众大概率无法理解这些话语。 <!-- raw HTML omitted --></p>
<p>多用具体的，意思明确的词，会更让读者更容易理解。能用简单的话解释清楚一个复杂的概念，就说明你对这个概念的认识越到位。 <!-- raw HTML omitted --></p>
<p>黑话用多了，也是一种「文字腐败」。 <!-- raw HTML omitted --></p>
<h4 id="控制段落长度"><!-- raw HTML omitted -->3.2.4<!-- raw HTML omitted --> 控制段落长度</h4>
<p>上文提到，读者是有心智负担，负担越大，他们就越有可能在阅读你文章时「半途而弃」。 <!-- raw HTML omitted --></p>
<p>而一大片文字密密麻麻糊在一个段落，就会进一步加重他们的心智负担。 <!-- raw HTML omitted --></p>
<p>我一般推荐80到150个字一个段落，这样看上去不至于太吓到读者。 <!-- raw HTML omitted --></p>
<h5 id="使用空行"><!-- raw HTML omitted -->3.2.4.1<!-- raw HTML omitted --> 使用空行</h5>
<p>段落与段落之间，用 <strong><strong>空行</strong></strong> 分隔. 空行是个非常简单，但是却异常有效的技巧，既可以拆分段落，控制单个段落的长度，也可以表达不同段落逻辑上存在并列或者递进的关系，便于读者理解。 <!-- raw HTML omitted --></p>
<p>同样的文字，使用空行分隔段落的前后对比如下： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/%e6%8e%a7%e5%88%b6%e6%ae%b5%e8%90%bd%e9%95%bf%e5%ba%a61.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/%e6%8e%a7%e5%88%b6%e6%ae%b5%e8%90%bd%e9%95%bf%e5%ba%a62.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h5 id="使用列表"><!-- raw HTML omitted -->3.2.4.2<!-- raw HTML omitted --> 使用列表</h5>
<p>另外一个控制段落长度的有用技巧，是使用列表(bullet list)，可以表达列表中的每个点都是并列关系。 <!-- raw HTML omitted --></p>
<p>例如，分析跑步的好处： <!-- raw HTML omitted --></p>
<blockquote>
<p>跑步不仅可以增强免疫系统，帮助抵御病毒和细菌，降低患病风险； 还有助于心肺功能，降低心脏病和中风的风险； 更可以减脂、增强肌肉，改善体形； 甚至促进肠道蠕动，有助于消化。 <!-- raw HTML omitted --></p>
</blockquote>
<p>如果换成列表，那么跑步的好处就是： <!-- raw HTML omitted --></p>
<ul>
<li>提高免疫力：增强免疫系统，帮助抵御病毒和细菌，降低患病风险 <!-- raw HTML omitted --></li>
<li>改善心血管健康：有助于心肺功能，降低心脏病和中风的风险 <!-- raw HTML omitted --></li>
<li>塑造好身材：可以减脂、增强肌肉，改善体形 <!-- raw HTML omitted --></li>
<li>促进消化：促进肠道蠕动，有助于消化 <!-- raw HTML omitted --></li>
</ul>
<p>如果还有优点补充，只需要继续增加列表就好了。 <!-- raw HTML omitted --></p>
<h4 id="一图-表胜千言"><!-- raw HTML omitted -->3.2.5<!-- raw HTML omitted --> 一图/表胜千言</h4>
<p>人的大脑对图片远比文字和声音敏感。 <!-- raw HTML omitted --></p>
<p>图片比文字来说，更容易被大脑接受，大脑储存图片信息也不需要进行过多的转译，而文字进入大脑之后，还需要用“想象力”处理成画面进行记忆，这也就是为什么带生活实例的文字会比概念化的文字更容易让人记住，因为前者更容易让你想象具体的画面。 <!-- raw HTML omitted --></p>
<p>通俗地讲，就是一图胜千言。 <!-- raw HTML omitted --></p>
<p>所以要减少读者的心智负担，那么就应该多使用图表，因为它能更直观地传递更多信息。 <!-- raw HTML omitted --></p>
<p>以国家统计局发布的2月份居民消费价格分类同比涨跌幅为例，文字描述如下： <!-- raw HTML omitted --></p>
<blockquote>
<p>其中，教育文化娱乐、其他用品及服务、衣着价格分别上涨3.9%、3.0%和1.6%，医疗保健、生活用品及服务、居住价格分别上涨1.5%、0.5%和0.2%；交通通信价格下降0.4%。 <!-- raw HTML omitted --></p>
</blockquote>
<p>图表如下： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/2%e6%9c%88%e4%bb%bd%e5%b1%85%e6%b0%91%e6%b6%88%e8%b4%b9%e4%bb%b7%e6%a0%bc%e5%88%86%e7%b1%bb%e5%90%8c%e6%af%94%e6%b6%a8%e8%b7%8c%e5%b9%85%e5%9b%be.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>关于如何画图，我之前也写过一篇文章来分享心得：《<a href="https://ramsayleung.github.io/zh/post/2023/%E6%88%91%E7%9A%84%E7%94%BB%E5%9B%BE%E6%B5%81/">我的画图流：画图工具与技巧分享</a>》 <!-- raw HTML omitted --></p>
<p>或者换成表格: <!-- raw HTML omitted --></p>
<table>
<thead>
<tr>
<th>类别</th>
<th>涨跌幅</th>
</tr>
</thead>
<tbody>
<tr>
<td>教育文化娱乐</td>
<td>+ 3.9%</td>
</tr>
<tr>
<td>其他用品及服务</td>
<td>+ 3.0%</td>
</tr>
<tr>
<td>衣着</td>
<td>+ 1.6%</td>
</tr>
<tr>
<td>医疗保健</td>
<td>+ 1.5%</td>
</tr>
<tr>
<td>生活用品及服务</td>
<td>+ 0.5%</td>
</tr>
<tr>
<td>居住</td>
<td>+ 0.2%</td>
</tr>
<tr>
<td>食品烟酒</td>
<td>- 0.1%</td>
</tr>
<tr>
<td>交通通信</td>
<td>- 0.4%</td>
</tr>
</tbody>
</table>
<h2 id="如何写好"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 如何写好</h2>
<h3 id="多读多思"><!-- raw HTML omitted -->4.1<!-- raw HTML omitted --> 多读多思</h3>
<p>杜甫说，读书破万卷，下笔如有神。诗圣的意思是如果你通读过万卷书，就好像ChatGPT一样，思如泉涌，下笔如有神 <!-- raw HTML omitted --></p>
<p>陆游又说，纸上得来终觉浅，绝知此事要躬行。陆放翁的意思是，你在书上的读到的东西，也只是信息，如果没有实践过，终究不能成为技能的。 <!-- raw HTML omitted --></p>
<p>总结两位老人家的话，也就是说，多读书是写好文章的必要条件，多读书不一定能写好文章，但是不多读书呢，就一定写不出好文章。 <!-- raw HTML omitted --></p>
<p>毕竟写出来的东西，不会凭空而来，还是你脑子思考好的结果。 <!-- raw HTML omitted --></p>
<h3 id="多写多改"><!-- raw HTML omitted -->4.2<!-- raw HTML omitted --> 多写多改</h3>
<p>与金庸并称香港四大才子的倪匡，一生写了300多部小说、400多部电影剧本。 <!-- raw HTML omitted --></p>
<p>他曾经自嘲没有谋生本能，所以看见人家写自己也写，自称是全世界写汉字最多和最快的人，自入文坛已写作三十年， <!-- raw HTML omitted -->
一个星期写足七天，每天写数万字。他在创作最高峰曾同时写作十二本科幻小说。 <!-- raw HTML omitted --></p>
<p>当被问及有何建议赠给写作的人，倪匡说只有一个「写」字，只有多写才能得到更多的灵感。 <!-- raw HTML omitted --></p>
<hr>
<p>苏轼的《东坡志林》写到，有人问欧阳修怎么写文章，他回答说： <!-- raw HTML omitted --></p>
<blockquote>
<p>无他术，唯勤读书而多为之，自工。 <!-- raw HTML omitted --></p>
<p>世人患作文字少，又懒读书，每一篇出，即求过人，如此少有至者。 <!-- raw HTML omitted --></p>
<p>疵病不必待人指摘，多做自能见之。” <!-- raw HTML omitted --></p>
</blockquote>
<p>世人文字写得少，又懒读书，写一篇文章就希望可以超越别人，像这样是难有写得好的人。 <!-- raw HTML omitted --></p>
<p>书读多了，落笔为文，文章写多了，自然就写好了。 <!-- raw HTML omitted --></p>
<p>写作的「捷径」就是老老实实多读书、多思考、勤写作。 <!-- raw HTML omitted --></p>
<p>多练多写多修改。 <!-- raw HTML omitted --></p>
<p>只有产量提上来了，工艺才会成熟，良品率才会提高。 <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 总结</h2>
<p>写作并非是雄关漫道，遥不可及。 <!-- raw HTML omitted --></p>
<p>大家都写过作文，写作也只是一种交流方式，无非是把脑海中的想法以文字的形式付诸于纸上，比聊天更加正式而已。 <!-- raw HTML omitted --></p>
<p>千里之行始于足下，万巻之文始于笔下，开始写就好了。 <!-- raw HTML omitted --></p>
<hr>
<h3 id="历史文章推荐"><!-- raw HTML omitted -->5.1<!-- raw HTML omitted --> 历史文章推荐</h3>
<ul>
<li>旅加经历 <!-- raw HTML omitted -->
<ul>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E8%BF%99%E4%BA%9B%E5%B9%B4%E8%B5%B0%E8%BF%87%E7%9A%84%E8%B7%AF_%E4%BB%8E%E5%B9%BF%E5%B7%9E%E5%88%B0%E6%B8%A9%E5%93%A5%E5%8D%8E/">这些年走过的路：从广州到温哥华</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E4%B9%8B%E5%88%9D%E4%BD%93%E9%AA%8C/">加拿大之初体验</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E8%80%83%E9%A9%BE%E7%85%A7%E7%9A%84%E7%BB%8F%E5%8E%86/">加拿大考驾照的经历</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2024/%E7%99%BB%E9%99%86%E5%8A%A0%E6%8B%BF%E5%A4%A7%E4%B8%80%E5%B9%B4%E7%9A%84%E4%BD%93%E4%BC%9A/">登陆加拿大一年后的体会</a> <!-- raw HTML omitted --></li>
</ul>
</li>
<li>历史与思考 <!-- raw HTML omitted -->
<ul>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/">为什么梦想买不起，故乡回不去</a>(和谐版本, 原版本<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>) <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%B6%A6%E5%90%91%E4%BD%95%E6%96%B9_%E4%B8%8D%E5%AE%8C%E5%85%A8%E8%82%89%E8%BA%AB%E7%BF%BB%E5%A2%99%E6%8C%87%E5%8C%97/">润向何方：不完全肉身翻墙指北</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E7%9A%87%E5%B8%9D%E4%B8%8E%E5%AE%98%E5%83%9A/">皇帝与官僚：「上面」与「下面」</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E9%97%B2%E8%81%8A%E5%86%99%E4%BD%9C/">闲聊写作的好处</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2024/%E9%87%91%E6%A6%9C%E9%A2%98%E5%90%8D%E4%B9%8B%E5%90%8E/">金榜题名之后</a> <!-- raw HTML omitted --></li>
</ul>
</li>
<li>工具与分享 <!-- raw HTML omitted -->
<ul>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%88%91%E7%9A%84%E5%86%99%E4%BD%9C%E6%B5%81/">我的写作流</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%88%91%E7%9A%84%E7%94%BB%E5%9B%BE%E6%B5%81/">我的画图流：画图工具与技巧分享</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%88%91%E7%9A%84%E6%90%9C%E7%B4%A2%E6%B5%81/">我的搜索流：高效搜索经验分享</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2022/feynman_technique/">最好的学习方式：费曼学习法(Feynman Technique)</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2021/%E7%B3%BB%E7%BB%9F%E6%80%9D%E8%80%83/">系统思考：既见树木，又见森林</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/gmail%E5%9C%B0%E5%9D%80%E7%9A%84%E9%9A%90%E8%97%8F%E6%8A%80%E5%B7%A7/">两个鲜为人知的Gmail地址技巧</a> <!-- raw HTML omitted --></li>
</ul>
</li>
<li>职场与思考 <!-- raw HTML omitted -->
<ul>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E4%BB%8E%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E7%A6%BB%E7%BA%BF_%E6%88%91%E5%B8%A6%E8%B5%B0%E4%BA%86%E4%BB%80%E4%B9%88/">那些年，我从微信支付学到的东西</a> <!-- raw HTML omitted --></li>
</ul>
</li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://github.com/xiaolai/everyone-can-use-english/blob/main/book/README.md">https://github.com/xiaolai/everyone-can-use-english/blob/main/book/README.md</a> <!-- raw HTML omitted -->&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.sec.gov/pdf/handbook.pdf">https://www.sec.gov/pdf/handbook.pdf</a>  <!-- raw HTML omitted -->&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://zhuanlan.zhihu.com/p/196733201">https://zhuanlan.zhihu.com/p/196733201</a> <!-- raw HTML omitted -->&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="http://ramsayleung.github.io/zh/post/2023/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/">http://ramsayleung.github.io/zh/post/2023/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/</a> <!-- raw HTML omitted -->&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>金榜题名之后</title>
      <link>https://ramsayleung.github.io/zh/post/2024/%E9%87%91%E6%A6%9C%E9%A2%98%E5%90%8D%E4%B9%8B%E5%90%8E/</link>
      <pubDate>Sun, 25 Feb 2024 20:27:00 -0800</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2024/%E9%87%91%E6%A6%9C%E9%A2%98%E5%90%8D%E4%B9%8B%E5%90%8E/</guid>
      <description>1 前言 过年期间，趁着各种零碎的闲暇时间，将一本探究学生出身与毕业出路生涯前景的书看完，名为《金榜题名之后：大学生出路分化之迷》。 大约自科举取</description>
      <content:encoded><![CDATA[<h2 id="前言"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前言</h2>
<p>过年期间，趁着各种零碎的闲暇时间，将一本探究学生出身与毕业出路生涯前景的书看完，名为《金榜题名之后：大学生出路分化之迷》。 <!-- raw HTML omitted --></p>
<p>大约自科举取士以来，通过读书来改变自己乃至整个家族的命运，就已成为中国社会妇孺皆知的常识，”读书改变命运“。 <!-- raw HTML omitted --></p>
<p>古有《劝学诗》云：“男儿若遂平生志，六经勤向窗前读”；今有高悬在高中教室的励志标语：“辛苦三年，幸福一生”。 <!-- raw HTML omitted --></p>
<p>但是，进入好的大学，是否就意味着毕业时令人羡慕的工作呢？为什么社会出身劣势的学生即使进入了最好的大学，却仍然在毕业出路与生涯前景劣势明显？ <!-- raw HTML omitted --></p>
<p>对于寒窗苦读，从中国甘肃考入复旦大学的作者来说，她也有同样的疑问。 <!-- raw HTML omitted --></p>
<p>因此在研究生期间，就将学生家庭背景与教育结果之间的关联作为研究课题，并将研究生论文润色，扩展成书。 <!-- raw HTML omitted --></p>
<p>在读别人的书时，我总会想起自己的事，好比用别人的料理方式，来烹饪自己的食材，看能煮出什么样的【佳肴】。 <!-- raw HTML omitted --></p>
<p>虽然我未曾【金榜题名】，但也未妨我来分享下自己的所思所想。 <!-- raw HTML omitted --></p>
<h2 id="迷宫的游戏规则"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 迷宫的游戏规则</h2>
<p>以前高中老师在我们向其抱怨各种学业压力和严苟的规章制度之后，总是会语重心长地解释一番，然后在对话的结尾补上一句，”上到大学你们就轻松啦“。 <!-- raw HTML omitted --></p>
<p>不同于高中只有成绩的单一的显式考核标准，只有一个方向和出口，大学更像是一个被精心布局的迷宫：并不存在一条”主干道“或者标准的走法，每一天的过法都有许多可能，每个人在路口处需要不断地做选择，每一条小路（社团，绩点，实习）都各有乾坤。 <!-- raw HTML omitted --></p>
<p>而大学生作为玩家，需要在小路之中穿行探索，一边选择自己路线，一边在路途收集有价值的筹码（成绩，经历，奖项等）。 <!-- raw HTML omitted --></p>
<p>当他们到达迷宫出口时，他们需要将口袋的筹码拿出来，用它们来兑换成下一个旅程的入场券。 <!-- raw HTML omitted --></p>
<p>只是，对于不同社会出身的探索者来说，这个迷宫的神秘程度是不同的。有人对里面的布局相当了解，有人半知半解，而有人只能通过道听途说略知一二。 <!-- raw HTML omitted --></p>
<p>尤其关键的是：并不是所有人都很清楚当中的游戏规则，譬如迷宫的尽头究竟有哪几个出口，而每个出口处有用的筹码又有什么不同。 <!-- raw HTML omitted --></p>
<p>而不同等级的大学，能提供的有价值的筹码数量和价值又是截然不同的。 <!-- raw HTML omitted --></p>
<p>为了区分在两种截然不同的驱动力下探索迷宫的玩家，作者将两者定义为： <!-- raw HTML omitted --></p>
<ul>
<li>目标掌控模式：了解大学及劳动力市场中的规则，因此能有意识地树立生涯目标，并且通过管理自身的行动来趋近目标。 <!-- raw HTML omitted --></li>
<li>直觉依赖模式：在陌生的大学场域中难以自我定位，从而无意识地陷入无目标状态，主要倚靠直觉和旧有习惯来组织大学生活。 <!-- raw HTML omitted --></li>
</ul>
<p>家境优越的学子，在父母的指导下，可以更早和清晰地认识到大学的游戏规则，进而策略性地计划大学生活；而寒门学子，因为眼界和自身经历的局限性， <!-- raw HTML omitted -->
并不了解大学的规则，又会发现高中沉淀的学习方式在大学并不完全适用，难免陷入迷茫。 <!-- raw HTML omitted --></p>
<p>优势阶层的父母基于对迷宫的洞悉，为孩子织就一张“安全网”，帮助孩子认清形势，定位自身，树立目标，顺利通关；而弱势学生则没有这张安全网，只得独自在这个陌生领域无助摸索前进，父母能提供的建议越来越少，往哪走全靠自己或对或错的直觉和过去的习惯。 <!-- raw HTML omitted --></p>
<p>但因为作者只调研了名校的优等生，如果把排名后50%的学子也纳入调研范围，可能会发现还有一种【躺平放纵模式】，以高中老师口中【轻松】的方式度过了大学生涯。 <!-- raw HTML omitted --></p>
<h2 id="非名校生的大学"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 非名校生的大学</h2>
<p>近年来，红遍网络的“985废物”和“小镇做题家”的自嘲俯拾即是： <!-- raw HTML omitted --></p>
<blockquote>
<p>“从一个连电影院都没有的小县城，考到了全河北最好的高中，六年之后要来到国际大都市上海了，要来到倾尽我家所有小积蓄，才能勉强付个首付的上海了。我这才发现，光考了好大学也是没有用的。” &ndash; 《我上了985,211，才发现自己一无所有》 <!-- raw HTML omitted --></p>
</blockquote>
<p>如果考上985，211的“小镇做题家”都如此自嘲一无所有，那些没有考上211的小镇考生，又该如何自处呢？ <!-- raw HTML omitted --></p>
<p>当聊起大学和学历话题的时候，我时常和名校毕业的高中好友开玩笑，我不是“小镇做题家”，虽然我和你们一样来自小镇，但是我连题都做不好。 <!-- raw HTML omitted --></p>
<h3 id="直觉依赖者的探索之路"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 直觉依赖者的探索之路</h3>
<p>如果按照书中作者的分类标准，我属于来自农村的，第一代大学生（父母都不是大学生）的直觉依赖模式学子。 <!-- raw HTML omitted --></p>
<p>是那种最需要靠教育改变命运的学生，并不真的知道该在大学里如何做才能改变命运。 <!-- raw HTML omitted --></p>
<p>对于升学，出国，就业这三个出路，我一开始就把【出国】这个选项给排除了，小镇来的我，家里并没有足够的财力支撑我出国，何况我的学校也不容易申请到好学校（现在看来，这个理由略为牵强）。 <!-- raw HTML omitted --></p>
<p>升学读研也不是我的目标，我对走学术路线没有兴趣，读完研也终究要工作，计算机相关行业，研究生学历与本科学历相比，并没有跃迁式差距。 <!-- raw HTML omitted --></p>
<p>所以我一开始就选定了【就业】的路线，我也希望可以早点赚钱为父母分担。 <!-- raw HTML omitted --></p>
<p>因为没有人指导，又不清楚迷宫的规则，我并不清楚要如何做才能取得【就业】的优势，或者做好就业的准备。 <!-- raw HTML omitted --></p>
<p>大一开始时，还是按照高中的【勤学苦读】模式，晚上没有课的时候去课室学习，解高数的练习题，再预习专业课。 <!-- raw HTML omitted --></p>
<p>这样的学习模式持续了两个月，觉得相当别扭和迷茫，看到周围宿舍的大神们已经开始编写代码，甚至其中还有中学就开始自学编程的大神，我解高数题又有什么用呢。 <!-- raw HTML omitted --></p>
<p>恰好赶上学校的社团招新，我就加入一个校级社团的【网络部】，希望可以借机学习到计算机相关的知识，学习怎么修电脑或者装操作系统。 <!-- raw HTML omitted --></p>
<p>社团生活的确让我学习到基础的电脑维修知识，更重要的是，让我认识到同系的学长们，对于我想学习修电脑的兴趣，他们纠偏道，单纯的硬件组装其实没有太大的潜力，还是做软件开发更有前途。 <!-- raw HTML omitted --></p>
<p>在学长们的指导下，我开始到<a href="imooc.com/">慕课网</a>和<a href="https://www.w3schools.com/">W3School</a>学习Html，CSS，Javascript这三剑客，开始学习前端开发，而后我又了解【前端开发】，【后端开发】，【移动端开发】的职业路径。 <!-- raw HTML omitted --></p>
<p>浅尝【前端开发】之后，发现自己对此并没有太多兴趣，又开始尝试【后端开发】的路线。 <!-- raw HTML omitted --></p>
<p>因为慕课网有把【后端开发】的课程列出来，我就知道【后端开发】需要学习什么样的技术，如Java/C++，数据库，计算机网络，我就可以有的放矢地去豆瓣上搜索对应的高分书籍来自学。 <!-- raw HTML omitted --></p>
<p>我的迷宫有了【地图】，我自然是要加速前行，我在大二的时候，就用豆瓣上列出来的经典教科书，把相关的必修专业课给自学完了，效果虽不如老师亲授，但终究有所获。 <!-- raw HTML omitted --></p>
<p>就如我在<a href="https://ramsayleung.github.io/zh/post/2023/%E8%BF%99%E4%BA%9B%E5%B9%B4%E8%B5%B0%E8%BF%87%E7%9A%84%E8%B7%AF_%E4%BB%8E%E5%B9%BF%E5%B7%9E%E5%88%B0%E6%B8%A9%E5%93%A5%E5%8D%8E/">《那些年走过的路，从广州到温哥华》</a>介绍过，而后就走上做项目和实习之路。 <!-- raw HTML omitted --></p>
<p>对于【直觉依赖模式】的学子来说，我觉得了解迷宫游戏规则最好的方式是和同系的学长学姐交流，因为他们曾处在和你同样的境况，又就读于相同的院校和专业，并且他们先于我们两到三年去探索这个迷宫，所以他们能提供最切实可行，并且可复制的路径。 <!-- raw HTML omitted --></p>
<h3 id="答案并不唯一"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> 答案并不唯一</h3>
<p>正如作者所言，这个迷宫会有不同的出口，在大学过的每一天会将学子领入不同的小路。 <!-- raw HTML omitted --></p>
<p>二十岁的我可能希望可以从自己愿景的出口走出来，三十岁的我却有了不一样的看法，能找到自己的迷宫出口固然可贵，但是探索迷宫的过程也相当珍贵，大可不必那么功利，迷茫也是人生常态。 <!-- raw HTML omitted --></p>
<p>【就业】，【升学】，【考研】只是社会的评判标准，做个有趣的人也未尝不可。 <!-- raw HTML omitted --></p>
<h2 id="大学之后"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 大学之后</h2>
<p>在大学的时候，受学长们的影响，觉得能去BAT（Baidu，Alibaba，Tencent）的大厂，就算是个很好的出路了。 <!-- raw HTML omitted --></p>
<p>所以当时一心把去大厂当作毕业的目标，当拿到个A厂Offer之后，就没有面试其他公司，自然也没有offer来compete。 <!-- raw HTML omitted --></p>
<p>但是我从来没有想过，拿到Offer，入职之后，又该如何？ <!-- raw HTML omitted --></p>
<p>再追求升职加薪，面向晋升编程？ <!-- raw HTML omitted --></p>
<p>以前是把高考结束，考上大学当作是马拉松的终点，上大学之后又把拿Offer当作迷宫的出口？ <!-- raw HTML omitted --></p>
<p>如果人生是个没有出口的迷宫呢。 <!-- raw HTML omitted --></p>
<h3 id="迷宫并没有出口"><!-- raw HTML omitted -->4.1<!-- raw HTML omitted --> 迷宫并没有出口</h3>
<p>作者说大学是个有多个出口的迷宫，如果把迷宫的概念延伸出来，每个人的人生从大学之后就都是迷宫了（如果不上大学，那么出路就更早分化），高中之后，就不再是以成绩作为唯一的标准。 <!-- raw HTML omitted --></p>
<p>当标准都不一样，就更没有办法衡量什么是【最好】的路，只有最适合自己的路。 <!-- raw HTML omitted --></p>
<p>享受探索迷宫的过程也可成为乐趣。 <!-- raw HTML omitted --></p>
<h3 id="路要怎么走"><!-- raw HTML omitted -->4.2<!-- raw HTML omitted --> 路要怎么走</h3>
<p>过年前和发小喝茶聊天，聊到了他为人夫，为人父的事情，他提到当初他在产房等待女儿出生的时候，护士和他聊天的事： <!-- raw HTML omitted --></p>
<p>护士问，他是否是95后，他说是。 <!-- raw HTML omitted --></p>
<p>护士说，95后现在都不想生孩子了，觉得压力很大。 <!-- raw HTML omitted --></p>
<blockquote>
<p>我：那你有同样的感觉么？ <!-- raw HTML omitted --></p>
<p>发小：有阿，也觉得压力很大。 <!-- raw HTML omitted --></p>
<p>我笑道：那你还生？ <!-- raw HTML omitted --></p>
<p>发小笑回：世界上只有一种英雄主义，那就是认清生活的真想之后，继续热爱生活。 <!-- raw HTML omitted --></p>
</blockquote>
<p>在两个人的笑声中，听到发小说出罗曼罗兰的名句，觉得发小已经活出这句话的精髓了。 <!-- raw HTML omitted --></p>
<p>写在最后，鸡汤一下： <!-- raw HTML omitted --></p>
<p>路要怎么走，每个人都会有自己的选择，但了解迷宫的规则的【学子】，路可以走得更加自在。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/v2-470dc54d213bb4ae958c9adda21b961b_1440w.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="参考"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 参考</h2>
<ul>
<li><a href="https://book.douban.com/subject/36190074">《金榜题名之后：大学生出路分化之迷》</a> <!-- raw HTML omitted --></li>
<li><a href="https://www.lifeweek.com.cn/article/33584">《我上了985，211，才发现自己一无所有》</a> <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>登陆加拿大一年后的体会</title>
      <link>https://ramsayleung.github.io/zh/post/2024/%E7%99%BB%E9%99%86%E5%8A%A0%E6%8B%BF%E5%A4%A7%E4%B8%80%E5%B9%B4%E7%9A%84%E4%BD%93%E4%BC%9A/</link>
      <pubDate>Sun, 25 Feb 2024 19:46:00 -0800</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2024/%E7%99%BB%E9%99%86%E5%8A%A0%E6%8B%BF%E5%A4%A7%E4%B8%80%E5%B9%B4%E7%9A%84%E4%BD%93%E4%BC%9A/</guid>
      <description>1 前言 不知不觉，落地加拿大已经快一年，套用句老话，真的是光阴似箭。 想来蜜月期已过，可以去掉刚落地时【兴奋】和【新奇】的滤镜，从道听途说，到雾</description>
      <content:encoded><![CDATA[<h2 id="前言"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前言</h2>
<p>不知不觉，落地加拿大已经快一年，套用句老话，真的是光阴似箭。 <!-- raw HTML omitted --></p>
<p>想来蜜月期已过，可以去掉刚落地时【兴奋】和【新奇】的滤镜，从道听途说，到雾里看花，再分享自己在加拿大的亲身经历 <!-- raw HTML omitted --></p>
<p>本文算是<a href="https://ramsayleung.github.io/zh/post/2023/%E8%BF%99%E4%BA%9B%E5%B9%B4%E8%B5%B0%E8%BF%87%E7%9A%84%E8%B7%AF_%E4%BB%8E%E5%B9%BF%E5%B7%9E%E5%88%B0%E6%B8%A9%E5%93%A5%E5%8D%8E/">《那些年走过的路，从广州到温哥华》</a>和<a href="https://ramsayleung.github.io/zh/post/2023/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E4%B9%8B%E5%88%9D%E4%BD%93%E9%AA%8C/">《温哥华的初体验》</a>的后续。 <!-- raw HTML omitted --></p>
<h2 id="work-life-balance"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> Work Life Balance</h2>
<p>自我工作以来，基本就是在体验995的工作节奏，我曾经无数次【幻想】过，如果我能每天5点下班，我的生活会是怎么样的？ <!-- raw HTML omitted --></p>
<p>我会有接近6-7个小时的空闲时间，我会把这些时间用来干什么呢？ <!-- raw HTML omitted --></p>
<p>当我不曾拥有时，我总是在不断地想象。 <!-- raw HTML omitted --></p>
<p>但当我真的可以5点，甚至4点多下班的时候，我并没有我自己想象的那般激动，欣喜若狂，而是当作理所当然，很平淡地接受。 <!-- raw HTML omitted --></p>
<p>毕竟我所在的BC省，法定工作时间都只是7.5个小时，我朝九晚五，甚至有点高于本地平均水平，尤其是我在北美著名的【血汗工厂】打工，需要Oncall，甚至比本地公司还要卷，所以我开始觉得朝九晚五工作时间有点长。 <!-- raw HTML omitted --></p>
<p><strong><strong>人阿，就是贪婪，总是会得寸进尺，得陇望蜀。</strong></strong> <!-- raw HTML omitted --></p>
<p>我5点下班之后，我可以【奢侈】地花一个小时去做晚餐，然后吃完晚餐和舍友一起看个把小时的电视，一边撸着猫一边吐槽今天的工作内容；或者在天气放晴的时候，和舍友在附近的公园饭后溜圈，再考虑下明天要学习哪个视频，做点什么新菜。 <!-- raw HTML omitted --></p>
<p>饭后到睡前的时间，花一到两小时，学习一下新的技术，Swift或者Ruby on Rails，或者读读新书，又或者和家人亲友视频聊个天，互诉衷肠。 <!-- raw HTML omitted --></p>
<p><strong><strong>原来那些失去的，用于加班的时间，重新获得后，也只是把它还给生活本身。</strong></strong> <!-- raw HTML omitted --></p>
<h2 id="英语"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 英语</h2>
<p>未落地加拿大时，最最忧心的问题就是自己的英语不过关，无法正常地与人沟通交流，也无法正常工作。 <!-- raw HTML omitted --></p>
<p>毕竟我此前没有考过雅思，也没有在纯英文的环境中生活过，不知道自己英语水平如何。 <!-- raw HTML omitted --></p>
<p>落地之后，强迫自己开口对话，虽然难免会出现词不达意和【执笔忘字】的情况，但终究是敢开口说话了， <!-- raw HTML omitted -->
难免会遇到不认识的词不标准的发音，但是快速纠错之后，情况就慢慢在好转，脸皮厚一些就好了。 <!-- raw HTML omitted --></p>
<p>后来还花了两周时间准备了雅思考试，顺便测试下自己的英语能力，然后考了个7分，好像还行。 <!-- raw HTML omitted --></p>
<p>刚开始产品经理们开会，他们都是美国人，是真能扯，语速也真的快，好像高中时候的英语听力一样，只看到两个人不停地在张嘴说话，大脑一片空白。 <!-- raw HTML omitted --></p>
<p>到后面熟悉公司的黑话之后，情况也在慢慢变好，也听懂他们在说什么了，的确也是在扯。 <!-- raw HTML omitted --></p>
<p>从以前非常紧张与同事1:1开会，当现在已经能主动和同事拉会1:1，我可以感觉到自己的听力和口语能力也在不断地提高。 <!-- raw HTML omitted --></p>
<p>说到底，外语也不是什么特别的秘技，也只是种用进废退技能而已。 <!-- raw HTML omitted --></p>
<h2 id="惊喜"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 惊喜</h2>
<p>人言洛阳花似锦，偏我来时不逢春。 <!-- raw HTML omitted --></p>
<p>想来入行前，都是听说互联网公司的各种红利，但是当然真正来到这个行业时，才发现自己啥红利都没有吃上，来了都是当人矿的，起了个大早，赶了个晚集，还碰上各种【奇遇】。 <!-- raw HTML omitted --></p>
<p>想我22年中面试的时候，那时还在北美【大放水】，通货膨胀的期间，各种大包满天飞，我却因为 international hire的原因，只赶上个low ball 包，因为我此前已经遇过很多次，已经可以泰然处之。 <!-- raw HTML omitted --></p>
<p>但是到23年初，受美国加息降通涨的影响，Meta和Twitter开了个坏头，北美的互联网都开始裁员，我司也不例外，不仅是裁员，连发出去的Offer开始撤回或者延期，然后我的Offer 也被影响了，原来面的组岗位被取消了。 <!-- raw HTML omitted --></p>
<p>我当时的心情不算是五雷轰顶，也算得上是晴天霹雳。 <!-- raw HTML omitted --></p>
<p>还好找到新的组接收，然后岗位被搬到另外一个新组，无论如何，先干着吧，不至于还没入职就失业，起码干的事情是新的，一切都是从0开始。 <!-- raw HTML omitted --></p>
<h2 id="什么tm的叫惊喜"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 什么TM的叫惊喜</h2>
<p>在新组，我是组里的第一个SDE（软件工程师），之前的两位组员都是DE（数据工程师），manager也是刚升任成经理的，甚至我入职时，他的 title都还没有变成 manager。 <!-- raw HTML omitted --></p>
<p>马上我发现，组里是新人，新组，老代码，人是新的，但是代码却是历史代码，我们需要去维护这些历史代码，但是没有人能解释其中的逻辑为什么要这么写？ <!-- raw HTML omitted --></p>
<p>紧接着，我发现，代码主体都是SQL，项目的逻辑隐藏在数以万行计的SQL代码中，因为SQL的抽象程度高，就更难以理解业务逻辑了。 <!-- raw HTML omitted --></p>
<p>4月底，在我入职不到3周，我就被安排成为一个新项目的 owner，然后被告知要在半年后的 Re:Invent发布，当时我甚至不知道什么是 Re:Invent. <!-- raw HTML omitted --></p>
<p>后来才被告知，Re:Invent之于我司，犹如【WWDC】之于Apple，【微信公开课】之于微信，都是用来发布新产品的全球大会。 <!-- raw HTML omitted --></p>
<p>我当时心想，老板还真的看得起我嘛。 <!-- raw HTML omitted --></p>
<p>本着【能力越大，责任越大】的自嘲心理，我就这样接手了这个项目，成为了Owner。 <!-- raw HTML omitted --></p>
<p>和我的直属manager，总监以及产品沟通之后发现，他们似乎只要求要做这样一个产品，但是这个产品是什么， <!-- raw HTML omitted -->
应该怎么做，都是完全没有概念，也没有文档。 <!-- raw HTML omitted --></p>
<p>在我的认知中，一个项目从提出到上线的完整生命周期应该包括以下的部分： <!-- raw HTML omitted --></p>
<ol>
<li>某位领导或者产品经理提出新产品的想法 <!-- raw HTML omitted --></li>
<li>完善 use case, 细化想法 <!-- raw HTML omitted --></li>
<li>产品的各个利益方（stakeholders），或者叫涉众达成共识，领导层面获批 <!-- raw HTML omitted --></li>
<li>产品出需求文档，明确要做什么，具体的业务规则是什么 <!-- raw HTML omitted --></li>
<li>技术评估需求可行性 <!-- raw HTML omitted --></li>
<li>技术出设计文档 <!-- raw HTML omitted --></li>
<li>技术根据设计方案给出排期 <!-- raw HTML omitted --></li>
<li>技术开发需求，自测，内部上线 <!-- raw HTML omitted --></li>
<li>产品及涉众验收产品 <!-- raw HTML omitted --></li>
<li>内测及公测上线 <!-- raw HTML omitted --></li>
</ol>
<p>然而，我现在拿到手的只是一个模糊的需求概念和上线的日期，没有详细的需求文档，口头描述了大概要做什么。 <!-- raw HTML omitted --></p>
<p>我只能不停地追着产品经理和manager问他们我要做什么，能否先给我个需求文档，对于需求文档，产品经理也不会直说没有， <!-- raw HTML omitted -->
只是会说解释一通后，让你意会到没有，我只能当练习英语听力。 <!-- raw HTML omitted --></p>
<p>最后我被告知，先把senior data engineer写的一大段SQL转成服务代码，把End-to-End的结果跑出来再说。 <!-- raw HTML omitted --></p>
<p>我就不懂，既然SQL都能跑了，还要我写个服务来跑SQL呢？ <!-- raw HTML omitted --></p>
<p>咨询了一番，我还是没得出个所以然，最后只能是按照这段SQL来写设计文档，并根据设计方案开发服务。 <!-- raw HTML omitted --></p>
<p>心里第一次浮起疑问：【贵司的做事方式就是这样的么？它是怎么做到这种规模的？】 <!-- raw HTML omitted --></p>
<p>7月初，美国转来了一位L6的 senior SDE还有一位L5的SDE也加入到项目里面，以缓解资源不足的问题。 <!-- raw HTML omitted --></p>
<p>加入后不久，这两位工程师也问起了需求文档的事，得到的回复也是言不及没有需求文档，意含没有需求文档。 <!-- raw HTML omitted --></p>
<p>没有需求文档实在是没法干活，最后是我们三个技术开发溱一起，每个人把自己对需求的理解一人一句写下来，也算是人生新经历了。 <!-- raw HTML omitted --></p>
<p>7月底，服务End-to-End 跑通，将结果呈给总监与产品经理，然后总监和产品经理反馈这不是他们要的，要求修改需求。 <!-- raw HTML omitted --></p>
<p>8月，根据修改后的需求重新设计服务，分成三个模块，三个工程师每人负责一个模块。 <!-- raw HTML omitted -->
总监和产品经理再修改需求，并要求开发进行建模，但是新需求的模型不具备可行性，产品经理无法给出具体的业务规则，最后开发无法建模，导致新需求被搁置。 <!-- raw HTML omitted --></p>
<p>9月，主力产品经理突然宣布离职，此时离Re:Invent 不到两个月。 <!-- raw HTML omitted --></p>
<p>10月初，开发按照变更后的需求完成服务开发，然后发现服务使用的源数据全部是脏数据，服务结果不可用，团队已有使用该数据源的服务也是错的，开发紧急调研，再切换到新数据源。 <!-- raw HTML omitted --></p>
<p>11月初，所有服务组件万事具备，只待Re:Invent东风，然后被产品经理告知，我们的项目不能发布，因为没有在领导层面获得批准。 <!-- raw HTML omitted --></p>
<p>所以让开发紧赶慢赶，干了半年的大项目，连审批都还没有通过。 <!-- raw HTML omitted --></p>
<hr>
<p>开发项目期间不停地浮起疑问，【按照这种做事方式，这家公司是怎么做到这种规模的？】 <!-- raw HTML omitted --></p>
<p>但做人不能半途而废，过河抽桥，所以即使心中百般疑问和不解，我依旧是尽心尽力把这个项目做完。 <!-- raw HTML omitted --></p>
<p>在做完这个项目之后，我就谋求转组了，这样的做事方式着实不是我的风格，我主观认为也非长久之计。 <!-- raw HTML omitted --></p>
<hr>
<p>1月，GM（老板的老板的老板）离职。 <!-- raw HTML omitted --></p>
<p>2月，总监也离开了这个部门。 <!-- raw HTML omitted --></p>
<h2 id="裁员阴云"><!-- raw HTML omitted -->6<!-- raw HTML omitted --> 裁员阴云</h2>
<p>自从2022年起，中美的互联网行业都笼罩在裁员的阴云之下，只是两者背后的原因各种不同。 <!-- raw HTML omitted --></p>
<p>朋友们在我登陆加拿大之后也和跟我吐槽国内环境变差，红利期已过，我只是个臭写代码的，也分析不出其背后的原因。 <!-- raw HTML omitted --></p>
<p>但是我知道的，大洋彼岸的北美大厂也在持续裁员，首当其冲的就是Google等大厂， <!-- raw HTML omitted -->
在人们2024年不要再有裁员的期待中，1月Google就以裁员来开年，真是【合家富贵】。 <!-- raw HTML omitted --></p>
<p>疫情时期的【大放水】，导致大厂们都用大包疯狂扩张，为了抑制通胀而采取的加息措施让企业们紧缩信贷， <!-- raw HTML omitted -->
压减成本，而人力成本在互联网大厂中可谓是占大头，然后在Meta和Twitter的带头下，开始挥刀裁员。 <!-- raw HTML omitted --></p>
<p>开始时，各大厂裁起员来还有些扭捏，裁完人公司高层还会写信安慰员工，说就裁这一波，高层还会出来道歉背锅。 <!-- raw HTML omitted --></p>
<p>然而裁到现在，已经变得明目张胆，和肆无忌惮，像Google这种， <!-- raw HTML omitted -->
都宣布2024年会持续裁员，还有其他大厂，就没有正式宣布裁员和什么时候结束裁员，就这么裁着。 <!-- raw HTML omitted --></p>
<p>毕竟在缺乏增长点情况下，裁员能缩减开支，让财报好看。 <!-- raw HTML omitted --></p>
<p>至于打工人们的看法，从来就不会有人在乎的。 <!-- raw HTML omitted --></p>
<p>所以「工作」也回归到它本身的意义上，这也只是份工作而已，It&rsquo;s just a job，不要赋予工作过多的意义。 <!-- raw HTML omitted --></p>
<p>「得益于」裁员，我现在对工作的看法已经很佛系了，以前那种拼命卷，想拿到好绩效证明自己的想法已经不复存在了，也难怪朋友会说我现在心态变好了。 <!-- raw HTML omitted --></p>
<h2 id="万税之国"><!-- raw HTML omitted -->7<!-- raw HTML omitted --> 万税之国</h2>
<p>虽然在来加拿大之前听说过加拿大的税非常高和多，但是只有从我的钱包把钱拿走，才能切实体会到什么叫【万税之国】。 <!-- raw HTML omitted --></p>
<p>除了薪资收入30+%的个人所得税外，还有日常消费12%的消费税，15%的酒税， <!-- raw HTML omitted -->
以及超过50%的资本所得税（比如银行存款利息，基金，股票收益等等），各种五花八门，名目繁多的税种。 <!-- raw HTML omitted --></p>
<p>虽然知道【死亡和缴税无可避免】，但是死亡是一次性的，缴税却是持续性的。 <!-- raw HTML omitted --></p>
<p>更何况，交税后的许多社会福利却是和收入挂钩的，你的收入越低，能享受到的福利就越多，而富人又有非常多的避税手段。 <!-- raw HTML omitted --></p>
<p>像 daycare, 牛奶金，低保这些，都是和每个人的收入挂钩，低就有，高就没有。 <!-- raw HTML omitted --></p>
<p>所以说下来，而低收入者可以少交税，却问政府要钱要福利；富人又可以避税，只有老实打工的中产是被收割的，福利又少。 <!-- raw HTML omitted --></p>
<p>难怪人们总说，加拿大适合躺平吃福利，不适合来挣钱，带资来加拿大的可以靠吃政府福利过得非常滋润。 <!-- raw HTML omitted --></p>
<h2 id="医疗"><!-- raw HTML omitted -->8<!-- raw HTML omitted --> 医疗</h2>
<p>加拿大的医疗体系是吃全民大锅饭，免费医疗。 <!-- raw HTML omitted --></p>
<p>免费的饭一般都不会很好吃，也不会很容易吃到。 <!-- raw HTML omitted --></p>
<p>加拿大的医疗体系我还没有机会亲身体验过，但是舍友有过几次的问诊纪录，原来抽个血化验排队等个两-三个小时着实是件很稀松平常的事。 <!-- raw HTML omitted --></p>
<h2 id="此处并非天堂"><!-- raw HTML omitted -->9<!-- raw HTML omitted --> 此处并非天堂</h2>
<p>世界上不存在天堂，所以如果抱着前往天堂的愿景来加拿大，难免会失望，加拿大也有自身的问题。 <!-- raw HTML omitted --></p>
<p>疫情期间为了保消费实行的【大放水】政策导致持续的高通涨， <!-- raw HTML omitted -->
高企的物价，为了抑制通涨而实行的加息政策而导致高企的利率，7-8%的房贷车贷利率。 <!-- raw HTML omitted --></p>
<p>飙升的房价，虽然待过深圳的我觉得温哥华房价还赶不上深圳， <!-- raw HTML omitted -->
但是对比温哥华本地的中位数收入，温哥华的房价已经远远高于居民的中位数收入，一般人都负担不起了。 <!-- raw HTML omitted --></p>
<p>以房租举例，我现在与舍友合租，房租以人民币计价，大概是我之前在深圳的四倍。 <!-- raw HTML omitted --></p>
<p>增加的移民人口与减少的工作机会，各种【苛捐杂税】让带资过来的移民和本地的金主都不需要创办企业， <!-- raw HTML omitted -->
资本没法流动起来，自然不能创造就业岗位，随着移民人数的增加，以及激进的难民接收政策，就进一步加剧【僧多粥少】的问题。 <!-- raw HTML omitted --></p>
<p>而加息导致的企业的信贷紧缩，也抑制企业扩张，甚至导致企业缩减规模，进行裁员，又推进了失业的严重程度。 <!-- raw HTML omitted --></p>
<p>而政府对失业人数增多的应对措施竟然是【头痛治脚】地增加失业保险的缴纳基数，而非想办法重启经济活力，进一步扩大就业市场。 <!-- raw HTML omitted --></p>
<p>持续增多的各种税收与各种层出不穷的问题，也难怪认识的加拿大人都对现在的政府相当不满。 <!-- raw HTML omitted --></p>
<h2 id="好山好水好寂寞"><!-- raw HTML omitted -->10<!-- raw HTML omitted --> 好山好水好寂寞</h2>
<p>温哥华的自然风光的确很美，依山望海。 <!-- raw HTML omitted --></p>
<p>经历过加拿大的冬天之后，我能理解为什么当地人在夏天都一股脑地出去玩，因为夏天不玩，冬天真的没得玩。 <!-- raw HTML omitted --></p>
<p>温哥华的冬天，只有雪和雨，阴冷潮湿，早上八点半日出，下午3点半日落，日照时间也只有7-8个小时。 <!-- raw HTML omitted --></p>
<p>冬天除了滑雪和滑冰外，基本没有太多其他种类的户外活动。 <!-- raw HTML omitted --></p>
<p>而温哥华的夏天要到接近7月份才来临，那时候大家可以露营，划船，登山。 <!-- raw HTML omitted --></p>
<p>很多店铺晚上6-7点就会关门，邮递员周末也不会送信，更不会有广州那种深夜大排档的盛况。 <!-- raw HTML omitted --></p>
<p>可能是因为温哥华相对国内人少，各种活动和玩法也没有国内花，也难怪有人评价其为【好山好水好寂寞】 <!-- raw HTML omitted --></p>
<h2 id="好脏好乱好热闹"><!-- raw HTML omitted -->11<!-- raw HTML omitted --> 好脏好乱好热闹</h2>
<p>回到国内时的第一感受是，好多人，真的好久没有看到过这么多人。 <!-- raw HTML omitted --></p>
<p>得益于国内相对廉价的人力以及世界工厂的地位，以致于国内相对加拿大拥有价格更便宜，品质更好的产品与服务。 <!-- raw HTML omitted --></p>
<p>即使是深夜，到处也是人头攒动，可以很轻易地朋友玩通宵，到处都是人气和烟火气。 <!-- raw HTML omitted --></p>
<p>所以总会有朋友问我，【后面你会回国么？】 <!-- raw HTML omitted --></p>
<p>我只能说，未来的事无法计划，我也没有一个确切的答案。 <!-- raw HTML omitted --></p>
<p>当初想要出来只是某些契机因缘际会的结果，未来的事谁也不知道，只能拭目以待。 <!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>胡说：从西游记看职场感悟</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E4%BB%8E%E8%A5%BF%E6%B8%B8%E8%AE%B0%E7%9C%8B%E8%81%8C%E5%9C%BA%E6%84%9F%E6%82%9F/</link>
      <pubDate>Sat, 16 Dec 2023 09:46:00 -0800</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E4%BB%8E%E8%A5%BF%E6%B8%B8%E8%AE%B0%E7%9C%8B%E8%81%8C%E5%9C%BA%E6%84%9F%E6%82%9F/</guid>
      <description>1 前言 前几天在讨论刷题工作，分享职场经历（也就是水群）的群里，有位「老好人」senior 工程师向大家倾诉他的职场烦恼。 他作为项目的后端负责人</description>
      <content:encoded><![CDATA[<h2 id="前言"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前言</h2>
<p>前几天在讨论刷题工作，分享职场经历（也就是水群）的群里，有位「老好人」senior 工程师向大家倾诉他的职场烦恼。 <!-- raw HTML omitted --></p>
<p>他作为项目的后端负责人，把后端的活都又快又好地干完了，然后前端毫无进度，大家看起来还没有什么责任心和紧迫感。 <!-- raw HTML omitted --></p>
<p>如果项目不做成，原有的客户都会决定放弃公司的产品，转投其他公司。 <!-- raw HTML omitted --></p>
<p>所以这位老哥就会忍不住在干好自己的活的同时，去前端帮帮忙. <!-- raw HTML omitted --></p>
<p>然后过了一段时间之后，不干活的前端们开始疯狂向后端推卸责任，明里暗里，阴阳怪气指责后端问题，导致项目被block住. <!-- raw HTML omitted --></p>
<p>群友们纷纷给自己的建议，有建议和经理1:1 把事情捅出来的；有建议下次提前和经理同步进度，暴露风险的。 <!-- raw HTML omitted --></p>
<p>此时，老道的群主也出来给出自己的建议： <!-- raw HTML omitted --></p>
<ol>
<li>找到自己工作的亮点，要把亮点展示给老板们，然后离这群不干活的人远点，有啥要求就去捧杀下他们，说他们能力强，进度喜人，自己就不过去拖后腿了 <!-- raw HTML omitted --></li>
<li>通过提管理手段来暴露他们的问题，而不是直接去和经理说谁谁不好，口说无凭的; 代码质量差就多组织代码review, 没进度就每周或每两周review 进度, 没产出就建议review 代码量和设计文档. <!-- raw HTML omitted --></li>
<li>如果没人听自己的建议，那就放慢点节奏，自己找点事消磨下时间，总不能指望没人重视自己的项目，还为它夙兴夜寐 <!-- raw HTML omitted --></li>
</ol>
<p>用群主的原话来总结： <!-- raw HTML omitted --></p>
<blockquote>
<p>银行被抢了，是冲上去和歹徒搏斗，牺牲了还要为是不是工伤扯皮？还是顺便把自己和领导亏空的那部分也算在损失里，提拔一下？ <!-- raw HTML omitted --></p>
</blockquote>
<p>群主的话可谓是振聋发聩。 <!-- raw HTML omitted --></p>
<p>当然，企业老板听了可能会不高兴，觉得给了员工工资，即使公司搞996，搞降本增效，裁员减薪，员工也应该献出自己的心脏。 <!-- raw HTML omitted --></p>
<p>因为我总是读些乱七八糟的东西，所以我思绪比较容易飞扬，总是会联想到一些不搭边的东西。 <!-- raw HTML omitted --></p>
<p>群主的话让我联想到了《西游记》，如果以职场视角来打开《西游记》，就会发现完全不一样的内容，也解了我的心头之惑。 <!-- raw HTML omitted --></p>
<h2 id="胡说西游记"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 胡说西游记</h2>
<p>年少时读《西游记》，读到的只是神魔鬼怪，孙悟空如何大战各路觊觎唐僧肉的妖魔鬼怪，一路通关刷副本护送师父西天取经的故事。 <!-- raw HTML omitted --></p>
<p>现在想来，如果《西游记》只是日本少年热血漫画的内容类似，又是如何被位列中国的四大名著之一的呢？ <!-- raw HTML omitted --></p>
<p>有人说西游记的仙魔志怪只是皮，骨是人性，所以才能经久不衰，流传数百年。 <!-- raw HTML omitted --></p>
<p>那么人性又体现在哪呢？ <!-- raw HTML omitted --></p>
<h3 id="困惑"><!-- raw HTML omitted -->2.1<!-- raw HTML omitted --> 困惑</h3>
<p>先来看下我曾经困惑的地方。 <!-- raw HTML omitted --></p>
<p>每次唐僧师徒落难，孙悟空营救未果，都向去天上的神仙，或者去地府的阎王救助，众人总是口称「大圣爷」， <!-- raw HTML omitted -->
恭敬相待，殷勤相从，基本是有求必应。 <!-- raw HTML omitted --></p>
<p>年少时觉得合情合理，因为孙悟空是「齐天大圣」，所谓众神都小心应付着。 <!-- raw HTML omitted --></p>
<p>出来打工之后，才意识到这些个情节非常不合理： <!-- raw HTML omitted --></p>
<p>按理说天上的众神都位列仙班，都是「体制内」有头有脸的人物， <!-- raw HTML omitted -->
哪天来了个石头蹦出来的破落户，连个「编制」都没有，敢自封「齐天大圣」， <!-- raw HTML omitted -->
还把我们的机关单位大闹了一场，让我们在领导面前丢光了脸面，连大领导「玉帝」都被牵连了。 <!-- raw HTML omitted --></p>
<p>现在他有事要来求我们帮忙， <!-- raw HTML omitted -->
谁有空谁帮，反正我手上的事情是非常紧急的，会影响到万千生民的，不比你救个师父重要？ <!-- raw HTML omitted --></p>
<p>你自己不是很能么，自己去救嘛，找我们干嘛？ <!-- raw HTML omitted --></p>
<p>有人可能会觉得我以「小人」之心揣度「神仙」之腹，人家都是「神仙」了，还会计较这些嘛？ <!-- raw HTML omitted --></p>
<p>肯定是能修炼到喜、怒、哀、惧、爱、恶、欲七情皆去的境界。 <!-- raw HTML omitted --></p>
<p>只是《西游记》中有明确描述，「神仙」并非是没有七情六欲的。 <!-- raw HTML omitted --></p>
<p>在《西游记》的结尾，唐僧师徒历尽艰辛，终于到了灵山见佛祖，得偿所愿要把真经取回去，却遇到佛祖座下弟子阿傩，迦叶索贿。 <!-- raw HTML omitted --></p>
<p>他们索贿不成，甚至只给了唐僧师徒无字经让他们带回去。 <!-- raw HTML omitted --></p>
<p>「佛」犹如此，「神」何以堪？ <!-- raw HTML omitted --></p>
<h3 id="涂生死簿"><!-- raw HTML omitted -->2.2<!-- raw HTML omitted --> 涂生死簿</h3>
<p>在孙悟空在菩提祖师学到学到出神入化的神通和七十二变的本领后， <!-- raw HTML omitted -->
为了改变自己以及猴子猴孙们都逃避不了生老病死的命运，去地府把生死簿中，把猴属之类，但有名者，一概勾之： <!-- raw HTML omitted --></p>
<blockquote>
<p>悟空道：“我也不记寿数几何，且只消了名字便罢。取笔过来。” <!-- raw HTML omitted --></p>
<p>那判官慌忙捧笔，饱掭浓墨。 <!-- raw HTML omitted --></p>
<p>悟空拿过簿子，把猴属之类，但有名者，一概勾之。捽下簿子道：“了帐，了帐，今番不伏你管了。”一路棒，打出幽冥界。 <!-- raw HTML omitted --></p>
<p>那十王不敢相近，都去翠云宫，同拜地藏王菩萨，商量启表，奏闻上天，不在话下。 <!-- raw HTML omitted --></p>
</blockquote>
<p>相当于孙悟空把地府这个机构最重要的账本都给改没了，阎王这个主管相当于严重渎职啊，负有重大管理责任! <!-- raw HTML omitted --></p>
<p>那么为什么每次孙悟空来找阎王，阎王都毕恭毕敬的呢？ <!-- raw HTML omitted --></p>
<p>以前觉得是阎王怕了孙悟空，所以因惧生敬。 <!-- raw HTML omitted --></p>
<p>现在联想到群主的话，意识到阎王不但不会因失职而沮丧，并记恨孙悟空，反而会乐得鼻涕泡都出来。 <!-- raw HTML omitted --></p>
<p>孙悟空就是「抢劫银行」的劫匪阿，自己有多少亏空和前科， <!-- raw HTML omitted -->
有什么亲戚好友免除死期的，有什么用钱换阳寿的事，全部都可以算到孙悟空头上。 <!-- raw HTML omitted --></p>
<p>有审计机构过来审查，我都可以说是被孙悟空涂掉的。 <!-- raw HTML omitted --></p>
<p>有这么个冤大头，阎王自然开心得不行，可能阎王他父亲都没有对他这么好，在工作上这么关照他。 <!-- raw HTML omitted --></p>
<h3 id="纵天马"><!-- raw HTML omitted -->2.3<!-- raw HTML omitted --> 纵天马</h3>
<p>在孙悟空在东海夺取了「定海神针」作「如意金箍棒」，大闹森罗殿，私改生死簿后，玉帝大为震惊，然后听从建议， <!-- raw HTML omitted -->
招安了孙悟空，封为「弼马温」. <!-- raw HTML omitted --></p>
<p>「弼马温」就是御马监正堂管事，手下还有监丞、监副、典簿、力士等大小官员不少人，管辖天马千匹, 所以是个管后勤的职位。 <!-- raw HTML omitted --></p>
<p>原来孙悟空以为这是个「一品」大官，最后却在旁人口中知晓，这个是个未入流的小官，不禁大怒，把公案推倒，在天河放走了所有的天马。 <!-- raw HTML omitted --></p>
<p>想来天马虽然名为天马，也不是以云雾为食的，想必也要有后勤草料供应，还有各种马具，马廊等配套设施。 <!-- raw HTML omitted --></p>
<p>现在孙悟空把天马都放了，那么属下的亏空，上下游的贪墨，又可以把锅栽在孙悟空头上了。 <!-- raw HTML omitted --></p>
<p>虽然我们中饱私囊，1000匹天马的财政拨款，贪了900匹，实际只有100匹，但是你孙悟空把马都放了，我们就咬死说马就是有1000匹的。 <!-- raw HTML omitted --></p>
<p>好比粮仓主管离任，对上官不满，放火把粮仓烧了，不管里面是陈米，沙土还是精米，下属一概都说是精米，那都是主管的责任了。 <!-- raw HTML omitted --></p>
<h3 id="关系"><!-- raw HTML omitted -->2.4<!-- raw HTML omitted --> 关系</h3>
<p>唐僧，转世前为金蝉子，如来佛祖的二弟子，因犯错被贬，转世成为唐僧, 要通过取真经，重新成佛，回来佛祖身边。 <!-- raw HTML omitted --></p>
<p>也就是说，取经队伍里面，带头那个是如来董事长的亲信秘书，和董事长关系密切。 <!-- raw HTML omitted --></p>
<p>而取经也变成了一件在大领导「玉帝」CEO和如来董事长那挂上号的，核心KPI项目了. <!-- raw HTML omitted --></p>
<p>那么当孙悟空来求助的时候，也就变成了一件可以在CEO和董事长那里展示自己手段的事了。 <!-- raw HTML omitted --></p>
<p>既能露脸，也能赚credit. <!-- raw HTML omitted --></p>
<p>如果能帮上忙，那么就可以在领导面前露把脸，展示下自己的本领； <!-- raw HTML omitted -->
如果帮不上忙，也没什么大碍，你看孙悟空他业务能力多强，他都求助，肯定不是啥容易啃的骨头，我处理不成也很正常。 <!-- raw HTML omitted --></p>
<p>反正有事没事去老板面前刷刷脸总是好的，你没看到，领导叫踢球，群里一群人响应么？ <!-- raw HTML omitted --></p>
<p>你觉得他们是想踢球呢，还是想和领导踢球呢？ <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 总结</h2>
<p>经典之所以能经得起时间的洗礼，历久弥新，大抵是因为总有人能拿书里的事，说自己的话吧。 <!-- raw HTML omitted --></p>
<hr>
<h3 id="历史文章精选"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 历史文章精选</h3>
<ul>
<li>旅加经历 <!-- raw HTML omitted -->
<ul>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E8%BF%99%E4%BA%9B%E5%B9%B4%E8%B5%B0%E8%BF%87%E7%9A%84%E8%B7%AF_%E4%BB%8E%E5%B9%BF%E5%B7%9E%E5%88%B0%E6%B8%A9%E5%93%A5%E5%8D%8E/">这些年走过的路：从广州到温哥华</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E4%B9%8B%E5%88%9D%E4%BD%93%E9%AA%8C/">加拿大之初体验</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E8%80%83%E9%A9%BE%E7%85%A7%E7%9A%84%E7%BB%8F%E5%8E%86/">加拿大考驾照的经历</a> <!-- raw HTML omitted --></li>
</ul>
</li>
<li>历史与思考 <!-- raw HTML omitted -->
<ul>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/">为什么梦想买不起，故乡回不去</a>(和谐版本, 原版本<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>) <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%B6%A6%E5%90%91%E4%BD%95%E6%96%B9_%E4%B8%8D%E5%AE%8C%E5%85%A8%E8%82%89%E8%BA%AB%E7%BF%BB%E5%A2%99%E6%8C%87%E5%8C%97/">润向何方：不完全肉身翻墙指北</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E7%9A%87%E5%B8%9D%E4%B8%8E%E5%AE%98%E5%83%9A/">皇帝与官僚：「上面」与「下面」</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2021/%E5%90%9B%E4%B8%BB%E8%AE%BA/">《君主论》：所谓「帝王心术」</a> <!-- raw HTML omitted --></li>
</ul>
</li>
<li>工具与分享 <!-- raw HTML omitted -->
<ul>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%88%91%E7%9A%84%E5%86%99%E4%BD%9C%E6%B5%81/">我的写作流</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%88%91%E7%9A%84%E7%94%BB%E5%9B%BE%E6%B5%81/">我的画图流：画图工具与技巧分享</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%88%91%E7%9A%84%E6%90%9C%E7%B4%A2%E6%B5%81/">我的搜索流：高效搜索经验分享</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2022/feynman_technique/">最好的学习方式：费曼学习法(Feynman Technique)</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2021/%E7%B3%BB%E7%BB%9F%E6%80%9D%E8%80%83/">系统思考：既见树木，又见森林</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/gmail%E5%9C%B0%E5%9D%80%E7%9A%84%E9%9A%90%E8%97%8F%E6%8A%80%E5%B7%A7/">两个鲜为人知的Gmail地址技巧</a> <!-- raw HTML omitted --></li>
</ul>
</li>
<li>职场与思考 <!-- raw HTML omitted -->
<ul>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E4%BB%8E%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E7%A6%BB%E7%BA%BF_%E6%88%91%E5%B8%A6%E8%B5%B0%E4%BA%86%E4%BB%80%E4%B9%88/">那些年，我从微信支付学到的东西</a> <!-- raw HTML omitted --></li>
</ul>
</li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>: <a href="http://ramsayleung.github.io/zh/post/2023/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/">http://ramsayleung.github.io/zh/post/2023/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/</a>  <!-- raw HTML omitted -->&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>加拿大考驾照的经历</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E8%80%83%E9%A9%BE%E7%85%A7%E7%9A%84%E7%BB%8F%E5%8E%86/</link>
      <pubDate>Sun, 17 Sep 2023 17:23:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E8%80%83%E9%A9%BE%E7%85%A7%E7%9A%84%E7%BB%8F%E5%8E%86/</guid>
      <description>1 前言 1.1 「老司机」 在高考之后，未上大学的那段时间，我就在父母的建议之下去考了驾照。 虽然持有驾照已经7-8年的时间，期间甚至驾照过期，都换过一</description>
      <content:encoded><![CDATA[<h2 id="前言"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前言</h2>
<h3 id="老司机"><!-- raw HTML omitted -->1.1<!-- raw HTML omitted --> 「老司机」</h3>
<p>在高考之后，未上大学的那段时间，我就在父母的建议之下去考了驾照。 <!-- raw HTML omitted --></p>
<p>虽然持有驾照已经7-8年的时间，期间甚至驾照过期，都换过一次证件了。 <!-- raw HTML omitted --></p>
<p>所以，以驾龄论，可谓是「老司机」了，但以里程论，还是「新手」，不足一万公里。 <!-- raw HTML omitted --></p>
<p>毕竟在国内上班，可以搭乘公共交通工具，地铁，小电驴或者共享单车都可以组合使用，车不算是必需品。 <!-- raw HTML omitted --></p>
<p>尤其是在还没有买房的情况下，找地方停车都是个问题。 <!-- raw HTML omitted --></p>
<h3 id="北美的车"><!-- raw HTML omitted -->1.2<!-- raw HTML omitted --> 北美的车</h3>
<p>但来到北美之后，发现车的确是必需品。 <!-- raw HTML omitted --></p>
<p>去美国玩的时候，发现美国真的是大农村，地广人稀，生活设施遍布在不同的地方，买个菜都要去几公里之外的超市，没有车真的是寸步难行。 <!-- raw HTML omitted --></p>
<p>相比之下，我所处的温哥华还算是方便，还有地铁和对应的接驳巴士，能满足基本的生活需要，但也仅限于生活需要。 <!-- raw HTML omitted --></p>
<p>例如想去个附近的山登高游玩，地图显示距离17公里，开车30分钟，公交2小时。 <!-- raw HTML omitted --></p>
<p>兼之冬天将近，如果下雪的话，再用两条腿，可以活动的范围就相当有限。 <!-- raw HTML omitted --></p>
<p>诸事安顿下来之后，车的优先级就提上来了；而考虑车的前提条件，就是先有驾照 <!-- raw HTML omitted --></p>
<h3 id="驾考难度"><!-- raw HTML omitted -->1.3<!-- raw HTML omitted --> 驾考难度</h3>
<p>因为中国与加拿大没有驾照互认协议，所以中国的驾照不能直接换成加拿大驾照，所以就能人工去考。 <!-- raw HTML omitted --></p>
<p>前面提到，北美的车是生活必需品，兼之从不同的好友的经历来看，考驾照似乎并不难，何况我又不是不会开车。 <!-- raw HTML omitted --></p>
<p>按照朋友们的描述，在美国，能把车开出去，再安全开回来，就能过了。 <!-- raw HTML omitted --></p>
<p>后面发现，的确如此，但是仅适用于美国，加拿大（或者说温哥华）除外。 <!-- raw HTML omitted --></p>
<p>温哥华20世纪初建城的时候，汽车还不是普遍，设计的路主要是以马车通行为主，所以老城区的路基本都很狭窄。 <!-- raw HTML omitted --></p>
<p>等到20世纪40-50年代，汽车大量普及的时候，最初的城市规划设计师就给出了面向汽车道路的城市规划， <!-- raw HTML omitted -->
但没有被政府接受，重新规划的蓝图就没有实现，所以温哥华城区的路都相当「紧凑」。 <!-- raw HTML omitted --></p>
<p>像BC 99这条去温哥华市中心，每天上下班必塞的高速公路，双向只有中间的一条黄线分隔，车头偏一下就被对面车道的来车给撞了： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/highway-99-south-sign-bc.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>虽然路规划得不怎么样，但是政府还是希望交通尽量高效运行，减少阻塞， <!-- raw HTML omitted -->
而其中的一个手段就是提高司机准入的门槛，让司机在理想条件，尽量以最高限速速度通行。 <!-- raw HTML omitted --></p>
<p>以至于刚从美国转过来的同事说，怎么感觉温哥华的人开车，都那么匆忙呢(rush). <!-- raw HTML omitted --></p>
<p>用舍友的话来说就是， <!-- raw HTML omitted -->
「驾照考试难度，一般与马路杀手数量成正比；马路杀手多的地方，一般都考试难度都比较高。温哥华路况不好，容易培养马路杀手」 <!-- raw HTML omitted --></p>
<p>导致的结果就是，温哥华的驾照考试难度相对较高。 <!-- raw HTML omitted --></p>
<p>但考试难度这个东西很难量化的，每个人驾驶经验也不一样，但以我知道的例子，一位朋友，考了4次才通过，花费了4个月；还有同事的舍友，也考了4次。 <!-- raw HTML omitted --></p>
<h2 id="回炉再造"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 回炉再造</h2>
<p>虽然我在国内也开过车，但是鉴于温哥华的考试难度，兼之想一次通过考试，所以就找了位朋友推荐的教练来重新学车。 <!-- raw HTML omitted --></p>
<p>要考试通过，主要是做好这三部分的内容： <!-- raw HTML omitted --></p>
<ol>
<li>道路意识 <!-- raw HTML omitted --></li>
<li>驾驶技术 <!-- raw HTML omitted --></li>
<li>考点的熟悉程度 <!-- raw HTML omitted --></li>
</ol>
<p>我本以为是我要关注的主要是第3点，没想到第3点优先级是最低的。 <!-- raw HTML omitted --></p>
<p>前面几次课程，我都是在修正国内的驾驶习惯，比如驾车时，开在最右车道时，习惯偏向左边，而不是开在车道中间。这个叫 lane position(车道位置)问题 <!-- raw HTML omitted --></p>
<p>教练说，这个很正常，因为国内经常会有行人或者自行车从非机动车道，开到了机动车道上，为了不碰到他们，就习惯向左边开一些。 <!-- raw HTML omitted --></p>
<p>还有右转的时候，习惯向外再带一些再转弯，因为又担心转弯的时候会有行人或者障碍物，所以预留出空间，这个叫 steering wheel position(转弯位置)问题。 <!-- raw HTML omitted --></p>
<p>诸如此类的问题，都是会扣分，甚至会挂掉的. <!-- raw HTML omitted --></p>
<p>道路意识方面，教练首先纠正我的就是速度问题，限速50km/h的意思，不是说开50 km/h 以下都可以，而是说在理想情况下，要开到50 km/h, 太慢就会阻塞交通了。 <!-- raw HTML omitted --></p>
<p>比如限速50，开到40以下可以就扣分了，开到35，可能就挂了，当有车在你后面排队，就要注意了; 超速也不行，超过55可能就会挂掉。（当然，只是考试，平时超速，只要不超太多，一般不会有警察抓你的） <!-- raw HTML omitted --></p>
<p>还有道路优先权的意识，在没有红绿灯的情况下，多车交互，什么时候，谁应该先走；对公交，行人的礼让意识。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/icbc_4_ways_stop.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>对于消防车和救护车的紧急车辆出现在路上，双向两车道的车都要停下来， <!-- raw HTML omitted -->
以便紧急车辆快速通过，所以就会有路上就听到警笛声，路上所有的车都就近停下来的场景。 <!-- raw HTML omitted --></p>
<p>加拿大的基础设施真的不行，路灯都是20-30年前的款式，让我非常不习惯的是，在大多数情况，直行和左转灯是合并在一起的。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/icbc_q94.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>意味着当你要左转，灯变绿的时候，不一定就能转，对面直行车道的车有更高的优先权，你需要把车探出去，等待对面的直行车通行完，并且在自己这边的绿灯变黄前走掉，需要对交通变化快速反应。 <!-- raw HTML omitted --></p>
<p>因为这种种限制，就对司机的驾驶技术有较高要求，具体体现就是要快速过弯。 <!-- raw HTML omitted --></p>
<p>而温哥华的交通要求司机快速通行，路上交通状况变化很快，如果转弯太慢，灯可能就变， <!-- raw HTML omitted -->
行人或者其他方向的车就马上要来了，就比较容易出现危险的状况，就要求在可以通行的情况下，快速过弯。 <!-- raw HTML omitted --></p>
<p>北美这边的过弯标准是，右转绿灯，减速，shoulder check, 平稳快速转弯，加速，过程要流畅一气呵成，不能有颠簸，滞涩的感觉，让乘客紧张。 <!-- raw HTML omitted --></p>
<p>所谓的 shoulder check 就是转弯的时候，不能只看镜子，要把头转90度，转过肩膀，观察转向的盲区，避免撞上行人或者单车，这也是国内没有的要求。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/icbc_shoudler_check.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>所以快速转弯就要求手，脚，头协调并用。 <!-- raw HTML omitted --></p>
<p>就这样，每周一次，练了10次，花费了近三个月来练习。 <!-- raw HTML omitted --></p>
<h2 id="考试"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 考试</h2>
<p>考试内容分为笔试和路试，笔试就是针对交通规则的做题，问题不大，通过之后就会拿到实习驾照，在有19岁以上的驾照持有者陪同下就能开车了。 <!-- raw HTML omitted --></p>
<p>路试就是载着考官，按照考官的指示，开25-30分钟的车。 <!-- raw HTML omitted --></p>
<p>笔试与路试都与驾校无关，也不需要有驾校这样的机构介入，考试用车可以是任意符合规定的车，比如轿车，SUV, 越野车，或者是皮卡，只要功能正常即可。 <!-- raw HTML omitted --></p>
<p>在考点区域，按照随机考官的指示开车，考察内容大概包括红绿灯右转，左转，随机临时停车， <!-- raw HTML omitted -->
随机地点2分钟内完成侧方停车，考官观察考生的表现，并进行打分。 <!-- raw HTML omitted --></p>
<p>视考点不同，还可能需要开一段高速，考察如何加速并入，高速超车与换道，及离开高速等等。（考官估计也会紧张，要和连驾照都没有「马路杀手」上高速） <!-- raw HTML omitted --></p>
<p>因为练的时间比较长，兼之在考试之前去美国有过一次公路之旅，开了有600-700公里，所以一次就通过了。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/road_test_result_redacted.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>考官评语： <!-- raw HTML omitted --></p>
<blockquote>
<p>A1 Missed right turn shoulder check/lane change <!-- raw HTML omitted --></p>
<p>Good speed control <!-- raw HTML omitted --></p>
</blockquote>
<p>shoulder check 部分还是被扣分了，做得不标准，习惯着实很难一下子养成。 <!-- raw HTML omitted --></p>
<p>这样就通过驾照考试，「又」成为一名「马路杀手」了。 <!-- raw HTML omitted --></p>
<p>整个考试的费用: <!-- raw HTML omitted --></p>
<ol>
<li>笔试: 31加元(约160人民币) <!-- raw HTML omitted --></li>
<li>路试: 50加元(约270人民币) <!-- raw HTML omitted --></li>
<li>驾照制作及邮寄费用: 31加元(约160人民币). <!-- raw HTML omitted --></li>
</ol>
<h2 id="对比"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 对比</h2>
<p>因为在中国和加拿大都考过驾照，所以很自然地会对比两个国家的驾照考试。 <!-- raw HTML omitted --></p>
<p>加拿大考试的最大感觉就是真的要求你考完之后，是可以马上上路开车的，毕竟考试都需要在马路上真枪实弹开车的，甚至上高速。 <!-- raw HTML omitted --></p>
<p>但是你是怎么学的，他是不管的，所以也难怪北美很多人都是父母教开车，然后开自己家的车去考试。 <!-- raw HTML omitted --></p>
<p>相比之下，中国的驾照考试是相对比较「教条」和「形式化」的，以大部分人花费最多时间的科目二而言，主要是考察倒车入库，侧方停车，直角转弯，半坡起步等技能，而其中花费最多时间的是倒车入库，要求一次就能倒进去。 <!-- raw HTML omitted --></p>
<p>科目三就是加减档位，加减速，路边停车等等，我当初考试的时候，科目三还有长途，我需要和教练还有同车的考生，驱车到另外一个城市。 <!-- raw HTML omitted --></p>
<p>但是考试要求与实际开车的诉求并不契合，没有见过谁开车主要是处理倒车入库的，何况是要求一次就能停进去。 <!-- raw HTML omitted --></p>
<p>为什么要考这么机械的内容，就不能以实际开车的内容来考么？ <!-- raw HTML omitted --></p>
<p>比如让考生开个20-30分钟，然后让考官评判开得是否符合标准。 <!-- raw HTML omitted --></p>
<p>回忆起发生在我自己身上的一件事，我意识到，在当前环境下, 这个是很难落实的。 <!-- raw HTML omitted --></p>
<h3 id="科目三经历"><!-- raw HTML omitted -->4.1<!-- raw HTML omitted --> 科目三经历</h3>
<p>当时考科目三的前，我就只练习了一次，驾校教练把我们拉到一条未启用的高速公路上，给我们讲怎么起步，加减档，超车，路边停车， <!-- raw HTML omitted -->
向我们介绍，考试的时候，会有个考官坐在副驾驶上，然后对我们进行打分。 <!-- raw HTML omitted --></p>
<p>让我们每人开一段路，第二天就约考试了。 <!-- raw HTML omitted --></p>
<p>考试前，另外一位驾校教练，也是驾校老板单独叫我出了办公室，对我说了一番话，但原话已经记不大清了： <!-- raw HTML omitted --></p>
<blockquote>
<p>教练：你准备了么？ <!-- raw HTML omitted --></p>
<p>我：准备什么？考试内容么？ <!-- raw HTML omitted --></p>
<p>教练：红包阿 <!-- raw HTML omitted --></p>
<p>我：什么红包？ <!-- raw HTML omitted --></p>
<p>教练：给考官的红包 <!-- raw HTML omitted --></p>
</blockquote>
<p>当时高中毕业的我，还不懂这人情世故，陷入了短暂的沉默。教练并没有给我太多思考的时间，继续了对话（这次的原话我倒是还记得很清楚） <!-- raw HTML omitted --></p>
<blockquote>
<p>教练：这红包不是给我的 <!-- raw HTML omitted --></p>
<p>教练：每个人都给考官准备了红包 <!-- raw HTML omitted --></p>
<p>教练：同车考试的人里，是有人要挂的 <!-- raw HTML omitted --></p>
</blockquote>
<p>读懂潜台词的我意识到，相当于我被陷于了囚徒困境了，如果别人给了我没给，挂的就是我。 <!-- raw HTML omitted --></p>
<p>那我也只能给红包了，但教练的话却没有就此停下来。 <!-- raw HTML omitted --></p>
<blockquote>
<p>教练：你知道给多少么？ <!-- raw HTML omitted --></p>
<p>我：&hellip; <!-- raw HTML omitted --></p>
<p>教练：给个500吧。 <!-- raw HTML omitted --></p>
</blockquote>
<p>我高中毕业的时候，移动支付还不是非常普及，所以还是现金支付为主。 <!-- raw HTML omitted --></p>
<p>我当时报驾校的费用是3300元，我记得很清楚，是因为我父亲带我去镇上的驾校，从他的裤袋里面，抽出了一捆现金，放到桌上给驾校老板。 <!-- raw HTML omitted --></p>
<p>没想到，给个红包就要驾校费用的1/6. <!-- raw HTML omitted --></p>
<p>驾校老板不为自己谋利益，还这么热心地帮考官张罗，真的难得的好人。 <!-- raw HTML omitted --></p>
<h3 id="实用与教条"><!-- raw HTML omitted -->4.2<!-- raw HTML omitted --> 实用与教条</h3>
<p>换个角度想，可能开过车的人都能意识到，耗费最多时间的科目二真的对驾驶技术的提高不大，那为什么不能使用更实用的考察方式。 <!-- raw HTML omitted --></p>
<p>因为科目二这样教条，机械的考察方式，可以通过仪器进行量化考察，仪器在大部分情况下，作假难度会高很多。 <!-- raw HTML omitted --></p>
<p>但如果使用实用的考察方式，只能使用人来主观考察，如何避免以权谋私呢？避免出现在我身上的事，发生在其他人身上。 <!-- raw HTML omitted --></p>
<p>考生能否检举这样的行为呢？ <!-- raw HTML omitted --></p>
<p>如何避免考生得到保护，不受到来自驾校和考官的打压呢？ <!-- raw HTML omitted --></p>
<p>我只知道，在加拿大，驾照考试是不需要驾校的，你有选择的自由和权利，但是考试本身不与驾校挂钩。 <!-- raw HTML omitted --></p>
<p>考试费用也是固定的。 <!-- raw HTML omitted --></p>
<p>如果有考官向我提这样的要求，我可以去驾考机构投诉，他有大概率会丢失工作。 <!-- raw HTML omitted --></p>
<p>而我既有权力选择更换考官，也可以自由更换考点。 <!-- raw HTML omitted --></p>
<h2 id="后话"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 后话</h2>
<p>虽然花费3个月重新考个驾照相当费时间，但是期间的过程还是很有收获的，我也思考过规则背后的设计思路。 <!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>TamperMonkey userscript在 Single Page Application 跳转链接后不运行问题分析</title>
      <link>https://ramsayleung.github.io/zh/post/2023/tampermonkey_userscript_not_invokved_in_spa/</link>
      <pubDate>Sat, 26 Aug 2023 09:29:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/tampermonkey_userscript_not_invokved_in_spa/</guid>
      <description>1 背景 我习惯使用浏览器匿名模式来打开 Youtube 视频，避免 Youtube 的推荐算法给我总是推荐同一类的视频。 但有个问题: 匿名模式下，Youtube的播放器是默认自</description>
      <content:encoded><![CDATA[<h2 id="背景"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 背景</h2>
<p>我习惯使用浏览器匿名模式来打开 Youtube 视频，避免 Youtube 的推荐算法给我总是推荐同一类的视频。 <!-- raw HTML omitted --></p>
<p>但有个问题: 匿名模式下，Youtube的播放器是默认自动播放的。 <!-- raw HTML omitted --></p>
<p>虽然我可以登录 Google 账号并关闭自动播放，但是每次我使用匿名模式来浏览，关闭窗口之后，所有的操作记录都会被清除了，自动播放设置也不会被保存。 <!-- raw HTML omitted --></p>
<p>所以我使用 TamperMonkey 给 Youtube写了一个关闭自动播放的脚本，打开 Youtube 播放器时，把自动播放按钮给关闭掉，避免我使用浏览器的匿名窗口打开 Youtube 之后，Youtube自动播放导致一直有声音。 <!-- raw HTML omitted --></p>
<p>脚本逻辑很简单： <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// ==UserScript==
</span></span></span><span class="line"><span class="cl"><span class="c1">// @name         Disable YouTube Autoplay
</span></span></span><span class="line"><span class="cl"><span class="c1">// @namespace    http://tampermonkey.net/
</span></span></span><span class="line"><span class="cl"><span class="c1">// @version      0.1
</span></span></span><span class="line"><span class="cl"><span class="c1">// @description  Automatically turn off YouTube autoplay
</span></span></span><span class="line"><span class="cl"><span class="c1">// @author       ramsayliang
</span></span></span><span class="line"><span class="cl"><span class="c1">// @match        https://*.youtube.com/*
</span></span></span><span class="line"><span class="cl"><span class="c1">// @grant        none
</span></span></span><span class="line"><span class="cl"><span class="c1">// @icon         https://www.youtube.com/favicon.ico
</span></span></span><span class="line"><span class="cl"><span class="c1">// ==/UserScript==
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Function to disable autoplay
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kd">function</span> <span class="nx">disableAutoplay</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;disableAutoplay&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="kr">const</span> <span class="nx">autoplayToggle</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s1">&#39;div[class=&#34;ytp-autonav-toggle-button&#34;]&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nx">autoplayToggle</span> <span class="o">&amp;&amp;</span> <span class="nx">autoplayToggle</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s1">&#39;aria-checked&#39;</span><span class="p">)</span> <span class="o">===</span> <span class="s1">&#39;true&#39;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">autoplayToggle</span><span class="p">.</span><span class="nx">click</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Disable YouTube Autoplay&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Before loading&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Run the function when the page loads
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;load&#39;</span><span class="p">,</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Wait for a short delay to ensure the page fully loads
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="c1">// setTimeout(disableAutoplay, 8000);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Loading page..&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">disableAutoplay</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span> <span class="kc">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">})();</span>
</span></span></code></pre></div><h2 id="问题"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 问题</h2>
<p>但是我发现这个脚本时灵不灵，甚至有一天晚上，睡着之后被自动播放的声音吵醒了。 <!-- raw HTML omitted --></p>
<p>我就在找能稳定复现这个问题的场景，花费半个小时，终于能稳定复现问题了。 <!-- raw HTML omitted --></p>
<ol>
<li>打开 Chrome 的匿名模式 <!-- raw HTML omitted --></li>
<li>打开 Youtube 首页, 地址是: youtube.com, 脚本运行. <!-- raw HTML omitted --></li>
<li>随意点击一个视频，进行播放：<a href="https://www.youtube.com/watch?v=-pKGaxoVhok">https://www.youtube.com/watch?v=-pKGaxoVhok</a> ，脚本就不会运行了。 <!-- raw HTML omitted --></li>
<li>如果我在视频播放页刷新，脚本又会重新运行。 <!-- raw HTML omitted --></li>
</ol>
<p>但分析了1个小时，都没有找到原因，我甚至怀疑是 Tampermonkey 有Bug(虽然主观感觉这个可能性较小) <!-- raw HTML omitted --></p>
<h2 id="分析"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 分析</h2>
<p>结合 Tampermonkey 的表现，我觉得可能是 Tampermonkey 的执行机制有问题，可能是判断 youtube.com 和 youtube.com/watch?v=xxxx 是同一个页面，就不会运行两次。 <!-- raw HTML omitted --></p>
<p>在Stackoverflow上搜索了一下，发现果然如此： <!-- raw HTML omitted --></p>
<ul>
<li><a href="https://stackoverflow.com/questions/65017670/tampermonkey-match-not-working-when-visit-target-link-through-redirection">https://stackoverflow.com/questions/65017670/tampermonkey-match-not-working-when-visit-target-link-through-redirection</a> <!-- raw HTML omitted --></li>
</ul>
<p>原来这个是feature, 不是bug. <!-- raw HTML omitted --></p>
<p>对于 Single Page Application, Tampermonkey 无法判断页面的 DOM 是否发生变化，是否访问到新的页面了，所以不会重复执行。 <!-- raw HTML omitted --></p>
<p>分析下来，之前脚本能直接生效的原因是, 我在Chrome正常模式下打开 Youtube 首页, 右键对想要看的视频，点击&quot;Open link in incognito window&quot;, 因为页面是首次打开，所以就能正常运行。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/youtube_open_link_in_incognito_window.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>但当通过Chrome 匿名模式打开 Youtube 首页，然后再点击视频播放，无法运行脚本。 <!-- raw HTML omitted --></p>
<p>因为在打开首页的时候，脚本已经运行过了，当点击跳转到指定的视频时，且 Youtube 是个 Single Page Application, 对脚本来说，页面就没有发生过变化，所以不会再运行。 <!-- raw HTML omitted --></p>
<p>如果手动刷新，页面重新加载，脚本就又会被加载。 <!-- raw HTML omitted --></p>
<h2 id="解决方案"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 解决方案</h2>
<p>最后通过 <a href="https://stackoverflow.com/a/39508954">Stackoverflow</a> 的建议，增加一个对 DOM 事件变化的监听来解决： <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="c1">// https://stackoverflow.com/questions/2844565/is-there-a-javascript-jquery-dom-change-listener/39508954#39508954
</span></span></span><span class="line"><span class="cl"><span class="c1">// Detect the url change for programmatic navigation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">lastUrl</span> <span class="o">=</span> <span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">new</span> <span class="nx">MutationObserver</span><span class="p">(()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">url</span> <span class="o">!==</span> <span class="nx">lastUrl</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">lastUrl</span> <span class="o">=</span> <span class="nx">url</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">onUrlChange</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}).</span><span class="nx">observe</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span> <span class="p">{</span><span class="nx">subtree</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">childList</span><span class="o">:</span> <span class="kc">true</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// callback when url change
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">onUrlChange</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;URL changed!&#39;</span><span class="p">,</span> <span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nx">isYouTubeVideoURL</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">)){</span>
</span></span><span class="line"><span class="cl">        <span class="nx">disableAutoplay</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>这样就可以正常运行了。 <!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>闲话罗马：国王是选举出来的</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E5%9B%BD%E7%8E%8B%E6%98%AF%E9%80%89%E4%B8%BE%E5%87%BA%E6%9D%A5%E7%9A%84/</link>
      <pubDate>Fri, 21 Jul 2023 21:38:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E5%9B%BD%E7%8E%8B%E6%98%AF%E9%80%89%E4%B8%BE%E5%87%BA%E6%9D%A5%E7%9A%84/</guid>
      <description>1 引子 年少的时候，很喜欢看历史书，倒不是因为「以史为鉴，可以明得失」发人深省的思考，单纯是因为手头没有太多打发时间的活动（那时还没有太多的电</description>
      <content:encoded><![CDATA[<h2 id="引子"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 引子</h2>
<p>年少的时候，很喜欢看历史书，倒不是因为「以史为鉴，可以明得失」发人深省的思考，单纯是因为手头没有太多打发时间的活动（那时还没有太多的电脑游戏和视频），而少年人最多的就是时间。 <!-- raw HTML omitted --></p>
<p>历史书里面有光怪陆离，跌宕起伏的故事，那时的我自然很容易被吸引进去。 <!-- raw HTML omitted --></p>
<p>上中学的时候，特别喜欢看三国，喜欢武将决斗，谋士运筹的故事。 <!-- raw HTML omitted --></p>
<p>再后来，随着网络小说的兴起，兼之三国的历史已经烂熟于心，没有太多的新意，就开始看各种的架空，穿越三国的网络小说。 <!-- raw HTML omitted --></p>
<p>比如：《重生三国之xx》，《xx三国》等等，后来又因为《明朝那些事儿》的爆红，开始看明史。 <!-- raw HTML omitted --></p>
<p>工作之后，出于历史的兴趣，就开始摆脱通史类的故事书，阅读一些偏学术类的历史著作。 <!-- raw HTML omitted --></p>
<p>只是在截止到这个时候，阅读的都是中国历朝历代的历史，毕竟外国人的历史有什么好读的，地名和人名这么难记。 <!-- raw HTML omitted --></p>
<p>大概在三年多前，阅读一本英语学习书籍(《Word Power Made Easy》，这也是本神书，后面我一定要好好聊聊)的时候， <!-- raw HTML omitted --></p>
<p>该书中提到，古希腊和古罗马是现代欧美文明的精神来源，相关的传统，法律或者是宗教， <!-- raw HTML omitted -->
都可以从这两个古代文明找到参照物，约70%的英语单词就是衍生自古希腊语或者罗马人用的拉丁语。 <!-- raw HTML omitted --></p>
<p>何况古罗马历经共和国及帝国时代，历经1300年不倒。 <!-- raw HTML omitted --></p>
<p>对比之下，中国的朝代大多是三百年，为什么古罗马就能走出这样的历史周期律，延续千年呢？ <!-- raw HTML omitted --></p>
<p>巅峰时期，甚至将地中海变成罗马人「自己的内海」，成为一个横跨欧亚非的帝国。 <!-- raw HTML omitted --></p>
<p>想必自有其独到之处。 <!-- raw HTML omitted --></p>
<p>吃了那么久的中国菜，去尝试下西餐也不错嘛，说不定还能吃出新意呢。 <!-- raw HTML omitted --></p>
<h2 id="罗马建国"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 罗马建国</h2>
<p>公元前八世纪，传说罗马第一任国王罗穆路斯和双胞胎弟弟瑞摩斯出生后即被装到一个桶里，和唐僧一样，被投到河里遗弃。 <!-- raw HTML omitted --></p>
<p>木桶顺流而下，婴儿在桶里大声哭闹，引来了附近正在徘徊的一匹母狼。 <!-- raw HTML omitted --></p>
<p>这匹母狼没有把这两个婴儿当作午餐，反而将乳头塞进了两个婴儿的嘴里，把他们从死亡线上拉了回来。 <!-- raw HTML omitted --></p>
<p>婴儿由母狼抚养长大的故事显然过于玄幻，所以母狼在喂抱两个幼儿之后就离开了，是一个羊倌发现他们并把他们带回家了。 <!-- raw HTML omitted --></p>
<p>所以在罗马，都有各种各样母狼喂养罗穆路斯和瑞摩斯的塑像： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/Capitoline_she-wolf_Musei_Capitolini_MC1181.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>甚至意甲球队罗马（就是现在穆里尼奥执教的那支球队）的队徽也是母狼喂养罗穆路斯和瑞摩斯图: <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/AS_Roma_logo.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>在罗穆路斯18岁的时候，他和3000名追随他的拉丁人，以他自己的名字(Romulus)，在台伯河下游平原的七座小山丘上建立了罗马国（Roma，或者叫罗马城）： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/300px-Die_sieben_H%c3%bcgel_Roms.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>为什么3000人就能建国？，这个没有什么硬性标准的嘛，只要实力够，自然可以自封为王。 <!-- raw HTML omitted --></p>
<p>所以也难怪曹操会说，设使天下无有孤，不知当有几人称王，几人称帝（串台了） <!-- raw HTML omitted --></p>
<h2 id="国政"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 国政</h2>
<p>罗穆路斯建国之后，作为开国之王，却没有独揽大权，他把国政分成三个机构，分别是国王，元老院和市民大会。 <!-- raw HTML omitted --></p>
<p>国王作为宗教祭祀，军事和政治的最高领导人，由市民大会投票选举产生。 <!-- raw HTML omitted --></p>
<p>罗穆路斯认为，如果没有市民大会选举，自封的王不具有执政基础。 <!-- raw HTML omitted --></p>
<p>（只能说东西方的执政想法真的不一样，尧舜禹禅让，都被儒家夸了两千年。而罗马的权力竟然不是世袭的） <!-- raw HTML omitted --></p>
<p>罗穆路斯召集100位部族长老，设立元老院，他们的职责是为国王提忠告和建议，所以不需要通过市民大会的选举。 <!-- raw HTML omitted --></p>
<p>元老院的拉丁语是：Senātus，也是众多英语单词的词根，比如年长者(senior), 或者美国的参议院(senate), 都是元老院的衍生词。 <!-- raw HTML omitted --></p>
<p>市民大会由全体罗马市民组成，它的任务是选出以国王为首的各级政府官员。 <!-- raw HTML omitted --></p>
<p>（政府官员究竟不是国王或者上级官员指派的，无知的我又吃了一惊。） <!-- raw HTML omitted --></p>
<p>市民大会没有制定政策的权力，但是对国王听取元老院的建议后制定出来的政策有赞成或反对的表决权。 <!-- raw HTML omitted --></p>
<p>此外，在对外关系上，是战是和，也必须征得他们的同意才可实施。 <!-- raw HTML omitted --></p>
<p>当时的罗马国规模还不大，所以还能由全体罗马市民组成市民大会，不知道市民人数多了之后，市民大会又会如何发展呢？ <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 总结</h2>
<p>原来十八世纪法国启蒙思想家孟德斯鸠的三权分立理念，在公元前八世纪的罗马城就能找到雏形。 <!-- raw HTML omitted --></p>
<p>这顿西餐，看来是越来越有趣了。 <!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>黑客列传：强得抠脚的教主RMS</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E5%BC%BA%E5%BE%97%E6%8A%A0%E8%84%9A%E7%9A%84%E6%95%99%E4%B8%BBrms/</link>
      <pubDate>Sun, 16 Jul 2023 22:58:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E5%BC%BA%E5%BE%97%E6%8A%A0%E8%84%9A%E7%9A%84%E6%95%99%E4%B8%BBrms/</guid>
      <description>1 前言 前段时间流行一种关于程序员效率的说法，叫「10x程序员」，即一个好的程序员的工作效率是普通程序员的10倍。 但是，在编程界，有这么一群人</description>
      <content:encoded><![CDATA[<h2 id="前言"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前言</h2>
<p>前段时间流行一种关于程序员效率的说法，叫「10x程序员」，即一个好的程序员的工作效率是普通程序员的10倍。 <!-- raw HTML omitted --></p>
<p>但是，在编程界，有这么一群人，他们的工作效率，可以说是百倍，甚至千倍于普通程序员； <!-- raw HTML omitted --></p>
<p>更令人叹服的是，他们创造了普通程序员即使百倍努力也无法写出的作品。 <!-- raw HTML omitted --></p>
<p>使用「程序员」这个职业来称呼他们，未免流于平凡，无法展现出他们竖立起的丰碑；而使用「计算机科学家」，又未免过于学术，不接地气； <!-- raw HTML omitted --></p>
<p>那么，就回到最初，用「黑客(hacker)」这个称谓来称呼他们吧。 <!-- raw HTML omitted --></p>
<h2 id="关于黑客"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 关于黑客</h2>
<p>可能大家对「黑客 (hacker)」的印象多来自于电影，比如《黑客帝国》，就是那种在电脑面前，使用各种看不懂的工具入侵别人电脑的人。 <!-- raw HTML omitted --></p>
<p>但是这种看法大多是对于「黑客」的误解，称之为「骇客(cracker)」可能更加合适，即恶意入侵他人电脑的人。 <!-- raw HTML omitted --></p>
<p><code>hacker</code> 一词又是从 <code>hacking</code> 衍生而来的，将 <code>hacking</code> 翻译成成中文网络语中的「整，搞，开干」可能会更贴切，  而最初的「黑客」指的就是一群富有创造力和兴趣的爱好者，只是比较具有代表性的是在计算机领域。 <!-- raw HTML omitted --></p>
<p>国外有个很有名的科技相关的聚合网站，叫做「Hacker News」, 其中的「Hacker」, 也是沿用黑客最初的含义。 <!-- raw HTML omitted --></p>
<p>既然提到黑客，那么有一个无法绕过去的人物，那就是今天的主角，黑客文化的领军人物：Richard Stallman <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/rms_avatar.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="unix"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> UNIX</h2>
<h3 id="分时系统"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 分时系统</h3>
<p>相信今天的我们，对操作系统这个概念不会陌生，在电脑上有 Windows 10, Windows 11, Windows 7 或者苹果的 MacOS操作系统，在手机上有 Android 和 IOS操作系统。 <!-- raw HTML omitted --></p>
<p>所谓的操作系统，即是一套管理硬件，发挥硬件性能的软件，避免应用程序直接和硬件打交道，省去普通程序员大量的开发成本和心智。 <!-- raw HTML omitted --></p>
<p>与今天直接在手机操作系统上，一边聊微信，一边放音乐不同，远古时候(二十世纪六十年代)的操作系统只支持批处理模式： <!-- raw HTML omitted --></p>
<p>即用户同时提交多个任务，任务1运行完才能运行任务2，相当于你只能把音乐听完，然后关掉音乐软件，然后才能打开微信，发送聊天消息。 <!-- raw HTML omitted -->
（请忽略远古时代还没有微信这个问题） <!-- raw HTML omitted --></p>
<p>你可能会想，这也太挫了吧。 <!-- raw HTML omitted --></p>
<p>没错，当时的计算机科学家也这么认为的。 <!-- raw HTML omitted --></p>
<p>因此1964年，通用电气和麻省理工大学就打算合作开发一个多任务操作系统，支持多个用户，运行多个任务，名为 <code>MULTICS</code> <!-- raw HTML omitted --></p>
<p>后来，AT&amp;T公司的贝尔实验室也加入到这个操作系统的研发中，但是项目目标过于庞大，特性太多，性能又很低, AT&amp;T见项目前景不妙，就把资源都撤了，退出了这个项目。 <!-- raw HTML omitted --></p>
<h3 id="玩游戏玩出来的unix"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> 玩游戏玩出来的UNIX</h3>
<p>贝尔实验室的一位工程师，名叫Ken Thompson, 刚加入 MULTICS 项目不久，公司就准备退出了，但是通用公司为了项目而准备的机器 GE-645 就还保留在贝尔实验室，Ken 就打算用这些机器写个太空旅行的游戏。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/ge-645.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>然而，Ken 写出来的游戏跑得很慢，每次运行还要75美刀，更难受的是，GE-645 这批机器，不久后就被搬回去通用公司了。 <!-- raw HTML omitted --></p>
<p>所以Ken 只好在实验室角落找了几台没人用的PDP-7, 在同事 Dennis Ritchie 的帮助下，再重写了一次游戏。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/pdp-7.jpeg"/> 
</figure>
  <!-- raw HTML omitted --></p>
<p>这次的游戏开发经历，加上之前的 MULTICS 项目经验，让Ken 开始研究如何使用 PDP-7 开发一个分时多任务操作系统。 <!-- raw HTML omitted --></p>
<p>然后他花费了一年的时间，和 Dennis 一起，在PDP-7上开发了一个分时多任务系统，名为UnICS，这就是第一版的 UNIX。 <!-- raw HTML omitted --></p>
<p>因为PDP-7的性能不佳，最多支持两个用户, Ken 和 Dennis 又把第一版的 UNIX迁移到 PDP-11上，为了方便迁移，还顺便发明了一门编程语言，名为 C语言，并将UnICS 改名为 UNIX. <!-- raw HTML omitted --></p>
<p>(这两位也是神) <!-- raw HTML omitted --></p>
<p>影响后世无数操作系统的 UNIX 操作系统就此诞生，并迅速风靡各大研究机构，政府机关，企业与大学，成为70-80年代，操作系统事实上的标准 <!-- raw HTML omitted --></p>
<h3 id="商业版本与闭源"><!-- raw HTML omitted -->3.3<!-- raw HTML omitted --> 商业版本与闭源</h3>
<p>原来的软件只是买硬件时的赠品，到七十年代未，人们开始发现，原来软件也可以卖钱，很快，制作与销售商业软件成为一门热门生意。 <!-- raw HTML omitted --></p>
<p>最开始的UNIX 版本是开放源代码供使用者的，也就是使用者不但可以安装 UNIX 系统，还可以阅读，并修改UNIX 系统的源代码。 <!-- raw HTML omitted --></p>
<p>但是贝尔实验室的母公司 AT&amp;T毕竟是商业公司，把自己的源代码授权出去，后面还怎么赚钱呢？ <!-- raw HTML omitted --></p>
<p>所以在20世纪80年代相继发布的UNIX 商业版本，只发行二进制，不再包含源代码。 <!-- raw HTML omitted --></p>
<p>对于黑客来说，就是你能看到这个操作系统是怎么跑的，但是你再也无法知道他是怎么实现的了。 <!-- raw HTML omitted --></p>
<h2 id="rms"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> RMS</h2>
<p>Richard Matthew Stallman, 1953年出生于纽约的一个犹太家庭, 1974年毕业于哈佛大学，1975年在 MIT 攻读博士，后来退学在 MIT AI 实验室写代码。 <!-- raw HTML omitted --></p>
<p>他的名字首字母为 RMS, 早期在黑客社区混的时候，以 RMS为用户名，所以大家都叫他 RMS(后面就以RMS来称呼他了). <!-- raw HTML omitted --></p>
<p>当时的「黑客文化」崇尚开放，分享与交流，认为分享才能促进社会进步，在这样的文化熏陶下，RMS 自然对闭源软件痛恨不已。 <!-- raw HTML omitted --></p>
<p>1980年，还在 MIT AI 实验室工作的时候，因为激光打印机和大部分工作人员都不在同一层楼，总是跑上跑下去查看打印结果和进度就很麻烦。 <!-- raw HTML omitted --></p>
<p>RMS 就给实验室的激光打印机写了一个程序： <!-- raw HTML omitted --></p>
<p>可以在打印任务完成时，发消息通知用户；或者当打印任务卡住的时候，也发消息通知用户； <!-- raw HTML omitted --></p>
<p>然而，因为最新版本的打印机源码不再开放，RMS写的程序就无法再适配，让他相当恼火。 <!-- raw HTML omitted --></p>
<p>以小见大，整个软件行业都在发生变化，甚至连UNIX 这样的基石软件都开始不再开放源代码授权，RMS感觉，他要站出来做些什么了。 <!-- raw HTML omitted --></p>
<h2 id="gnu"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> GNU</h2>
<h3 id="荜路蓝缕"><!-- raw HTML omitted -->5.1<!-- raw HTML omitted --> 荜路蓝缕</h3>
<p>在1983年, RMS 宣布了GNU 操作系统计划，计划开发出一个兼容 Unix的源码开放的操作系统，让 Unix用户可以无缝切换到 GNU 操作系统上. <!-- raw HTML omitted --></p>
<p>GNU 就是 &ldquo;GNU is Not Unix&quot;的缩写(那开头的GNU又是什么意思呢? 按照程序员的行话来说，这个叫递归) <!-- raw HTML omitted --></p>
<p>经过十多年的发展，Unix 已经成为操作系统事实上的标准，重新开发一个新的操作系统几近天方夜谭。 <!-- raw HTML omitted --></p>
<p>想象一下，有人跟你说要开发一个 Android 操作系统，用来替换掉 Google 的Android 系统，这工作量和难度可想而知，这就是现实中的想要移山的愚公，大战风车的堂吉诃德。 <!-- raw HTML omitted --></p>
<p>但是 RMS 并未被眼前的困难所吓退，而是一步一步，从0开始构建他心中的类Unix操作系统. <!-- raw HTML omitted --></p>
<p>1984年, RMS 开发并发布GNU Emacs 这个著名的文本编辑器, 方便程序员进行代码开发; <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/gnu_emacs.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>1986年, RMS 开发并发布GNU Debugger(gdb) 调试器, 方便程序员来调试程序; Emacs + gdb 就是他那个时代的IDE <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/gdb_screenshot.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>1987年, RMS 开发并发布GNU Compiler Collection(gcc) 编译器套件; 所谓的编译器，即将人写的代码，转换成机器可以运行的二进制代码。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/gcc_logo.svg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>开发出一个这样的软件就足以在计算机史上留名，RMS 在这3年间，还一口气开发出了3个，这样的技术水平和生产效率，只能让人叹服，影响力堪比盗火的普罗米修斯。 <!-- raw HTML omitted --></p>
<p>何况这些软件至今仍在迭代，被无数程序员所依赖，所使用。 <!-- raw HTML omitted --></p>
<p>比如微信的所有后台代码，都是使用GCC 编译出来的，也就是你现在也在间接使用着 RMS 当初编写的软件。 <!-- raw HTML omitted --></p>
<p>近40年过去了，市面上被广泛使用的C/C++编译器就只有三个: 微软家的 MSVC, 苹果支持开发的 Clang, 还有GNU 项目的 GCC. <!-- raw HTML omitted --></p>
<p>除此之外，GNU 项目还开发了许多的基础设施，如GNU make, GNU grep, bash，以及志在替换掉 PS的 GIMP 等等. <!-- raw HTML omitted --></p>
<p>除了基础设施外，GNU项目还希望类似通过美国宪法保证言论自由一样，通过法律和版权，确保软件开放源代码。 <!-- raw HTML omitted --></p>
<p>因此, 在1989年, RMS 发布了 GNU General Public License(GPL)授权, 主要内容是: 用户可以自由使用，复制，修改GPL软件, 派生的软件也必须使用GPL, 不能转换成闭源软件. <!-- raw HTML omitted --></p>
<p>从法律层面保证了GPL软件不会被有心人直接拿去闭源赚钱。 <!-- raw HTML omitted --></p>
<p>此外, RMS 还将自由软件发展成社会运动，将软件开发这个程序员小圈子的活动，成为扩展到整个社会的思想运动。 <!-- raw HTML omitted --></p>
<p>在人类没有进化到「无私」的精神境界前（可能永远都达不到），通过GPL法律条款来保证「自由」的权利， <!-- raw HTML omitted -->
不得不说是一种创举，从而让世界上每个人都有机会享受到软件发展所带来的好处。 <!-- raw HTML omitted --></p>
<h3 id="开花结果"><!-- raw HTML omitted -->5.2<!-- raw HTML omitted --> 开花结果</h3>
<p>时间来到90年代, 经过近10年的耕耘, 在基础组件和配套设施相继完善之后，GNU 项目终于来到最关键的节点，开发出可以替换Unix 系统的内核(kernel). <!-- raw HTML omitted --></p>
<p>如果电脑硬件来比喻操作系统的话，就是内存，硬盘，主板，显示器，电源全部都就绪，就差最后的CPU, 画龙最后的点睛. <!-- raw HTML omitted --></p>
<p>但是GNU 的内核 Hurd 却迟迟未能发布, 而天下可谓苦闭源 Unix 久矣。 <!-- raw HTML omitted --></p>
<p>在1991年, 一个叫Linus的芬兰学生在社区上发布了他自己的业余项目：一个类Unix 的操作系统内核。 <!-- raw HTML omitted --></p>
<p>他把GNU 项目的相关组件(bash和gcc)移植到这个系统，也能正常运行起来了, 这个系统就是Linux(完整的名称应该是 GNU/Linux) <!-- raw HTML omitted --></p>
<p>自此, GNU 项目的最后一块拼图完整了, 十年磨一剑, GNU的基础组件加 Linus 的Linux内核, 一个志在替换 Unix 的操作系统终于完成了, 这就是 GNU/Linux. <!-- raw HTML omitted --></p>
<p>苦Unix久矣的社区的开发者云集而来，为 GNU/Linux 添砖加瓦, 让GNU/Linux 成为今天的参天大树(连微软家的服务器也在运行 Linux) <!-- raw HTML omitted --></p>
<p>&mdash; <!-- raw HTML omitted --></p>
<p>只见新人笑，哪闻旧人哭. <!-- raw HTML omitted --></p>
<p>有点离谱的是, GNU Hurd 已经开发超过30年了，还没有发布1.0(稳定可用版本). <!-- raw HTML omitted --></p>
<p>更离谱的是，最近还有更新: <!-- raw HTML omitted --></p>
<p>2023年6月份，还发布了2023年 <a href="https://lists.gnu.org/archive/html/bug-hurd/2023-06/msg00038.html">版本更新</a>: <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/gnu_hurd_2023_release.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="轶事"><!-- raw HTML omitted -->6<!-- raw HTML omitted --> 轶事</h2>
<h3 id="教主"><!-- raw HTML omitted -->6.1<!-- raw HTML omitted --> 教主</h3>
<p>为什么称RMS 为教主呢？ <!-- raw HTML omitted --></p>
<p>因为RMS 创建了 Emacs 这个神的编辑器，自其诞生以来，与编辑器之神 Vi/Vim 的圣战就从未停息。 <!-- raw HTML omitted --></p>
<p>使用Emacs 的程序员与使用Vi/Vim 的程序员，一直在争论，究竟哪个才是更好的编辑器？ <!-- raw HTML omitted --></p>
<p>既然 RMS 是Emacs 的创始人，自然被使用 Emacs的人尊称为「教主」。 <!-- raw HTML omitted --></p>
<p>而这场争论已经持续近四十年，依旧没有分出胜负。 <!-- raw HTML omitted --></p>
<p>像 Google 这样浓眉大眼的家伙，还在不时地给这场战争拱火: <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/google_emacs.png"/> 
</figure>
  <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/google_vi.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h3 id="教主与教主"><!-- raw HTML omitted -->6.2<!-- raw HTML omitted --> 教主与教主</h3>
<p>乔布斯被「果迷」尊称为「教主」，大家可能不知道的是，这两位「教主」曾经有过一场交锋。 <!-- raw HTML omitted --></p>
<p>1993年, 当时乔布斯还在 NeXT公司, 买下了 <code>Objective-C</code> 语言来开发应用程序(后来的IOS用的也是 <code>Objective-C</code>), 使用的编译器也是 GCC. <!-- raw HTML omitted --></p>
<p>NeXT 修改了 GCC的源码，以便增加对 <code>Objective-C</code> 的支持，而GCC 使用的又是GPL 授权，而根据GPL 的授权，任何对GPL软件的修改，也必须要开放源代码。 <!-- raw HTML omitted --></p>
<p>所以乔布斯就问RMS, 他能否把 GCC 拆分成两部分，一部分是原来GCC, 继续开放源代码；另外一部分是增加 <code>Objective-C</code> 的GCC 编译器前端，闭源收费商用。 <!-- raw HTML omitted --></p>
<p>RMS 回复，当然是不可以。我估计老爷子心想，防的就是你这种人。 <!-- raw HTML omitted --></p>
<p>乔布斯只好将 <code>Objective-C</code> 编译器的前端也以GPL 授权开放出源代码。 <!-- raw HTML omitted --></p>
<p>&mdash; <!-- raw HTML omitted --></p>
<p>若干年后，苹果计划开发自己的编译器，因为设计以及授权的原因，在谋求与 GCC的合作未果后，转而支持 LLVM 的clang, 那也是后话了. <!-- raw HTML omitted --></p>
<h3 id="中国芯"><!-- raw HTML omitted -->6.3<!-- raw HTML omitted --> 中国芯</h3>
<p>根据 RMS <a href="https://usesthis.com/interviews/richard.stallman/">自述</a>, 他之前用的一直是中国科学院设计的龙芯处理器的龙梦电脑, 虽然这台电脑的性能，显示尺寸(只有9英寸)都无法让RMS 满意，但是这台电脑的是完全自由的，包括硬件, bios, 软件: <!-- raw HTML omitted --></p>
<blockquote>
<p>What hardware do you use? <!-- raw HTML omitted --></p>
<p>I am using a Lemote Yeelong, a netbook with a Loongson chip and a 9-inch display. This is my only computer, and I use it all the time. I chose it because I can run it with 100% free software even at the BIOS level. <!-- raw HTML omitted --></p>
</blockquote>
<p>在性能和自由之间，他一如既往地选择了「自由」 <!-- raw HTML omitted --></p>
<p>根据RMS <a href="https://stallman.org/intel.html">官网的描述</a>, 他不用intel 或者 amd 的芯片，是因为他们都有后门: <!-- raw HTML omitted --></p>
<blockquote>
<p>Reasons not to use Intel <!-- raw HTML omitted --></p>
<p>Don&rsquo;t use Intel processors newer than Core2, because they have the &ldquo;management engine&rdquo; back door. <!-- raw HTML omitted --></p>
<p>Recent AMD processors have a similar problem, but we do not yet have an article about it. <!-- raw HTML omitted --></p>
</blockquote>
<p>不过，据闻他的龙梦电脑被偷了之后，他也就换到 <a href="https://stallman.org/stallman-computing.html">ThinkPad 上了</a>: <!-- raw HTML omitted --></p>
<blockquote>
<p>As of 2022 I use a Thinkpad x200 computer, which has a free initialization program (Libreboot) and a free operating system (Trisquel GNU/Linux). <!-- raw HTML omitted --></p>
</blockquote>
<h3 id="抠脚"><!-- raw HTML omitted -->6.4<!-- raw HTML omitted --> 抠脚</h3>
<p>菜的抠脚就听说过，强得抠脚又是什么呢？ <!-- raw HTML omitted --></p>
<p>因为他真的抠脚（字面意思），还吃回去了。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/koujiao_1.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/koujiao2.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->7<!-- raw HTML omitted --> 总结</h2>
<p>他是天才黑客，是自由软件的精神领袖，是知行合一的孤勇者，更是个凡人堆里的理想主义者. <!-- raw HTML omitted --></p>
<p>当然，还是我大 Emacs 神教的教主. <!-- raw HTML omitted --></p>
<h2 id="参考"><!-- raw HTML omitted -->8<!-- raw HTML omitted --> 参考</h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/GNU_Compiler_Collection">https://en.wikipedia.org/wiki/GNU_Compiler_Collection</a> <!-- raw HTML omitted --></li>
<li><a href="https://en.wikipedia.org/wiki/Richard_Stallman">https://en.wikipedia.org/wiki/Richard_Stallman</a> <!-- raw HTML omitted --></li>
<li><a href="https://en.wikipedia.org/wiki/GNU_Emacs">https://en.wikipedia.org/wiki/GNU_Emacs</a> <!-- raw HTML omitted --></li>
<li><a href="https://en.wikipedia.org/wiki/GNU_Debugger">https://en.wikipedia.org/wiki/GNU_Debugger</a> <!-- raw HTML omitted --></li>
<li><a href="https://stallman.org/">https://stallman.org/</a> <!-- raw HTML omitted --></li>
<li><a href="https://usesthis.com/interviews/richard.stallman/">https://usesthis.com/interviews/richard.stallman/</a> <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
