<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>自由庄园</title>
    <link>https://ramsayleung.github.io/zh/</link>
    <description>Recent content on 自由庄园</description>
    <image>
      <title>自由庄园</title>
      <url>https://ramsayleung.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ramsayleung.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>See this site&#39;s source code [here](https://github.com/ramsayleung/ramsayleung.github.io), licensed under GPLv3 ·</copyright>
    <lastBuildDate>Sat, 24 Jun 2023 20:15:00 -0700</lastBuildDate><atom:link href="https://ramsayleung.github.io/zh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>两个鲜为人知的Gmail地址技巧</title>
      <link>https://ramsayleung.github.io/zh/post/2023/gmail%E5%9C%B0%E5%9D%80%E7%9A%84%E9%9A%90%E8%97%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 24 Jun 2023 20:15:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/gmail%E5%9C%B0%E5%9D%80%E7%9A%84%E9%9A%90%E8%97%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>1 前言 分享两个鲜为人知，但是却相当有用的 Gmail 地址技巧。「鲜为人知」并非是标题党，而是引用Gmail 博客原话： I recently discovered some little-known ways to use your Gmail address that can give you greater control</description>
      <content:encoded><![CDATA[<h2 id="前言"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前言</h2>
<p>分享两个鲜为人知，但是却相当有用的 Gmail 地址技巧。「鲜为人知」并非是标题党，而是引用Gmail 博客原话： <!-- raw HTML omitted --></p>
<blockquote>
<p>I recently discovered some <strong><strong>little-known</strong></strong> ways to use your Gmail address that can give you greater control over your inbox and save you some time and headache. <!-- raw HTML omitted --></p>
</blockquote>
<h2 id="技巧"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 技巧</h2>
<p>假设你的Gmail 地址是 <code>xiaoming@gmail.com</code>: <!-- raw HTML omitted --></p>
<h3 id="加号"><!-- raw HTML omitted -->2.1<!-- raw HTML omitted --> 加号</h3>
<p>你可以将在用户名后面增加一个加号 <code>+</code>, 并在加号后面增加任意数量的字符，比如 <code>xiaoming+happy@gmail.com</code>, <code>xiaoming+upset@gmail.com</code>, Gmail 都会把这些地址当作成 <code>xiaoming@gmail.com</code>, 发送到你的地址邮箱中。 <!-- raw HTML omitted --></p>
<h3 id="点号"><!-- raw HTML omitted -->2.2<!-- raw HTML omitted --> 点号</h3>
<p>你也可以在地址的任意地方插入任意数量的点号: <code>.</code>, 比如 <code>x.i.a..o.ming@gmail.com</code>, <code>xiao...mi..ng@gmail.com</code>, Gmail 都会把点号忽略掉，解析成 <code>xiaoming@gmail.com</code> <!-- raw HTML omitted --></p>
<h2 id="用途"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 用途</h2>
<p>技巧比较简单，寥寥数语就说完了，好像也没有什么大不了，有什么用处么？ <!-- raw HTML omitted --></p>
<p>这个就要发挥想象力了。 <!-- raw HTML omitted --></p>
<h3 id="用途一-重复注册用户"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 用途一：重复注册用户</h3>
<p>这个主要是针对能使用邮箱注册的网站，可能大多数是国外网站。 <!-- raw HTML omitted --></p>
<p>如果网站的邮箱地址校验正则写得不好，允许加号和点号，不知道Gmail的这两个规则，那么 <code>xiaoming+user1@gmail.com</code>, <code>xiaoming+user2@gmail.com</code>, <code>xi..aoming@gmail.com</code> 就会被认为是三个不同的邮箱地址，就可以重复注册。 <!-- raw HTML omitted --></p>
<p>在薅羊毛等需要重复注册用户的场景就比较有用了。 <!-- raw HTML omitted --></p>
<h3 id="用途二-溯源"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> 用途二：溯源</h3>
<p>个人邮箱难免会收到一些奇怪的邮件，例如：猎头的招聘邮件，钓鱼邮件等等。 <!-- raw HTML omitted --></p>
<p>收到这些邮件的第一反应肯定是把邮件删掉，之后就会思考，究竟是哪里泄漏了个人邮箱。 <!-- raw HTML omitted --></p>
<p>而通过 Gmail 加号的技巧，我就可以做到垃圾邮件溯源. <!-- raw HTML omitted --></p>
<p>首先，在注册每个网站的时候，都给他们加上一个tag, 例如注册Twitter, 那就用 <code>xiaoming+twitter@gmail.com</code>, 如果注册Github, 那就用 <code>xiaoming+github@gmail.com</code>, 依此类推。 <!-- raw HTML omitted --></p>
<p>只要有垃圾邮件，我就能通过加号的后缀，知道是哪个浓眉大眼的网站把我的信息给泄漏出去了。 <!-- raw HTML omitted --></p>
<p>比如下面这个垃圾邮件，我就知道它是通过爬虫爬取我Github 公开邮件群发的. <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/gmail_plus_sign_example.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>我就可以选择不公开 Github 邮箱，来避免后续收到类似的邮件。 <!-- raw HTML omitted --></p>
<h2 id="参考"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 参考</h2>
<ul>
<li><a href="https://gmail.googleblog.com/2008/03/2-hidden-ways-to-get-more-from-your.html">Google Gmail Blog: 2 hidden ways to get more from your Gmail address</a> <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>英语听力学习工具分享</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E8%8B%B1%E8%AF%AD%E5%90%AC%E5%8A%9B%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/</link>
      <pubDate>Thu, 15 Jun 2023 20:49:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E8%8B%B1%E8%AF%AD%E5%90%AC%E5%8A%9B%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/</guid>
      <description>1 前言 学习一门语言和学习手艺，过程差不多，没有太多的捷径可走，除了练习，还是练习。 无论是以前，还是现在，去公司上班，都需要接近一个小时的时间</description>
      <content:encoded><![CDATA[<h2 id="前言"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前言</h2>
<p>学习一门语言和学习手艺，过程差不多，没有太多的捷径可走，除了练习，还是练习。 <!-- raw HTML omitted --></p>
<p>无论是以前，还是现在，去公司上班，都需要接近一个小时的时间通勤。 <!-- raw HTML omitted --></p>
<p>为了不浪费通勤的一小时，我大多会在路上收听英文播客来练习英语听力。 <!-- raw HTML omitted --></p>
<h2 id="工具"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 工具</h2>
<p>以前是坐班车上班，经常是听着听着英语听力就睡着了，毕竟播客的对话有深有浅，听不懂就容易睡着，英语练习就变成班车补觉。 <!-- raw HTML omitted --></p>
<p>虽然各种英语学习心得都强调多听的重要性，但是架不住着实听不懂，Podcasts App又没有办法展示字幕，你只知道你听不懂这个单词，但是却不知道这个单词究竟是什么？ <!-- raw HTML omitted --></p>
<p>不会的内容就不会有机会改善。 <!-- raw HTML omitted --></p>
<p>最近接触到一个很优秀的 Podcasts APP, 名为 Snipd, 可以通过AI自动把播客内容翻译成字幕。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/snipd_appstore.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/snipd_transcript1.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>说来有趣，这个Podcasts 软件的产品初衷并不是为了英语学习，而是类似视频截图，将播客的精彩瞬间和金句分享出来。 <!-- raw HTML omitted --></p>
<p>但是声音是很难以视觉化的方式来进行分享，转发的，所以他们就直接将当前播放进度前后80秒的内容以字幕形式呈现。 <!-- raw HTML omitted --></p>
<p>如果想要记录生词，可以直接点击创建「Create snip」，将句子保存下来，相当于保存了生词的上下文。 <!-- raw HTML omitted --></p>
<p>对于字幕生成，我现在发现，Snipd是采用离线缓存+在线生成的方式的： <!-- raw HTML omitted --></p>
<p>如果是热门播客，可能就有用户已经提交了生成字幕请求，其他用户直接点开播客就可以直接展示； <!-- raw HTML omitted -->
对于冷门播客，需要我点击生成字幕，等待个10分钟，他们后台生成完成后会再通知我。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/snip1.jpg"/> 
</figure>
  <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/snip2.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>使用这个App还有一个附带的好处：可以收听非常多的海外播客。 <!-- raw HTML omitted --></p>
<p>因为中国什么都会有特供版本，播客也不例外。 <!-- raw HTML omitted --></p>
<p>如果使用的是国区的 Apple Id, 那么使用Iphone 自带的Podcasts App, 有非常多优秀的海外播客都无法搜索到（毕竟「收听敌对电台」） <!-- raw HTML omitted --></p>
<p>而这个Snipd App可以搜索到非常多的海外播客，而大部分的英文播客都是海外播客。 <!-- raw HTML omitted --></p>
<h2 id="播客"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 播客</h2>
<p>推荐几个我经常收听的英文播客： <!-- raw HTML omitted --></p>
<h3 id="healthy-hacker"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> Healthy hacker</h3>
<p>网站链接：<a href="https://www.healthyhacker.com/">https://www.healthyhacker.com/</a> <!-- raw HTML omitted --></p>
<p>一个从苹果天才吧电脑维修员工，成长为Github 工程师的小哥Chris Hunt主持的播客，我个人的最爱，主要是分享一些 Chris 自己觉得有趣的东西。 <!-- raw HTML omitted --></p>
<p>Chris 声音热情洋溢，可惜播客在2019年之后就没有更新了。 <!-- raw HTML omitted --></p>
<p>从天才吧员工成长为Github 工程师的那一期: <a href="https://www.healthyhacker.com/2014/10/06/growing-as-a-programmer/">《11: Growing as a programmer》</a> <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/healthy_hacker.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h3 id="the-changelog"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> THE CHANGELOG</h3>
<p>网站链接：<a href="https://changelog.com/podcast">https://changelog.com/podcast</a> <!-- raw HTML omitted -->
主要是分享软件工程，极客和行业创新，也有不少大咖上过播客，比如： <!-- raw HTML omitted --></p>
<p>Ruby On Rail之父 DHH, Sqlite 作者 D. Richard Hipp, Ruby之父，以及K&amp;R 中的K( Brian Kernighan) . <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/the_changelog.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h3 id="daily-easy-english-expression"><!-- raw HTML omitted -->3.3<!-- raw HTML omitted --> Daily Easy English Expression</h3>
<p>网站地址: <a href="https://dailyeasyenglish.libsyn.com/">https://dailyeasyenglish.libsyn.com/</a> <!-- raw HTML omitted --></p>
<p>一个美国老师每期分享的地道英语词句的表达，每期只有几分钟。因为主持人是专业的英语外教，所以语速较慢，难度较低，非常好懂。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/daily_easy_english_expression.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>我在好几年前就在Youtube关注这个老师的口语教程，叫做 <a href="https://www.youtube.com/watch?v=32T-nyka0dM">Daily English Dictation</a>, 深入浅出，娓娓道来。 <!-- raw HTML omitted --></p>
<p>B 站上也有搬运Youtube的教程：每日英语听写 <a href="https://www.bilibili.com/video/BV1U7411a7xG/">Daily English Dictation 1-400</a> <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/daily_english_dictation.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>翻开2020年的笔记，当时一天学习一课 Daily English Dictation，我学习到142课然后就放弃了。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/ddd_practice.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h3 id="the-hanselminutes-podcast"><!-- raw HTML omitted -->3.4<!-- raw HTML omitted --> THE HANSELMINUTES PODCAST</h3>
<p>网站链接：<a href="https://www.hanselminutes.com/">https://www.hanselminutes.com/</a> <!-- raw HTML omitted --></p>
<p>微软的 Scott Hanselman 主持的播客，类似技术杂谈，在英文技术类播客中也非常有名，他的角色类似个布道师。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/hanselminutes.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h3 id="lex-fridman-podcast"><!-- raw HTML omitted -->3.5<!-- raw HTML omitted --> Lex Fridman Podcast</h3>
<p>网站：<a href="https://www.hanselminutes.com/">https://www.hanselminutes.com/</a> <!-- raw HTML omitted --></p>
<p>Lex Fridman 是俄裔计算机科学家，在MIT任职，他说话的方式很真诚，口音很好听. 他的访谈对象通常都非常大牌，比如是 Facebook 创始人 Mark Zuckerberg, 特斯拉的Elon Musk, 还有计算机的殿堂大神Donald Knuth等等. <!-- raw HTML omitted --></p>
<p>只是他的访谈一般都很长，2-3个小时，我一般需要用一周的通勤时间来听完一期节目。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/lex_fridman.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h3 id="bbc-6-minute-english"><!-- raw HTML omitted -->3.6<!-- raw HTML omitted --> BBC 6 Minute English</h3>
<p>网站: <a href="https://www.bbc.co.uk/learningenglish/english/features/6-minute-english">https://www.bbc.co.uk/learningenglish/english/features/6-minute-english</a> <!-- raw HTML omitted --></p>
<p>BBC 主持的英语学习播客，顾名思义，每期6分钟，都是纯正的英音，女主持的英音尤其悦耳。 <!-- raw HTML omitted --></p>
<p>每期都截取一小道报道或者对话，然后学习一些新词，以练带学。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/6_minute_english.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 总结</h2>
<p>突然意识到，收听播客和小时候通过收音机收听各种电台节目，如「评书讲古」似乎是异曲同工。 <!-- raw HTML omitted --></p>
<p>虽然媒介在改变，但是对好内容的需求却是一直不变的。 <!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>软件工程师的软技能指北（四）：简历篇</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E7%AE%80%E5%8E%86%E7%AF%87/</link>
      <pubDate>Sat, 20 May 2023 13:40:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E7%AE%80%E5%8E%86%E7%AF%87/</guid>
      <description>1 前情提要 软件工程师的软技能指北（一）：总览篇 软件工程师的软技能指北（二）：事业篇 软件工程师的软技能指北（三）：高效交流篇 2 前言 我在高三的时</description>
      <content:encoded><![CDATA[<h2 id="前情提要"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前情提要</h2>
<ol>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/">软件工程师的软技能指北（一）：总览篇</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E4%BA%8B%E4%B8%9A%E7%AF%872/">软件工程师的软技能指北（二）：事业篇</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E9%AB%98%E6%95%88%E4%BA%A4%E6%B5%81%E7%AF%873/">软件工程师的软技能指北（三）：高效交流篇</a> <!-- raw HTML omitted --></li>
</ol>
<h2 id="前言"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 前言</h2>
<p>我在高三的时候，每周有五节的语文课，我的语文老师陆老师总是会拿一节语文课，当作书法课，让我们练字。 <!-- raw HTML omitted --></p>
<p>陆老师认为，写作文能言之有物，切中要点很重要，但是答卷的字体也很重要。 <!-- raw HTML omitted --></p>
<p>可能同样的答案内容，字体写得好的试卷会比字体一般的试卷高5到10分。 <!-- raw HTML omitted --></p>
<p>而陆老师自身的软硬笔书法水平都很过硬，黑板板书相当漂亮。 <!-- raw HTML omitted --></p>
<p>明清两朝，有专门用于科举考试的通用字体，特点是：以乌黑、方正、光洁而大小齐平。 <!-- raw HTML omitted --></p>
<p>明朝称之为「台阁体」，清朝称之为「馆阁体」： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/%e9%a6%86%e9%98%81%e4%bd%93.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>人终归是视觉动物，内涵固然重要，门面也不可或缺。 <!-- raw HTML omitted --></p>
<p>如果把工程师的职业当作事业的话，那么简历就是门面和敲门砖。 <!-- raw HTML omitted --></p>
<p>如果有足够的亮点的经历的话，再配上优秀的简历，可谓如虎添翼； <!-- raw HTML omitted -->
纵然经历不够亮点，一份得体的简历就如考试时的一手好字，同样可以让人眼前一亮。 <!-- raw HTML omitted --></p>
<h2 id="要点"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 要点</h2>
<p>所谓的简历，本质上和街边的宣传单，以及电视上的广告没有什么区别，都是希望可以引起潜在客户的注意，把「商品」销售出去。 <!-- raw HTML omitted --></p>
<p>只是他们销售的是商品，你销售的是自己的「劳动力」。 <!-- raw HTML omitted --></p>
<p>而你的目标是在诸多的同行竞争中脱颖而出，你需要做的是「扬长避短」，把自己的长处和优势展示给潜在客户。 <!-- raw HTML omitted --></p>
<p>根据社会心理学的研究，人总是会对先看到的词产生先入为主的认知。 <!-- raw HTML omitted --></p>
<p>如果形容一个人： <!-- raw HTML omitted --></p>
<p>勤劳，勇敢，善良，温柔，俊美，卑鄙，下流，肮脏，贪婪，邋遢。 <!-- raw HTML omitted --></p>
<p>你对他的印象是好是坏呢？ <!-- raw HTML omitted --></p>
<p>那下面这个人呢？ <!-- raw HTML omitted --></p>
<p>卑鄙，下流，肮脏，贪婪，邋遢，勤劳，勇敢，善良，温柔，俊美。 <!-- raw HTML omitted --></p>
<p>你对他的印象是坏是好呢？ <!-- raw HTML omitted --></p>
<p>同样的内容，调换了顺序，给人的认知就完全不一样了。 <!-- raw HTML omitted --></p>
<p>所以你需要做的，就是把你最引以为傲的内容（比如你的经历，学历），放在简历的前面； <!-- raw HTML omitted -->
再把你觉得弱势的内容（比如学历，经历），放到简历的后面。 <!-- raw HTML omitted --></p>
<h2 id="结构"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 结构</h2>
<p>我个人习惯是会在简历中呈现五部分内容：「联系方式(Contact)」, 「职业经历(Employment)」, 「项目(Project)」, 「教育(Education)」, 「总结(Summary)」。 <!-- raw HTML omitted --></p>
<p>放在最前方的，毫无疑问是「联系方式」，不然潜在客户对你再感兴趣，找不到你的联系方式，也是抓瞎。 <!-- raw HTML omitted --></p>
<p>其次就是「教育」，「职业经历」，「总结」的顺序。 <!-- raw HTML omitted --></p>
<p>我个人的学历不占优势，只有本科学历，又非名校，根据「扬长避短」原则，「教育」就被我放最后了。 <!-- raw HTML omitted --></p>
<p>因为我自己在两家所谓的「大厂」打过工，所以「职业经历」更有优势，所以「职业经历」放在前面。 <!-- raw HTML omitted --></p>
<p>而「项目」大多时候与「职业经历」挂钩，逻辑顺序上，在「职业经历」之后，所以结构就变成： <!-- raw HTML omitted --></p>
<p>「联系方式」 <!-- raw HTML omitted --></p>
<p>「职业经历」 <!-- raw HTML omitted --></p>
<p>「项目」 <!-- raw HTML omitted --></p>
<p>「总结」 <!-- raw HTML omitted --></p>
<p>「教育」 <!-- raw HTML omitted --></p>
<p>结构推荐是这五项，顺序就根据个人自身情况进行调整了。 <!-- raw HTML omitted --></p>
<h2 id="格式"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 格式</h2>
<p>「联系方式」与「教育」没有太多值得说道的点，可谓千篇一律。 <!-- raw HTML omitted --></p>
<p>主要聚焦点还是在「项目」和「职业经历」上。 <!-- raw HTML omitted --></p>
<h3 id="职业经历"><!-- raw HTML omitted -->5.1<!-- raw HTML omitted --> 职业经历</h3>
<p>职业经历的格式也相对固定： <!-- raw HTML omitted --></p>
<blockquote>
<p>「公司」，「地点」，「担任的角色」，「工作时间」 <!-- raw HTML omitted --></p>
<p>「在公司中负责或参与过的项目，一句话概括」： <!-- raw HTML omitted --></p>
<ol>
<li>参与xxx 项目，负责xxx 的开发，达成了什么成果 <!-- raw HTML omitted --></li>
<li>负责xxx 项目, 设计，开发xxx, 取得了什么项目成果 <!-- raw HTML omitted --></li>
<li>负责xxx 项目，&hellip; <!-- raw HTML omitted --></li>
</ol>
</blockquote>
<p>在职业经历中一句带过项目经历，进而引出下文提到的「项目经历」，相当于承上启下。 <!-- raw HTML omitted --></p>
<p>当然，如果项目太多，也需要作相应的增减。 <!-- raw HTML omitted --></p>
<h3 id="项目"><!-- raw HTML omitted -->5.2<!-- raw HTML omitted --> 项目</h3>
<p>可能会有朋友觉得项目和经历着实没有什么好写的，或者写出来的内容类似： <!-- raw HTML omitted --></p>
<blockquote>
<p>服务编码，前后端对接，测试 <!-- raw HTML omitted --></p>
<p>功能开发并上线 <!-- raw HTML omitted --></p>
</blockquote>
<p>每个项目和经历总是有东西可以写的，成功的项目有可写的内容，失败的项目也有可写的内容，只要有思考，总是有输出的。 <!-- raw HTML omitted --></p>
<p>那么思考的方式是什么呢？ <!-- raw HTML omitted --></p>
<h4 id="star-method"><!-- raw HTML omitted -->5.2.1<!-- raw HTML omitted --> STAR method</h4>
<p>就是之前在「 <a href="https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E9%AB%98%E6%95%88%E4%BA%A4%E6%B5%81%E7%AF%873/">软件工程师的软技能指北（三）：高效交流篇</a>」提到的「STAR method」这种结构化的思考和沟通方式。 <!-- raw HTML omitted --></p>
<p>所谓的STAR method, 是四个单词的首字母缩写，分别是: Situation(场景), Task(任务), Action(行动)，Result(结果)。即： <!-- raw HTML omitted --></p>
<ul>
<li>situation: 描述问题的背景，这个问题是什么，以及你为什么需要做这个事情 <!-- raw HTML omitted --></li>
<li>task: 你具体的任务是什么，你需要做什么，你的角色是什么？ <!-- raw HTML omitted --></li>
<li>action: 你做了什么事情？你的行动是什么? <!-- raw HTML omitted --></li>
<li>result: 项目结果如何？最好用可量化的指标来呈现? <!-- raw HTML omitted --></li>
</ul>
<p>通过STAR method, 以结构化的方式来思考，并呈现你的项目，描述你的职责与成果。 <!-- raw HTML omitted --></p>
<blockquote>
<p>xx 公司/xx 项目, 时间: 2020.03-2020.xx <!-- raw HTML omitted --></p>
<ol>
<li>项目背景一句话、 <!-- raw HTML omitted --></li>
<li>自己在项目里负责的工作 <!-- raw HTML omitted --></li>
<li>用到的技能/思考的过程或者难点攻克的过程 <!-- raw HTML omitted --></li>
<li>项目的结果或者我的成绩 <!-- raw HTML omitted --></li>
</ol>
</blockquote>
<p>例如： <!-- raw HTML omitted --></p>
<blockquote>
<p>服务编码，前后端对接，测试 <!-- raw HTML omitted --></p>
</blockquote>
<p>就可以修改成: <!-- raw HTML omitted --></p>
<blockquote>
<p>负责xxx项目开发与设计，主导前后端契约设计，前后端并行解耦开发工作，项目用时1个半月成功上线，日访问用户20w, 页面浏览量100w, 峰值访问1000/秒，服务平稳无故障。 <!-- raw HTML omitted --></p>
</blockquote>
<p>这不比平铺直述更有感染力嘛。 <!-- raw HTML omitted --></p>
<h4 id="量化指标"><!-- raw HTML omitted -->5.2.2<!-- raw HTML omitted --> 量化指标</h4>
<p>量化的数字让人更有印象，会让你的经历更有说服力，也更能突出你自己的成绩： <!-- raw HTML omitted --></p>
<p>如非量化的指标表述： <!-- raw HTML omitted --></p>
<blockquote>
<p>项目重构之后，服务性能与可用性都得到了显著提高 <!-- raw HTML omitted --></p>
</blockquote>
<p>难免让人觉得说明力不足 <!-- raw HTML omitted --></p>
<blockquote>
<p>项目重构之后，压测TPS从100/秒增长到1000/秒，系统的不可用总时长从上线前的2小时下降到20分钟，系统可用性从99.9% 增长到99.99% <!-- raw HTML omitted --></p>
</blockquote>
<p>这个又可以呼应「软技能指北（三）：高效交流篇」的「云雨伞」模型，通过数据来表述「云」，增加说明力。 <!-- raw HTML omitted --></p>
<h2 id="排版"><!-- raw HTML omitted -->6<!-- raw HTML omitted --> 排版</h2>
<p>所谓亮眼的简历，无非是「优秀的内容」+ 「简洁耐看的排版」。 <!-- raw HTML omitted --></p>
<p>「内容」值得每个工程师花心思去构思，但花时间去「排版」却大可不必。 <!-- raw HTML omitted --></p>
<p>所以写简历，我只推荐使用 LaTex, Word 还是算了吧。 <!-- raw HTML omitted --></p>
<p>有朋友可能不熟悉 LaTex, LaTex 是美国计算机科学家Leslie Lamport(没错，就是那个发明 Paxos 共识算法的大神) 在20世纪80年代开发的排版系统，遵循「展示与内容分离（separating presentation from content）的原则」。 <!-- raw HTML omitted --></p>
<p>即使用户没有排版和写代码的经验，只需要根据模板填入内容，就可以生成精美的出版刊物。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/wikipedia_latex.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>本地安装和使用LaTex 相对麻烦，所以建议使用网页版本的LaTex 服务，如 <a href="https://www.overleaf.com/">Overleaf:</a> <a href="https://www.overleaf.com/">https://www.overleaf.com/</a>. <!-- raw HTML omitted --></p>
<p>至于简历模板, Overleaf 本身有很多的简历模板分享，Github上也有许多类似的项目，如 <a href="https://github.com/billryan/resume">https://github.com/billryan/resume</a>, 只要把在 Overleaf 上把内容填入到模板中，即可生成一份好看的简历： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/overleaf_resume.png"/> 
</figure>
  <!-- raw HTML omitted --></p>
<h3 id="照片"><!-- raw HTML omitted -->6.1<!-- raw HTML omitted --> 照片</h3>
<p>是否要放照片，这个取决于行业和自身特点，遵循「扬长避短」原则即可，如果形象得体，大可把照片也放在简历中。 <!-- raw HTML omitted --></p>
<h3 id="文件格式"><!-- raw HTML omitted -->6.2<!-- raw HTML omitted --> 文件格式</h3>
<p>只推荐pdf，因为这是一种通用的文件格式，相当多的工具都能打开pdf. <!-- raw HTML omitted --></p>
<p>我既不推荐使用word 写简历，更不推荐发送word 格式的简历。 <!-- raw HTML omitted --></p>
<p>因为并非人人电脑都有装office 办公软件，不一定能打开；此外，版本不正确，或者相应字体没有安装，可能就会导致精心排版的简历乱掉了。 <!-- raw HTML omitted --></p>
<p>简历文件命名: 姓名_[公司/学校]_联系方式.pdf, 如果公司是优势项，那么文件命名就把公司带上，学历同理。 <!-- raw HTML omitted --></p>
<p>切记不要以「简历.pdf」这样的文件来命名，HR可能一天收到几百封简历， <!-- raw HTML omitted -->
她完全有可能不记得自己是否打开过「简历.pdf」这个没有辨识度的文件. <!-- raw HTML omitted --></p>
<h2 id="投递渠道"><!-- raw HTML omitted -->7<!-- raw HTML omitted --> 投递渠道</h2>
<p>写完简历之后，免不了要向潜在客户推销简历，就我个人所知的几个渠道「内推」，「官网」，「第三方招聘网站」，「猎头」，优先级分别是： <!-- raw HTML omitted --></p>
<p>「内推」&gt;&gt;「官网」&gt;「猎头」&gt;&gt;&gt;「第三方招聘网站」。 <!-- raw HTML omitted --></p>
<p>无论是找相熟或者不认识的朋友，「内推」总是投递简历的最优推荐，因为有人可以帮忙跟进处理进度。 <!-- raw HTML omitted --></p>
<p>无论「过」与「不过」，都可以马上知道结果，可以最大限度地避免「石沉大海」 <!-- raw HTML omitted --></p>
<p>如果「心仪公司」没有相熟朋友，也可以在「脉脉」或者「Linkedin」上找人内推。 <!-- raw HTML omitted --></p>
<p>别人一般都很乐意的，部分公司还对「内推」有奖励。 <!-- raw HTML omitted --></p>
<p>如果实在是找不到人内推，「官网」也是一个备选项，一般公司的简历系统都会对处理时间有规定，简历起码都会被处理到，但有可能「渺无音讯」。 <!-- raw HTML omitted --></p>
<p>之前去 Indeed 官网投递，几天后直接收到拒信了. <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/indeed_refuse.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>像「Boss某聘」这类的第三方招聘网站，一般是投递没有「官网」或者内部招聘系统的公司的选择。 <!-- raw HTML omitted --></p>
<p>毕竟HR连官网的简历都有可能处理不过来，着实不大可能去第三方网站上捞简历，只有在要应付指标的时候，才会上去捞一下。 <!-- raw HTML omitted --></p>
<p>当然，把简历直接给到「Linkedin」,「脉脉」之类的三方招聘网站的HR, 那就是属于选项一的「内推」。 <!-- raw HTML omitted --></p>
<p>最后才聊到「猎头」，「猎头」本质上是把你的职业当作商品，你自己的「职业」规划和未来与他们关系着实不大，所以他们给你推的不一定是满足你规划和兴趣的公司。 <!-- raw HTML omitted --></p>
<p>何况「猎头」水平和态度参差不齐，只能作为一个备选项。 <!-- raw HTML omitted --></p>
<p>我在「Linkedin」上，把我的First Name 设为「啤酒的Emoji」，Last Name 才是「我的姓与名」。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/linkedin_basic_info.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>所以那些没有看过我信息，直接私聊发送招聘信息的，就会变成这个样子： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/hi_beer2.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/hi_beer3.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>连我名字都没有写对的人，还能指望什么呢。 <!-- raw HTML omitted --></p>
<h2 id="示例"><!-- raw HTML omitted -->8<!-- raw HTML omitted --> 示例</h2>
<p>我按照上文提到的要点，结构与格式来整理了一下自己的简历： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/ramsay_resume1.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/ramsay_resume2.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="趣事"><!-- raw HTML omitted -->9<!-- raw HTML omitted --> 趣事</h2>
<p>我在三周前，在博客和公众号上发了一个内网看到的 Amazon的<a href="https://ramsayleung.github.io/zh/post/2023/amazon_canada_hiring_event/">国内专场招聘</a>，给有兴趣去加国血汗工厂打工的朋友分享了这个信息。 <!-- raw HTML omitted --></p>
<p>然后，过了一周后，我的个人邮箱收到了这个专场招聘的另外一位recruiter 的邮件，推荐我去参加这个专场招聘，因为我曾经用自己的个人邮箱给 Amazon 投递过简历。 <!-- raw HTML omitted --></p>
<p>只是这位recruiter 不知道我入职，并且与她同组的另外一位同事沟通过这个专场招聘的事。 <!-- raw HTML omitted --></p>
<p>就变成了我这个帮忙发专场招聘信息的人，最后究竟也收到了这个专场招聘的邀请。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/relocation_opportunity.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->10<!-- raw HTML omitted --> 总结</h2>
<p>一份优秀的简历就好比一份宣传册子，可以更好地向我们的潜在客户推销自己。 <!-- raw HTML omitted --></p>
<p>但功夫在平时，简历的内容最终也是日常积累的呈现。 <!-- raw HTML omitted --></p>
<p>扎实做好日常工作，成为一个「靠谱（reliable）」的人 <!-- raw HTML omitted --></p>
<p>「金玉其外」固然好，「内有乾坤」两相宜。 <!-- raw HTML omitted --></p>
<h2 id="参考"><!-- raw HTML omitted -->11<!-- raw HTML omitted --> 参考</h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/LaTeX">https://en.wikipedia.org/wiki/LaTeX</a> <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Linux下如何避免蓝牙音箱自动关机</title>
      <link>https://ramsayleung.github.io/zh/post/2023/linux%E4%B8%8B%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E8%93%9D%E7%89%99%E9%9F%B3%E7%AE%B1%E8%87%AA%E5%8A%A8%E5%85%B3%E6%9C%BA/</link>
      <pubDate>Mon, 15 May 2023 20:48:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/linux%E4%B8%8B%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E8%93%9D%E7%89%99%E9%9F%B3%E7%AE%B1%E8%87%AA%E5%8A%A8%E5%85%B3%E6%9C%BA/</guid>
      <description>1 问题 最近整理了桌上乱糟糟的线，把原来使用aux 线连接的蓝牙音响换成通过蓝牙连接。 然后就发现一个问题，只要音响没有发出声音超过30分钟，蓝牙</description>
      <content:encoded><![CDATA[<h2 id="问题"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 问题</h2>
<p>最近整理了桌上乱糟糟的线，把原来使用aux 线连接的蓝牙音响换成通过蓝牙连接。 <!-- raw HTML omitted --></p>
<p>然后就发现一个问题，只要音响没有发出声音超过30分钟，蓝牙音响就会断开连接，并且自动关机，即使蓝牙音响连接着电源。 <!-- raw HTML omitted --></p>
<p>一番搜索之后，就在知乎上发现了这个问题：<a href="https://www.zhihu.com/question/41682642">求问如何避免蓝牙音箱自动关机？</a> <!-- raw HTML omitted --></p>
<p>但里面提到的解决方案，大多只适用于特定平台，例如Windows 或者Macos, 没有提到 Linux 上的解决方案。 <!-- raw HTML omitted --></p>
<p>每过半个小时手动打开蓝牙音响再连接的方式，实在是太蠢了。 <!-- raw HTML omitted --></p>
<h2 id="灵感"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 灵感</h2>
<p>但是知乎问题里面的部分回答给了我灵感，让我们想起国内某些APP 为了保活，避免被系统kill 掉，在后台播放无声音频的操作。 <!-- raw HTML omitted --></p>
<p>我可以以低音量循环播放一段音频，以实现保活的作用： <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">mpg123 -f <span class="m">1000</span> ~/music/listen_to_the_sea.mp3 --loop -1
</span></span></code></pre></div><p>mpg123 是mp3 播放命令行， <code>-f 1000</code> 参数的含义是：100%的音量是32768, 1000 约等于是1000/32768 = 3% 的音量， <code>-loop -1</code> 就是指无限循环播放。 <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">man mpg123
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-f factor, --scale factor
</span></span><span class="line"><span class="cl">Change scale factor <span class="o">(</span>default: 32768<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--loop <span class="nb">times</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> looping track<span class="o">(</span>s<span class="o">)</span> a certain number of times, &lt; <span class="m">0</span> means infinite loop <span class="o">(</span>not with --random!<span class="o">)</span>.
</span></span></code></pre></div><h2 id="优化"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 优化</h2>
<p>这样就实现了一个可用的版本，只是还要依赖一个 mp3 文件，肯定还有优化的空间。 <!-- raw HTML omitted --></p>
<p>一番调研之后发现， <code>play/sox</code> 命令可以播放指定频率和时长的声音，可以播放20 hz以下的声音，这个频率下的声音人耳是听不到的： <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">play -q -n synth <span class="m">10</span> sin <span class="m">20</span>
</span></span></code></pre></div><ul>
<li><code>-q</code>: 不显示播放进度条 <!-- raw HTML omitted --></li>
<li><code>-n synth 10</code> 播放10秒的音频 <!-- raw HTML omitted --></li>
<li><code>sin 20</code> 频率为20 hz(如果听到了，可以设置成更低) <!-- raw HTML omitted --></li>
</ul>
<p>执行命令之后，可以使用 <code>pavucontrol</code> 命令查看声音输出，应该是类似这样的效果： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/sox_pavucontrol.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="定时执行"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 定时执行</h2>
<p>一直开着个terminal 窗口运行命令有点麻烦，这种重复性的工作，就可以交给 crontab, 让它每分钟执行一次，每次播放10秒。 <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">* * * * * play -q -n synth <span class="m">10</span> sin <span class="m">20</span>
</span></span></code></pre></div><p>但实际运行，发现声音不能如预期那样播放。一番搜索之后，发现 <a href="https://askubuntu.com/questions/832072/can-i-use-cron-to-chime-at-top-of-hour-like-a-grandfather-clock">StackExchange</a> 上有个答案提到需要 export 个环境变量，所以最好创建个脚本 <code>play_beep.sh</code>: <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">export</span> <span class="nv">XDG_RUNTIME_DIR</span><span class="o">=</span>/run/user/1000
</span></span><span class="line"><span class="cl">play -q -n synth <span class="m">10</span> sin <span class="m">10</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="k">$(</span>date<span class="k">)</span> <span class="c1"># 打印日期，主要是为了方便排查</span>
</span></span></code></pre></div><p>然后再安装一个 crontab 任务: <!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">* * * * * /usr/bin/sh /home/ramsay/code/shell/play_beep.sh &gt;&gt; /tmp/beep.log 2&gt;<span class="p">&amp;</span><span class="m">1</span>
</span></span></code></pre></div><p>经过验证，一天都没有断开过蓝牙，自动关机了。 <!-- raw HTML omitted --></p>
<h2 id="参考"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 参考</h2>
<ul>
<li><a href="https://www.zhihu.com/question/41682642">求问如何避免蓝牙音箱自动关机？</a> <!-- raw HTML omitted --></li>
<li><a href="https://askubuntu.com/questions/832072/can-i-use-cron-to-chime-at-top-of-hour-like-a-grandfather-clock/832266#832266">Can I use cron to chime at top of hour like a grandfather clock?</a> <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>软件工程师的软技能指北（三）：高效交流篇</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E9%AB%98%E6%95%88%E4%BA%A4%E6%B5%81%E7%AF%873/</link>
      <pubDate>Sun, 14 May 2023 16:51:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E9%AB%98%E6%95%88%E4%BA%A4%E6%B5%81%E7%AF%873/</guid>
      <description>1 前情提要 软件工程师的软技能指北（一）：总览篇 软件工程师的软技能指北（二）：事业篇 2 前言 让我静静，我只想写代码 化用《我的团长我的团》里面，孟</description>
      <content:encoded><![CDATA[<h2 id="前情提要"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前情提要</h2>
<ol>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/">软件工程师的软技能指北（一）：总览篇</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E4%BA%8B%E4%B8%9A%E7%AF%872/">软件工程师的软技能指北（二）：事业篇</a> <!-- raw HTML omitted --></li>
</ol>
<h2 id="前言"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 前言</h2>
<blockquote>
<p>让我静静，我只想写代码 <!-- raw HTML omitted --></p>
</blockquote>
<p>化用《我的团长我的团》里面，孟烦了父亲的一句话： <!-- raw HTML omitted --></p>
<blockquote>
<p>为何诺大的公司，放不下一张能安静写代码的书桌？ <!-- raw HTML omitted --></p>
</blockquote>
<p>在我此前的固有认知里，所谓的软件工程师就应该安安静静地写代码，但为何我总是求而不得呢？ <!-- raw HTML omitted --></p>
<p>但事实是，在软件开发的大部分时间里，我们都是在与「人」交流，而非与「计算机」交流。 <!-- raw HTML omitted --></p>
<p>即使我们编写代码，首先也是让「人」去理解，其次才是让机器来执行，否则直接写二进制代码即可。 <!-- raw HTML omitted --></p>
<p>而在程序优化中，有一条金科玉律：「针对热点代码进行优化」，因为那是性价比最高的优化策略。 <!-- raw HTML omitted --></p>
<p>既然软件开发中，大部分时间都是与人交流，那么如果能提高与人交流的效率，那么我们的开发效率也会相应地大幅提高。 <!-- raw HTML omitted --></p>
<h2 id="原则"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 原则</h2>
<h3 id="尊重"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 尊重</h3>
<p>与人相处时，最重要的概念之一（可能没有之一），就是尊重他人，每个人心底都是渴望被尊重的。 <!-- raw HTML omitted --></p>
<p>所谓的尊重体现在各种的细节里面，例如： <!-- raw HTML omitted --></p>
<p>尊重他人的观点和言论，留意倾听，眼神放在对方身上，不随意打断别人。 <!-- raw HTML omitted --></p>
<p>尊重他人的时间，不迟到。 <!-- raw HTML omitted --></p>
<p>尊重他人的成果和工作，引用时注意作者与链接等。 <!-- raw HTML omitted --></p>
<p>尊重别人的空间，不在工位附近大声开会，尽量找个会议室。 <!-- raw HTML omitted --></p>
<p>被尊重是每个人最基本的需要，也是很容易忽略的地方。 <!-- raw HTML omitted --></p>
<p>我自己也会在心急时，直接把别人的话打断掉，所以自己在这方面还有很大的改善空间。 <!-- raw HTML omitted --></p>
<h3 id="不随意批评"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> 不随意批评</h3>
<p>因为国内普遍存在的各种上下级等级关系和官本位思想。 <!-- raw HTML omitted --></p>
<p>遇到阻碍或者问题时，很容易通过「批评」来推动和开展工作，甚至很容易出现所谓的「PUA」话术： <!-- raw HTML omitted --></p>
<blockquote>
<p>其实，我对你是有一些失望的。当初给你定级px，是高于你面试时的水平的。 <!-- raw HTML omitted --></p>
<p>我是希望进来后，你能够拼一把，快速成长起来的。 <!-- raw HTML omitted --></p>
<p>px这个层级，不是把事情做好就可以的 <!-- raw HTML omitted --></p>
</blockquote>
<!-- raw HTML omitted -->
<blockquote>
<p>你的产出，和同层级比，是有些单薄的，马上要到年底了，加把劲儿。 <!-- raw HTML omitted --></p>
</blockquote>
<!-- raw HTML omitted -->
<blockquote>
<p>什么，这个事情排期要2周，1周就可以了，没有多少工作的。 <!-- raw HTML omitted --></p>
</blockquote>
<p>我自己也亲耳听过类似的话，心情着实是难受。 <!-- raw HTML omitted --></p>
<p>事实上，如果真的把「尊重」这个基本原则考虑在内，鼓励与赞扬是比批评更有用的工具。 <!-- raw HTML omitted --></p>
<p>我现在的 manager 是个白人，他就很喜欢夸人，我私下喊他做「夸夸群群主」。 <!-- raw HTML omitted --></p>
<p>我和组员刚来的时候，可能他担心我们不适宜，或者是不干活，我们做了一些工作之后，总是在换着法子在夸我们： <!-- raw HTML omitted --></p>
<blockquote>
<p>Thanks you for help to our team, your work makes a great difference. <!-- raw HTML omitted --></p>
<p>You are doing a great job, I am impressed by the way you tackled the problems. <!-- raw HTML omitted --></p>
<p>You will be successful in Amazon, I am pretty confident about that. <!-- raw HTML omitted --></p>
</blockquote>
<p>虽然知道老板目的还是想让我们干活，但是被人夸的感觉肯定比被人用鞭子抽打的感觉要好。 <!-- raw HTML omitted --></p>
<p>见贤思其焉，所以我也学老板多夸人。 <!-- raw HTML omitted --></p>
<p>有一次和舍友去一家韩餐餐馆吃饭，炸鸡很好吃，其他菜也不错。 <!-- raw HTML omitted --></p>
<p>上完菜后，韩国小姐姐过来问我们还有需要，我就说，「all foods are delicious, especially the fried chinken」。 <!-- raw HTML omitted --></p>
<p>小姐姐开心得拍起了小手。 <!-- raw HTML omitted --></p>
<p>身为中国人，可能从小被教育要内敛和矜持，但我们大可不必太高冷，不要吝啬自己的溢美之词。 <!-- raw HTML omitted --></p>
<h3 id="换位思考"><!-- raw HTML omitted -->3.3<!-- raw HTML omitted --> 换位思考</h3>
<p>高效沟通的另外一个要点就是换位思考，从别人的角度，而不是自己的角度来思考问题。 <!-- raw HTML omitted --></p>
<p>在沟通对话中，什么对于他们来说是重要的？他们想要的是什么？ <!-- raw HTML omitted --></p>
<p>最好的方案是一个共赢的方案，可以把多方的诉求都包括在内。 <!-- raw HTML omitted --></p>
<p>一个非常有效的技巧就是，在开始你自己的观点，先重复一次别人的观点，这样就给对方一个明确的信号，我是真的考虑过你的观点的。 <!-- raw HTML omitted --></p>
<p>举个例子，前段时间发了一个 Amazon Canada 招聘的<a href="https://ramsayleung.github.io/zh/post/2023/amazon_canada_hiring_event/">文章</a>，有朋友闻讯而来，给我发简历，让我内推到系统中。 <!-- raw HTML omitted --></p>
<p>只是他没有预料到的是，发送完简历后，马上就收到一封笔试邮件，要求在一周内完成笔试。 <!-- raw HTML omitted --></p>
<p>朋友觉得时间太紧，没有准备好，于是邮件告知我准备放弃。 <!-- raw HTML omitted --></p>
<p>我思索片刻之后，决定与recruiter 沟通下，询问能否推迟笔试截止时间。 <!-- raw HTML omitted --></p>
<p>因为对于朋友而言，他的诉求肯定是有充足的时间来准备； <!-- raw HTML omitted --></p>
<p>而对于recruiter 而言，她们办这个event ，也是希望有尽量多的候选人参加，有尽量多的候选人通过。 <!-- raw HTML omitted --></p>
<p>所以推迟笔试时间，以便朋友参与笔试，是一个符合多方诉求的方案，最后recruiter 的回复也是可以推迟时间： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/%e7%ac%94%e8%af%95%e5%bb%b6%e6%9c%9f.png"/> 
</figure>
  <!-- raw HTML omitted --></p>
<h3 id="充分的上下文"><!-- raw HTML omitted -->3.4<!-- raw HTML omitted --> 充分的上下文</h3>
<p>高效沟通和决策的前提是，提供足够的，充分的信息。 <!-- raw HTML omitted --></p>
<p>也就是说，在你提问题或者沟通的时候，把问题的上下文信息给提供清楚。 <!-- raw HTML omitted --></p>
<p>以前经常会遇到的一种情形是，在企业微信被人拉到一个群里，然后被@, 「xx哥，帮忙看下这个问题」。 <!-- raw HTML omitted --></p>
<p>我也很想帮忙，但是我连问题是什么都不清楚，我是没有办法解决的。 <!-- raw HTML omitted --></p>
<p>一个群几十上百条信息，我是没有精力去逐条翻聊天纪录的。 <!-- raw HTML omitted --></p>
<p>然后，很快就会有人打电话过来，让我解决这个xx问题。 <!-- raw HTML omitted --></p>
<p>如果想要我快速解决问题的话，麻烦首先要给出定义，问题是什么？然后再给出问题的上下文，这样我才能方便排查问题。 <!-- raw HTML omitted --></p>
<p>但这还不是最佳的咨询姿势，我推崇的咨询方式是所谓的 STAR 方法或者叫「Search before Asking」。 <!-- raw HTML omitted --></p>
<h2 id="star-方法-高效提问"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> STAR 方法：高效提问</h2>
<p>所谓的STAR method, 是四个单词的首字母缩写，分别是: Situation(场景), Task(任务), Action(行动)，Result(结果)。即： <!-- raw HTML omitted --></p>
<ul>
<li>situation: 描述问题的背景，这个问题是什么，以及你为什么需要做这个事情 <!-- raw HTML omitted --></li>
<li>task: 你具体的任务是什么，你需要做什么 <!-- raw HTML omitted --></li>
<li>action: 你做了什么事情？你的行动是什么. <!-- raw HTML omitted --></li>
<li>result: 结果如何，你得出的结论是什么? <!-- raw HTML omitted --></li>
</ul>
<p>前面提到过，尊重是与人交流的基本原则, 尊重自然包括尊重别人的时间，不做伸手党。 <!-- raw HTML omitted --></p>
<p>在咨询别人问题的时候，不仅要把问题说清楚，还需要把自己的调查和排查结果告诉别人，即所谓的「search before asking」，这样给人的印象是我尝试自己来解决，但解决无果才来请教你。 <!-- raw HTML omitted --></p>
<p>既表现出对别人能力的尊重，也显示出自己是经过调查才发问的，避免询问一些低级，Google 就能找到答案的问题。 <!-- raw HTML omitted --></p>
<p>没有人喜欢伸手党，你直接拿个问题，不经自己思考去询问别人，这就不是交流沟通，是「空手套方案」了。 <!-- raw HTML omitted --></p>
<p>别人没有这样的义务来给你提供解决方案。 <!-- raw HTML omitted --></p>
<p>所以我向别人求助，无论是企业微信，邮件，还是当面求教，流程一般是： <!-- raw HTML omitted --></p>
<ol>
<li>我现在尝试解决xx问题，我要去解决这个问题的原因是yyy <!-- raw HTML omitted --></li>
<li>我尝试了解法1, 解法2，都无法解决，这是我的日志 <!-- raw HTML omitted --></li>
<li>尝试这几种解法都不能解决问题，不能你能否根据你的经验，给我提供点思路呢？或者是我漏了什么关键步骤么? <!-- raw HTML omitted --></li>
</ol>
<p>或者是. <!-- raw HTML omitted --></p>
<ol>
<li>我现在尝试解决xx问题，我要去解决这个问题的原因是yyy <!-- raw HTML omitted --></li>
<li>我尝试了方案a xxxx, 得出的结果是xx, 然后我再尝试了方案b xxx, 得出的结果是xxx. <!-- raw HTML omitted --></li>
<li>我个人感觉这两种方案各有优劣，分别是xxx, 我倾向方案a, 原因是xxx. <!-- raw HTML omitted --></li>
<li>想请教下，你的看法是觉得哪个方案更优，或者你有什么建议么？ <!-- raw HTML omitted --></li>
</ol>
<p>提供足够的信息和选项给别人做选择题，让不是提供个空白问卷让别人做主观题。 <!-- raw HTML omitted --></p>
<p>毕竟大多数人都喜欢做选择题，省时省力。 <!-- raw HTML omitted --></p>
<p>&mdash; <!-- raw HTML omitted -->
<!-- raw HTML omitted --><!-- raw HTML omitted -->&lt;2023-05-29 一&gt;<!-- raw HTML omitted --><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>关于如何提问，《<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">How to ask questions the smart way</a>》一文已经把要点给掰碎讲清楚了，推荐阅读。 <!-- raw HTML omitted --></p>
<h2 id="云雨伞-有效提建议"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 云雨伞: 有效提建议</h2>
<p>来源于日本知名咨询师大石哲之的著作《靠谱：顶尖咨询师教你的工作基本功》，简单有效，原理概括起来就一句话： <!-- raw HTML omitted --></p>
<blockquote>
<p>天上出现乌云，眼看要下雨，带上伞比较好。 <!-- raw HTML omitted --></p>
</blockquote>
<p>其中的「云」代表通过观察得到的客观事实；「快要下雨」，是从客观事实得出的分析；「带上伞」这个是根据分析给出的建议。 <!-- raw HTML omitted --></p>
<p>这就所谓的「云雨伞」模型的来源，运用「云雨伞」模型提建议，有理有据有方案，能让对方更愿意接受。 <!-- raw HTML omitted --></p>
<p>青史留名，给老板提建议（画饼）的名篇《隆中对》，也运用了「云雨伞」模型： <!-- raw HTML omitted --></p>
<blockquote>
<p>亮答曰：“自董卓以来，豪杰并起，跨州连郡者不可胜数。 <!-- raw HTML omitted --></p>
<p>&hellip; <!-- raw HTML omitted --></p>
<p>荆州北据汉、沔，利尽南海，东连吴会，西通巴、蜀，（描述「云」，表达事实） <!-- raw HTML omitted --></p>
<p>此用武之国，而其主不能守，此殆天所以资将军，（推测「雨」，即分析利弊） <!-- raw HTML omitted --></p>
<p>将军岂有意乎？（带上「伞」，即提出建议） <!-- raw HTML omitted --></p>
<p>益州险塞，沃野千里，天府之土，高祖因之以成帝业。（描述「云」，表达事实） <!-- raw HTML omitted --></p>
<p>刘璋暗弱，张鲁在北，民殷国富而不知存恤，智能之士思得明君。 <!-- raw HTML omitted --></p>
<p>将军既帝室之胄，信义著于四海，总揽英雄，思贤如渴，若跨有荆、益，保其岩阻，西和诸戎，南抚夷越，外结好孙权，内修政理； <!-- raw HTML omitted -->
（推测「雨」，即分析利弊） <!-- raw HTML omitted --></p>
<p>天下有变，则命一上将将荆州之军以向宛、洛，将军身率益州之众出于秦川，百姓孰敢不箪食壶浆以迎将军者乎？ <!-- raw HTML omitted -->
诚如是，则霸业可成，汉室可兴矣。（带上「伞」，即提出建议） <!-- raw HTML omitted --></p>
</blockquote>
<p>这一番结合「云雨伞」的建议（画饼），让老板直呼，「孤之有孔明，犹鱼之有水也」 <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->6<!-- raw HTML omitted --> 总结</h2>
<p>所谓的「Skill = knowledge + practice」，知道一项知识，如果不运用，没有办法修炼成技能的。 <!-- raw HTML omitted --></p>
<p>毕竟「纸上得来终觉浅，绝知此事要躬行」。 <!-- raw HTML omitted --></p>
<p>要多实践才能提高沟通能力。 <!-- raw HTML omitted --></p>
<p>推荐几本读过的，关于沟通，心理学与咨询的好书，推荐度由高至低： <!-- raw HTML omitted --></p>
<ol>
<li><a href="https://book.douban.com/subject/35519608/">《非暴力沟通》</a>, 豆瓣评分：8.7(当然，评分只是一个参考项) <!-- raw HTML omitted --></li>
<li>《<a href="https://book.douban.com/subject/2328458/">社会性动物</a>》，豆瓣评分：9.0 <!-- raw HTML omitted --></li>
<li>《<a href="https://book.douban.com/subject/27021786/">靠谱</a>》：豆瓣评分：7.6 <!-- raw HTML omitted --></li>
<li>《<a href="https://book.douban.com/subject/1377474/">QBQ!問題背後的問題</a>》，豆瓣评分：7.4 <!-- raw HTML omitted --></li>
</ol>
<p>软技能系列的下一篇是： <!-- raw HTML omitted --></p>
<ul>
<li>软件工程师的软技能指北（四）：简历篇 <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://ramsayleung.github.io/zh/about_me_zh/</link>
      <pubDate>Sun, 14 May 2023 12:32:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/about_me_zh/</guid>
      <description>1 主业 Ramsay 是位软件工程师，以写程序为业，曾经就职于蚂蚁金服，微信，目前在Amazon Web Service 工作。 职业经历可详见 Linkedin 推崇开源与动手精神，使用Emac</description>
      <content:encoded><![CDATA[<h2 id="主业"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 主业</h2>
<p>Ramsay 是位软件工程师，以写程序为业，曾经就职于蚂蚁金服，微信，目前在Amazon Web Service 工作。 <!-- raw HTML omitted --></p>
<p>职业经历可详见 <a href="https://www.linkedin.com/in/ramsayleung/">Linkedin</a>  <!-- raw HTML omitted --></p>
<p>推崇开源与动手精神，使用Emacs 与Linux 多年，喜欢动手折腾。 <!-- raw HTML omitted --></p>
<p>写过C++, Java, Python, Javascript/Typescript这四种语言的生产代码，喜欢Rust 与 Ruby，常用EmacsLisp 为自己的工作流写小工具。 <!-- raw HTML omitted --></p>
<h2 id="写作"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 写作</h2>
<p>从16年开始在博客上写博文，期间经历过多次迁移，但大多时候，博客的读者都只有我自己。 <!-- raw HTML omitted --></p>
<p>「自由庄园」名字部分来源于乔治-奥威尔的名作《动物庄园》。 <!-- raw HTML omitted --></p>
<p>此前在公众号和公司内网写文章，被人要求过删文章以及被直接删过文章， <!-- raw HTML omitted -->
所以希望有属于自己的写作自留地，可以畅所欲言。 <!-- raw HTML omitted --></p>
<p>「自由庄园」还有一个对应的英文博客，名为「In pursuit of Simplicity」，主要是记录一些英文写作与感悟的平台。 <!-- raw HTML omitted --></p>
<blockquote>
<p>Simple is Beautiful <!-- raw HTML omitted --></p>
</blockquote>
<p>非纯技术文章大多会同步发布到公众号「宫孙说」上： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/mp_qr_code.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="开源"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 开源</h2>
<p>在 <a href="https://github.com/ramsayleung">Github</a> 上有若干个开源项目，但目前主要在维护<a href="https://github.com/ramsayleung/rspotify">RSpotify</a> 这个使用Rust 语言编写的 Spotify SDK。 <!-- raw HTML omitted --></p>
<p>在<a href="https://stackoverflow.com/users/5738112/ramsay">Stackoverflow</a> 上也会帮忙解答其他开发者的疑问，反馈社区。 <!-- raw HTML omitted --></p>
<h2 id="交流"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 交流</h2>
<p>Ramsay 喜读书，电影，历史；亦爱生活，料理；闲暇时常涂鸦写作，抒发感想。 <!-- raw HTML omitted --></p>
<blockquote>
<p>绿蚁新醅酒，红泥小火炉。 <!-- raw HTML omitted --></p>
<p>晚来天欲雪，能饮一杯无？ <!-- raw HTML omitted --></p>
</blockquote>
<p>望与君，共举杯。 <!-- raw HTML omitted --></p>
<p>个人邮箱：cmFtc2F5bGV1bmcrYmxvZ0BnbWFpbC5jb20K（base64） <!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>软件工程师的软技能指北（二）：事业篇</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E4%BA%8B%E4%B8%9A%E7%AF%872/</link>
      <pubDate>Thu, 11 May 2023 21:32:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E4%BA%8B%E4%B8%9A%E7%AF%872/</guid>
      <description>1 前情提要 软件工程师的软技能指北（一）：总览篇 2 前言 打工是不可能打工的，这辈子都不可能打工的。 3 心态转变 很多软件工程师容易把自己定义成「写代</description>
      <content:encoded><![CDATA[<h2 id="前情提要"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前情提要</h2>
<ol>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/">软件工程师的软技能指北（一）：总览篇</a> <!-- raw HTML omitted --></li>
</ol>
<h2 id="前言"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 前言</h2>
<blockquote>
<p>打工是不可能打工的，这辈子都不可能打工的。 <!-- raw HTML omitted --></p>
</blockquote>
<h2 id="心态转变"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 心态转变</h2>
<p>很多软件工程师容易把自己定义成「写代码的」，或者是「码农」，就是以写软件为生的人。 <!-- raw HTML omitted --></p>
<p>也只愿意接受写代码相关的任务，什么文档，设计，需求分析，是一概不想理的，我就是一把唆。 <!-- raw HTML omitted --></p>
<p>也有工程师觉得，反正我把事情做好也只有这么点工资，摆烂收入也不一定会下降，那不如就躺平，反正我的收入是固定。 <!-- raw HTML omitted --></p>
<p>也不能说毫无道理，只是把自己定位成「需求翻译机」，着实和「流水线的工人」区别不大。 <!-- raw HTML omitted --></p>
<p>随着自动化技术的进步，「流水线工人」很容易就被机器人所取代，它们只要能源充足，就可以24小时不停地产出 <!-- raw HTML omitted --></p>
<p>但是踏实干活的工程师，也难免容易有与以上类似的疑惑。 <!-- raw HTML omitted --></p>
<p>那不如换个思路： <!-- raw HTML omitted --></p>
<p>把你的工作当成是你自己的生意（business），那你眼中的一切都会变得截然不同。 <!-- raw HTML omitted --></p>
<h3 id="客户"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 客户</h3>
<p>既然是生意，自然要找对目标客户。 <!-- raw HTML omitted --></p>
<p>如果把工作当成生意，那么你的客户就是你的雇主，虽然你的客户大多数情况下只有一个。 <!-- raw HTML omitted --></p>
<p>但是很多的公司，都是靠给某一个大客户供货而做大做强的。 <!-- raw HTML omitted --></p>
<h4 id="客户-customer-与用户-user"><!-- raw HTML omitted -->3.1.1<!-- raw HTML omitted --> 客户（customer）与用户（user）</h4>
<p>谈起business, 我就想聊一下个人对于客户与用户的浅薄见解。 <!-- raw HTML omitted --></p>
<p>归纳起来，就是两点： <!-- raw HTML omitted --></p>
<p><strong><strong>商业公司总是客户第一</strong></strong> <!-- raw HTML omitted --></p>
<p><strong><strong>用户不等于客户</strong></strong> <!-- raw HTML omitted --></p>
<p>简而言之，用户是使用某项服务或者产品的人，而客户是为某项服务或者产品付费的人。 <!-- raw HTML omitted --></p>
<p>举个例子，经常有人说，微信不注重用户体验，微信不倾听用户的声音，微信有着地球上第二傲慢的产品经理团队（第一可能是苹果）。 <!-- raw HTML omitted --></p>
<p>就我在微信的开发经历而言，的确如此。 <!-- raw HTML omitted --></p>
<p>没有见过哪些产品经理提的需求是来自于改善用户体验的， <!-- raw HTML omitted -->
腾讯内网上都是挂着各种反馈微信用户体验的帖子，最后都是以「这个问题，楼主可以私聊我们讨论」结束的。 <!-- raw HTML omitted --></p>
<p>因为，对于微信而言，微信用户只是使用微信这个软件的人，而不是为微信付费的人，不是微信收入的来源。 <!-- raw HTML omitted --></p>
<p>对于微信支付而言，客户是各种接入微信支付的商户，因为每笔交易，他们要交约等于交易金额 0.0021%或者更多的手续费，属于躺着赚钱的模式； <!-- raw HTML omitted --></p>
<p>对于微信朋友圈，公众号而言，客户是各种广告主； <!-- raw HTML omitted --></p>
<p>在微信用户面前，微信就是个爹，教育你们怎么使用微信；但是在微信客户面前，比如美团，快手这些微信支付的大客户，微信就是孙子。 <!-- raw HTML omitted --></p>
<p>要做什么需求，产品经理根本没有办法推；要什么时候上线，就什么时候上线，即使不合理，也只能回来压榨工程师的时间。 <!-- raw HTML omitted --></p>
<p>毕竟客户说了，你们不做我们就切到支付宝去。 <!-- raw HTML omitted --></p>
<p>所以微信用户本质上只是微信收入来源的耗材和燃料，反正用户离不开微信这口灶，产品经理为什么还要听燃料的心声呢。 <!-- raw HTML omitted --></p>
<p>当然，背后的商业逻辑是这样，用户体验又是另外一回事了。 <!-- raw HTML omitted --></p>
<h3 id="产品"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> 产品</h3>
<p>既然是生意，那么自然要有可以营利的产品或服务，对于大部分工程师而言，他们能提供的产品，就是生产软件的服务。 <!-- raw HTML omitted --></p>
<p>那和「写代码的」也没有什么差别嘛？ <!-- raw HTML omitted --></p>
<p>稍安勿躁，这只是第一步嘛。 <!-- raw HTML omitted --></p>
<p>如果我们提供的生产软件的服务是生意的话，那么要想营利，产生更大的利润，就需要我们考虑一个问题： <!-- raw HTML omitted --></p>
<p>如何大家都是生产软件的生意，你的产品又如何从同质化严重的同行中脱颖而出。 <!-- raw HTML omitted --></p>
<h3 id="竞争优势"><!-- raw HTML omitted -->3.3<!-- raw HTML omitted --> 竞争优势</h3>
<p>搞低价倾销（加班巻死他们）？ <!-- raw HTML omitted --></p>
<p>这也是个可行但不能持久的法子： <!-- raw HTML omitted --></p>
<ol>
<li>毕竟你搞低价倾销，即使把生意都抢到，你产能有限，客户的单不一定都能接过来； <!-- raw HTML omitted --></li>
<li>另外低价倾销，只会把市场搞坏，降低了利润空间，只会让客户单方面受益 <!-- raw HTML omitted --></li>
<li>强中自有强中手，一山还有一山高，万一遇到比你还能搞低价倾销的同行，那不是哑巴吃黄莲，有苦说不出嘛。 <!-- raw HTML omitted --></li>
</ol>
<p>所以最优解应该是你提供更优质的服务，将优质服务作为自己的竞争优势。 <!-- raw HTML omitted --></p>
<p>既然要提供优势的服务，就需要 <!-- raw HTML omitted --></p>
<ol>
<li>学会与客户沟通交流，先明确客户的需求， <!-- raw HTML omitted --></li>
<li>然后分析需求，明确这服务是否客户想要的， <!-- raw HTML omitted --></li>
<li>再动工建设，保证最终成品贴近客户的诉求。 <!-- raw HTML omitted --></li>
</ol>
<p>或者是成为某个领域的专家，提供差异化的服务。 <!-- raw HTML omitted --></p>
<p>所谓人无我有，人有我优。 <!-- raw HTML omitted --></p>
<p>看到这里，有朋友可能会质疑：即使我做了这么多，做得这么好，但是工资（产品的售价）还是不涨阿，那还有什么意思？ <!-- raw HTML omitted --></p>
<p>如果把这个当作自己的生意，提供优质服务之后，自然是需要和客户重新谈合同的嘛（加薪）。 <!-- raw HTML omitted --></p>
<p>如果谈不拢，那就换家客户就好了，反正我只要产品够好，自然不缺客户，我还可以拿现有的供货合同和未来的客户谈。 <!-- raw HTML omitted --></p>
<p>生意是自己，服务做优质之后，最终受益的还是自己（当然，需要些时间和策略） <!-- raw HTML omitted --></p>
<h3 id="大厂光环"><!-- raw HTML omitted -->3.4<!-- raw HTML omitted --> 大厂光环</h3>
<p>所谓的大厂光环，和偶像光环类似，就觉得个人会因为进去某个公司，把平台优势当作自己的成就，从而骄傲了起来。 <!-- raw HTML omitted --></p>
<p>坦白讲，以前我也有大厂光环，在自己去了某家大厂之后。 <!-- raw HTML omitted --></p>
<p>走路的时候，头抬得更高了，背挺得更直了，以便于胸前的工牌更加醒目。 <!-- raw HTML omitted --></p>
<p>如果把自己的职业生涯比作一门生意后，我想我应该不会再为与某个客户合作而沾沾自喜，毕竟客户的商业成就，与我关系不大。 <!-- raw HTML omitted --></p>
<p>客户可以有很多个，没有必要为别人的成就而自得不已。 <!-- raw HTML omitted --></p>
<p>最近新读到一首诗，唐代孟郊的《劝学》： <!-- raw HTML omitted --></p>
<blockquote>
<p>击石乃有火，不击元无烟。 <!-- raw HTML omitted --></p>
<p>人学始知道，不学非自然。 <!-- raw HTML omitted --></p>
<p>万事须己运，他得非我贤。 <!-- raw HTML omitted --></p>
<p>青春须早为，岂能长少年。 <!-- raw HTML omitted --></p>
</blockquote>
<p><strong><strong>万事须己运，他得非我贤。</strong></strong> <!-- raw HTML omitted --></p>
<h2 id="十项全能"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 十项全能</h2>
<p>既然是要做生意，那么只会写代码，注定是不可行。 <!-- raw HTML omitted --></p>
<p>毕竟没有见过哪家成功的商业公司，只在车间生产产品即可，不需要一系列配套的商业运作流程： <!-- raw HTML omitted --></p>
<ol>
<li>营销与广告，打造个人品牌，写博客或者做Up主 <!-- raw HTML omitted --></li>
<li>持续学习，没有什么生意是一成不变，就能从爷爷辈做到孙子辈的 <!-- raw HTML omitted --></li>
<li>如何提升个人效率，以更少的投入获取更多的产出 <!-- raw HTML omitted --></li>
<li>如何理财，管理你生意的营收与支出 <!-- raw HTML omitted --></li>
<li>如何健身，管理你自己的身材 <!-- raw HTML omitted --></li>
<li>旋转720度，落地无水花 <!-- raw HTML omitted --></li>
</ol>
<p>诸如此类，这些技能要求也就变成理所当然。 <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 总结</h2>
<p>把工作当作生意的思路转变，只是第一步。 <!-- raw HTML omitted --></p>
<p>套用《霸王别姬》的一句台词： <!-- raw HTML omitted --></p>
<blockquote>
<p>今儿个是破题儿 <!-- raw HTML omitted --></p>
<p>文章还在后头呢 <!-- raw HTML omitted --></p>
</blockquote>
<p>客户或公司是一个抽象的概念，实际也是由形形色色的人组成。 <!-- raw HTML omitted --></p>
<p>与客户合作，实际是与各种人打交道，如何高效沟通和交流就是一个非常有用的技能。 <!-- raw HTML omitted --></p>
<p>但对于曾经社恐的我来说，跨出第一步却是非常艰难。 <!-- raw HTML omitted --></p>
<p>所以软技能系统的下一篇是： <!-- raw HTML omitted --></p>
<p>软件工程师的软技能指北（三）：高效交流篇 <!-- raw HTML omitted --></p>
<p>对于后续的篇章，呼应上文，我有了大概腹稿，分别是： <!-- raw HTML omitted --></p>
<ul>
<li>软件工程师的软技能指北（四）：简历篇 <!-- raw HTML omitted --></li>
<li>软件工程师的软技能指北（五）：面试篇 <!-- raw HTML omitted --></li>
<li>软件工程师的软技能指北（六）：谈薪篇 <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>软件工程师的软技能指北（一）：总览篇</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/</link>
      <pubDate>Fri, 05 May 2023 08:24:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/</guid>
      <description>1 背景 上大学时，曾经看过一本书《软技能，代码之外的生存指南》，主要介绍程序员要想取得成功的职业生涯，所必需的软技能。 所谓的软技能，是区别与使</description>
      <content:encoded><![CDATA[<h2 id="背景"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 背景</h2>
<p>上大学时，曾经看过一本书《软技能，代码之外的生存指南》，主要介绍程序员要想取得成功的职业生涯，所必需的软技能。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/book_cover_v1.jpg"/> 
</figure>

<p>所谓的软技能，是区别与使用C++或Java 编写业务逻辑和单元测试代码，使用Docker 部署等「硬技能」，而是注重职场，心态，身体与理财等各方面提升的「软技能」。</p>
<p>大学时候的我还沉迷于编写各种很cool 的代码，学各种编程语言，觉得此书不过是面向程序员的「鸡汤」一本。</p>
<h3 id="再读"><!-- raw HTML omitted -->1.1<!-- raw HTML omitted --> 再读</h3>
<p>工作第三年时，换了一份工作，对职业充满了迷茫与困惑，然后再读了一次这本书，得出的结论是书挺不错的，但是不符合中国程序员的国情。</p>
<p>比如理财方面，建议程序员在低房价时买房，我也想买，但是在深圳只能是望楼兴叹；</p>
<p>健身方面，下班后多运动，自己做饭，控制饮食以增肌减脂，着实没有时间自己做饭。</p>
<p>但里面的思路和哲学很有参考意义。</p>
<h3 id="三读"><!-- raw HTML omitted -->1.2<!-- raw HTML omitted --> 三读</h3>
<p>最近突然想起了这本书，搜索之后发现，英文原版在2020能出了第二版，而中文版本也在2022年翻译出版了；</p>
<p>因为书再版了，所以又重读了一次这本书，英文书名会更正常一些：Soft Skills: The Software Developer&rsquo;s Life Manual</p>
<figure>
    <img loading="lazy" src="/ox-hugo/book_cover.jpg"/> 
</figure>

<p>得出的结论还是与之前一致：「书中的思路和哲学很有参考意义，做法却不一定适用」。</p>
<p>但区别在于，我这次打算把我自己的做法与行动也总结下来，「用他的旧瓶子，装我的新酒」。</p>
<p>就成功的标准而言，我的职业生涯还远谈不上成功，甚至可以说还有很多失败之处，这也算是我自己反思的心得。</p>
<p>毕竟也不只有别人优秀的经历，我这种潦倒的经历也是可以参考的。</p>
<blockquote>
<p>见贤思齐焉，见不贤而内自省也。</p>
</blockquote>
<p>这让我想起了Netflix 的高分纪录片《我心永随桑德兰》，别人拍纪录片是记录成功，这部豆瓣9.2分的片子却是在记录失败：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/%e6%88%91%e5%bf%83%e6%b0%b8%e9%9a%8f%e6%a1%91%e5%be%b7%e5%85%b0.png"/> 
</figure>

<p>英超保级劲旅桑德兰，在2017年终于花光自己在英超的保级运气，从顶级联赛英超跌入二级联赛英冠。</p>
<p>然后俱乐部高层想拍一部纪录片，记录自己奋发图强，卧薪尝胆杀回英超的经历，以此吸引投资者，最后却是二连跳，跌入到三级联赛英甲的神剧情。</p>
<p>把我不开心的事说出来，拿出来给大家一起开心下嘛。</p>
<h2 id="软技能"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 软技能</h2>
<p>就软技能而言，绝不止「软件工程师」这个职业需要这个技能，而是绝大部分职业都需要的。</p>
<p>因为绝大部分的工作都是与人打交道，而软技能就是如果更高效与人沟通的关键技能。</p>
<p>如果有「软件工程师」认为自己只要写代码就可以了（我曾经就是这么认为的）；或者觉得，写代码才是最有趣的部分（我现在也是这么认为的），我不想理这么多事情；</p>
<p>那么你的可替代性就非常高，当代码生成工具足够成熟之后，你就可以被裁掉了。</p>
<p>之前办信用卡时候，我说的职业是Software Engineer，银行客户经理问我，你们是不是只要埋头对着电脑敲键盘即可，不需要和人说话的？</p>
<p>（我心想，你是美剧看多了吧）</p>
<p>而事实恰恰与直觉相反，软件工程师大部分时间都在与人打交道：</p>
<ol>
<li>拿到需求时，需要分析需求的可行性，与产品经理扯皮，理清模糊之处</li>
<li>撰写设计文档，和组员及老板介绍方案，比较方案优劣，选择最优解</li>
<li>与上下游团队扯皮，求下游团队帮忙干活，给上游团队表演太极</li>
<li>和老板画饼，只要再给我些时间，定然能做得成绩斐然。</li>
</ol>
<p>哪项不是与人打交道呢？项项都是我缺乏的技能阿，我就只会接活，干活，然后再接再干。</p>
<p>老黄牛听到我这境况，估计都得叫我一声兄弟；流水线见我这际遇，也会直呼一声「内行」</p>
<p>所以「软技能」真的是不可或缺。</p>
<p>或许是我给银行客户经理的答案不合他意，我信用卡申请被拒了；</p>
<p>或许我「软技能」再强大一些就能通过了.</p>
<h2 id="主旨"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 主旨</h2>
<p>原书把主旨分成七部分，分别是:</p>
<ol>
<li>事业(Career): 像经营企业一样，打磨自己的职业生涯</li>
<li>自我营销(Marketing Yourself): 通过高质量文章和视频，打造自己的个人品牌</li>
<li>学习(Learning): 终身学习，自我学习</li>
<li>生产力（Productivity）：提高生产力的方式</li>
<li>理财（Finanacial）：如何复利，创造被动收入</li>
<li>健身（Fitness）：健康，有型的体魄</li>
<li>心态（Mindset）：培养积极的心态，To be a better man(woman).</li>
</ol>
<p>我就不会按照作者的主旨来阐述我自己的想法，毕竟「他瓶装我酒」，想怎么「装」就是我自己的选择了。</p>
<p>感触多些的主旨，就拆分开多几篇文章，没有太多感慨的部分，可能就选择性省略了。</p>
<h2 id="总结"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 总结</h2>
<p>所以要「软硬都抓，内外兼修」，才能成长为一个优秀的软件工程师。</p>
<p>只会写代码的软件工程师，真的是注定吃亏，酒香也怕巷子深。这是多次吃亏之后得出的经验总结。</p>
<p>其他的职业与岗位也大抵如此。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>做个摆渡人：Amazon Canada的国内专场招聘</title>
      <link>https://ramsayleung.github.io/zh/post/2023/amazon_canada_hiring_event/</link>
      <pubDate>Tue, 02 May 2023 18:17:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/amazon_canada_hiring_event/</guid>
      <description>1 Amazon Canada国内专场招聘 刚刚有群里消息灵通的小伙伴分享，Amazon Canada(主要Base 在Vancouver )会在国内的深圳，上海</description>
      <content:encoded><![CDATA[<h2 id="amazon-canada国内专场招聘"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> Amazon Canada国内专场招聘</h2>
<p>刚刚有群里消息灵通的小伙伴分享，Amazon Canada(主要Base 在Vancouver )会在国内的深圳，上海及周边（杭州，苏州）和香港有专场的招聘会。</p>
<p>最近有比较多的同学和朋友咨询加拿大工作的事情，所以就把招聘Event 分享出来。</p>
<p>本次招聘的主要对象是L5的工程师，L4和L6也有少数的HC.</p>
<p>国内专场招聘的链接：</p>
<p><a href="https://amazon.jobs/en/jobs/2361958/hong-kong-event-sde-amazon-stores">https://amazon.jobs/en/jobs/2361958/hong-kong-event-sde-amazon-stores</a></p>
<p>二维码：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/amazon_hire_event_qrcode.png"/> 
</figure>

<p>可以微信或者邮箱找我帮忙内推, 我可以帮忙递简历和咨询进度，我邮箱是 cmFtc2F5bGV1bmcrYW16bl9oaXJlX2V2ZW50QGdtYWlsLmNvbQo= (base64 decode)，希望能做个摆渡人吧。</p>
<h3 id="面试流程"><!-- raw HTML omitted -->1.1<!-- raw HTML omitted --> 面试流程</h3>
<p>与招聘的 recruiter 沟通过，应该还不会有 in person 的面试，还是线上的virtual 面试，给面试候选人发一个会议链接，然后进行线上面试。</p>
<p>所以招聘写着HongKong Event, 也并不需要去香港面试。</p>
<p>这次主要是面向SDE(Software Development Engineer), 职位大多是L5.</p>
<p>面试时间大概是6月底，所以大概有2个月的时间来准备。</p>
<p>以我个人经验，L5面试流程大概是：</p>
<ol>
<li>Online Assessment(OA), 做一到两道算法题，难度大概是Leetcode Medium - Hard, 多刷题库，有机会试上原题。</li>
<li>Phone Screen(Phone Interview), 视OA 结果而定，根据OA 的答题结果，系统会给出建议是否需要Phone Screen, 如果答得比较好，可能就不需要。我当时也没有这一轮</li>
<li>4轮onsite, 一天搞完，包括：
<ul>
<li>一至两道基于Leadership Principle的 Behavioral Qusetion(BQ) + 一题算法题，Leetcode Medium 水平</li>
<li>一至两道基于Leadership Principle的 Behavioral Qusetion(BQ) + 一题算法题，Leetcode Medium 水平</li>
<li>一至两道基于Leadership Principle的 Behavioral Qusetion(BQ) + System Design(SD)</li>
<li>一至两道基于Leadership Principle的 Behavioral Qusetion(BQ) + Object Oriented Design(OOD)</li>
</ul>
</li>
<li>拿 Offer</li>
</ol>
<h2 id="q-and-a"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> Q&amp;A</h2>
<p>在微信上和朋友分享之后，有比较多的朋友咨询问题，我就尽量总结下Q&amp;A</p>
<h3 id="面试是全英文的么"><!-- raw HTML omitted -->2.1<!-- raw HTML omitted --> 面试是全英文的么？</h3>
<p>如无意外，是的。毕竟去了温哥华工作，也不可能只说中文。</p>
<h3 id="我英语口语不行-可以试试么"><!-- raw HTML omitted -->2.2<!-- raw HTML omitted --> 我英语口语不行，可以试试么？</h3>
<p>其实，只要能沟通就会了，不是雅思考试，不需要4个7，能让面试官听懂就可以了。</p>
<p>即使去尝试下，最多也只是付出时间成本，也损失不了什么。</p>
<p>小马过河，你也不知道你是松鼠还是黄牛。</p>
<h3 id="面试通过后公司帮办工签么"><!-- raw HTML omitted -->2.3<!-- raw HTML omitted --> 面试通过后公司帮办工签么？</h3>
<p>是的，公司会指派对应的律所来帮忙申请工签，只需要按律所要求提供材料即可。</p>
<p>时间大概需要4-6个月，视情况而定。</p>
<p>配偶和子女也可以一并办理签证。</p>
<h3 id="面试通过后多久入职"><!-- raw HTML omitted -->2.4<!-- raw HTML omitted --> 面试通过后多久入职？</h3>
<p>一般大概需要半年，主要是办工签，等IRCC 审批。</p>
<h3 id="amazon不是刚裁员-怎么又招人了"><!-- raw HTML omitted -->2.5<!-- raw HTML omitted --> Amazon不是刚裁员，怎么又招人了？</h3>
<p>well, I don&rsquo;t know，我也想知道。</p>
<h3 id="amazon的面试难么"><!-- raw HTML omitted -->2.6<!-- raw HTML omitted --> Amazon的面试难么？</h3>
<p>这个嘛，只能说见仁见智。</p>
<p>只是相对来说，Amazon 是北美大厂FANNG 里面的地板难度，主要是多刷题，就有机会遇到原題。</p>
<p>多刷面经，亚麻的面试套路还是相对固定的。</p>
<h3 id="behavioral-qusetion-与leadership-principle-究竟是什么"><!-- raw HTML omitted -->2.7<!-- raw HTML omitted --> Behavioral Qusetion 与Leadership Principle 究竟是什么？</h3>
<p>BQ（Behavioral Qusetion），即行为面试问题，Amazon 面试官会通过BQ考察你的性格特征和职场软技能，判断你与企业的文化、价值观等原则是否匹配，最终决定是否录用你。</p>
<p>而判断标准就是Amazon 的17条「价值观」，即 Leadership Principle, 例如:</p>
<ol>
<li>Customer Obsession</li>
<li>Ownership</li>
<li>Invent and Simplify</li>
<li>&hellip;</li>
</ol>
<p>具体可见官网说明：<a href="https://www.amazon.jobs/content/en/our-workplace/leadership-principles">https://www.amazon.jobs/content/en/our-workplace/leadership-principles</a></p>
<p>常见的问题如：</p>
<ol>
<li>Tell me a time when you had a deal with a very difficult customer</li>
<li>Tell me about a time when you took on something significant outside your area of responsibility</li>
<li>Tell me about something you deliver above standards</li>
<li>Tell me about a time when you couldn&rsquo;t meet your deadline</li>
<li>Tell me about xxx</li>
</ol>
<p>相当于命题作文，需要结合你自己的简历内容，提前准备小故事</p>
<h3 id="招聘的业务部门是哪些"><!-- raw HTML omitted -->2.8<!-- raw HTML omitted --> 招聘的业务部门是哪些？</h3>
<p>据recruiter 所说，这次是个专场的招聘，相当于是放到一个大池子里面，通过之后再做Team Match, 所以她们也不知道具体的业务团队是哪些？</p>
<h3 id="我要刷多少题leetcode-呢"><!-- raw HTML omitted -->2.9<!-- raw HTML omitted --> 我要刷多少题Leetcode 呢？</h3>
<p>well, 这个也很难回答，毕竟每个人能力不一样，但一般来说，300题 + Amazon 的题库应该可以应付了。</p>
<h3 id="我是写xxx-语言的-可以去面试么"><!-- raw HTML omitted -->2.10<!-- raw HTML omitted --> 我是写xxx 语言的，可以去面试么？</h3>
<p>就我所知，无论你是写 Javascript/Java/C++/C/Python/Ruby/Assembly 还是Lisp,</p>
<p>只要你能通过面试即可，使用什么语言都没关系。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>加拿大之初体验</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E4%B9%8B%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Sun, 09 Apr 2023 09:56:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E4%B9%8B%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
      <description>1 起 落地加拿大已经大半个月了，也开始工作了，心情也从期待，紧张，忐忑，彷徨，兴奋到现在逐渐平静下来。 来到一个陌生的国家，使用不一样的货币，说</description>
      <content:encoded><![CDATA[<h2 id="起"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 起</h2>
<p>落地加拿大已经大半个月了，也开始工作了，心情也从期待，紧张，忐忑，彷徨，兴奋到现在逐渐平静下来。</p>
<p>来到一个陌生的国家，使用不一样的货币，说不一样的语言，过不一样的生活和工作习惯。一切如初生婴儿一般，需要重新学习和适应。</p>
<p>现在就来分享下我与加拿大之初体验。</p>
<h2 id="衣"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 衣</h2>
<p>出发前，在广东的天气都快接近30度，在家的我已经把拖鞋，短裤都已经穿起来了。</p>
<p>虽然我所在的城市已经是加拿大的最南端，但我落地加拿大之后的第一感觉就是：冷。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/weather_report.jpg"/> 
</figure>

<p>看了下手机上的天气预报，温度只有5度，还刮起了风。</p>
<p>落地之后，我的穿着从短裤变成了棉衣，只是我穿着行李箱拿出来的棉衣都觉得冷，怎么看到街上的行人只穿了个薄外套或者夹克，都丝毫没有寒意。</p>
<p>天气太冷，以至于我都无法出门跑步了。</p>
<p>除去冷之外，温哥华的另外一个特点就是多雨，所以温哥华（Vancouver）也被称为是雨哥华(Raincouver)，之前还遇到下冰雹：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/%e5%86%b0%e9%9b%b9.jpg"/> 
</figure>

<p>后来，我发现，无论大太阳还是下雨，温哥华本地人都不打伞。因此，我得出一个结论，他们的衣服是防水的。</p>
<p>那么问题就来了，他们的裤子防水么？</p>
<h3 id="地理位置"><!-- raw HTML omitted -->2.1<!-- raw HTML omitted --> 地理位置</h3>
<p>家人开始总会很疑惑，为什么我说我去的城市是温哥华(Vancouver), 他们看到我的定位叫列治文/列士满(Richmond), 我不会去错地方，进了传销窝吧。</p>
<p>所谓的温哥华一般指的是大温哥华地区(Greater Vancouver), 或温哥华都会区(Metro Vancouver), 是指温哥华市和周围的卫星城组成的都会区，约等于粤港澳大湾区，但是不同城市之间的距离就小很多了，大体与广州和佛山类似。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/450px-Metro_Vancouver_Chinese_Map.png"/> 
</figure>

<p>对这些大温城市的「刻板」印象：</p>
<ul>
<li>Vancouver(温哥华)：真-温哥华，大温地区唯一的「城里(downtown)」, CBD，潮牌夜店与流浪汉所在地。</li>
<li>North Vancouver(北温)：风景好，本地人居多。</li>
<li>West Vancouver(西温): 巨富聚居，豪宅云集之地，俞敏洪家就在温西。</li>
<li>Burnaby(巴拿比)：地理位置处于大温中心，有BC省最大的购物中心，新城区。</li>
<li>Surrey(索里)：印度族裔聚居之地，治安较差。</li>
<li>Richmond(列治文)：华人聚居之地，目测50%以上都是华裔。白人在这里，算是「外国人」，被华裔移民戏称为「老家」。</li>
</ul>
<h2 id="食"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 食</h2>
<p>因为我有一个挑剔的广东胃，来之前，我还担心来到加拿大之后不适应，只能委屈我的胃消化薯条，炸鸡，汉堡了。</p>
<p>没有想到 Richmond 被誉为北美最多中国美食的城市（另外一个可能是多伦多）。</p>
<h3 id="酒楼"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 酒楼</h3>
<p>这里遍地写满繁体中文的饭店和酒楼，再上服务员的粤语招待，让我有种身处香港的错觉。</p>
<p>而饭菜品尝下来，这里的店的水准和味道，可谓吊打深圳（深圳能有什么好吃，就随处可见的椰子鸡），估摸能比得上广州。当然，只是味道，价格要贵很多。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/%e7%83%a7%e9%b8%ad.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/%e6%b2%99%e5%a7%9c%e9%b8%a11.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/%e6%b2%99%e5%a7%9c%e9%b8%a12.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/%e7%89%9b%e8%82%89%e9%a5%ad.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/%e7%89%9b%e8%85%a9%e9%a5%ad.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/%e7%81%ab%e9%94%85.jpg"/> 
</figure>

<p>Richmond 饭菜虽美味，但北美有个我至今也难以适应的风俗：给小费。</p>
<p>加拿大的小费还是税后的，一般要给个15%. 只能默默地为国内的服务业从业者哀叹下，国内人工真廉价。</p>
<h3 id="做饭"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> 做饭</h3>
<p>酒楼饭店虽多，但总不能天天下馆子，所以就需要拿出我多年的「煮饭公」经验了。</p>
<p>而住处1km内，就有华人超市「大统华」和香港风格的菜市场，我平时在国内用到的酱料和厨具，在 Richmond 的菜市场都能买到，甚至包括盐焗鸡粉和磨刀石，着实有点离谱。</p>
<p>因为有这样的便利条件，我就能吃到有家味道的饭菜：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/%e9%b8%a1%e7%bf%851.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/%e9%b8%a1%e7%bf%852.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/%e9%b8%a1%e7%bf%85%e9%b8%a1%e8%84%9a%e7%85%b2.jpg"/> 
</figure>

<p>回公司办公时，因为公司在温哥华市中心，附近真的只有汉堡和炸鸡，就一定要自己带饭了。</p>
<p>不过，公司办公楼外的风景着实很不错：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/office_scene.jpg"/> 
</figure>

<h2 id="住"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 住</h2>
<h3 id="选择"><!-- raw HTML omitted -->4.1<!-- raw HTML omitted --> 选择</h3>
<p>新到一个城市，最重要就是要找到住处，有个可落脚的窝。</p>
<p>之前做过攻略，预期是住在 Richmond 或者Burnaby，为了实地考察究竟哪里更宜居，我通过酒店和Airbnb 民宿，把Vancouver 市中心, Richmond, Burnaby都住了两天，得出的结论是：</p>
<ul>
<li>Vancouver downtown: 又贵，又小，流浪汉又多，附近又没有便利的生活设施</li>
<li>Burnaby: 环境虽好，多公寓，但是附近没有便利的生活设施，如果没有车，购物，买菜都不方便。</li>
<li>Richmond: 好吃的多，生活设施方便，但距离市中心稍远，通勤时间略长。</li>
</ul>
<p>权衡利弊之后，最后毫无悬念地选择住在了 Richmond.</p>
<h3 id="租售比"><!-- raw HTML omitted -->4.2<!-- raw HTML omitted --> 租售比</h3>
<p>租房时，从网站上浏览温哥华租金历史的变化趋势，看到这两年的租金翻了一倍。</p>
<p>一个两室的房子，如果靠近天车站和超市，基本都要3000加元，通货膨胀压力太大，真的吃不消。</p>
<p>从深圳来的人，难免会对房价感兴趣，就看了一下住处附近的房价。</p>
<p>温哥华西靠大海，北朝雪山，身处加国最南边，气温宜人，风景好又宜居，所以温哥华的房价一直高居加国前茅。兼之这两年房价又猛涨，已经到了让普通人咋舌的地步了。</p>
<p>只不过加币兑换人民币，汇率是1:5，如果温哥华的房价以人民币换算过来，还是比不上深圳。</p>
<p>不知道这是否值得深圳人民骄傲呢。</p>
<h3 id="租房条件"><!-- raw HTML omitted -->4.3<!-- raw HTML omitted --> 租房条件</h3>
<p>和国内租房，房子基础家居齐全，能够「拎包入住」的情况不同，北美租房的「标配」是只有房屋一间，家居，床垫等都需要自行采购。</p>
<p>有家居配置的反而是「高配」，幸运的是，我和舍友找到这样的房子恰好是「高配」，房东也是位很nice 的女士。</p>
<p>此外，与国内租房只需要签租房合同，按时交租不同，在加拿大租房还需要额外提供相当多的信息：</p>
<ol>
<li>credit history, 房东用来审核租房是否有不良的信用纪录，毕竟这里是个信用社会。而我初来乍到，信用卡都还没有，自然就没有credit history, 所以就需要交半个月的押金。</li>
<li>工作offer 和收入证明，证明是有稳定收入的。</li>
<li>护照原件。</li>
<li>验资，提供存款纪录，证明可支付三个月的房租</li>
</ol>
<p>额外提供更多的信息，也换来了相应的法律保障。</p>
<p>法律规定了房东一年的租金涨价幅度不能超过通货膨胀的水平，如果租房选择继续次年续租，租金最高涨幅2%。就不会出现腾讯员工尊享「12折」租房优惠的情况。</p>
<p>如果房东想要给房子大幅涨租金，唯一的方法应该是等租房合同到期，选择不续租，然后加租金再次出租。</p>
<h2 id="行"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 行</h2>
<p>就公共交通设施的便利程度，与广州或深圳相比，温哥华真的算是「大农村」，或者整个北美都是大农村。</p>
<p>与广州密布全城，甚至跨城的地铁相比，温哥华只有短短的几条地上铁线路（这里的地上铁，称为天车(skytrain)），搭乘公共交通出行相当不便，所以买车是必然的选择。</p>
<p>不过想来也合理，毕竟加拿大地广人稀，如果要建设公共交通设施，覆盖面小了，受惠人群有限；覆盖面大，成本也大限上升，但人流量的上限也就在这里，投入产出比太低。</p>
<p>像广州地铁的「死亡3号线」这种情况，是不可能在加国出现的，毕竟这里的自行车都能扛到天车里面去，可见人流量之稀疏。</p>
<p>但因为我还没有加国的驾照，要通勤方便的话，只能选择住在天车站附近，通过11号车和天车换乘。</p>
<h3 id="高速"><!-- raw HTML omitted -->5.1<!-- raw HTML omitted --> 高速</h3>
<p>因为需要采购生活必备品，没有车着实不便，我们就租了个车，由有北美生活经验的舍友来开车，开到Burnaby 去采购。</p>
<p>开着开着，导航就说顺着高速走，我很奇怪，问舍友，我们上高速了么？我怎么没有看到收费站。</p>
<p>舍友科普到，这里的高速是没有收费站的，并且超速是不能使用摄像头抓拍的，是不算的。</p>
<p>如果要抓超速，只能由警察现场拿测速仪「人赃俱获」，并开罚单。所以这里的高速限速90km/h, 但是大家都开得很快。</p>
<p>话音刚落，就看到路边有位警察拿测速仪如雕塑般在太阳底下一动不动，现场教学，吓了我一跳，这位警察真的是辛苦了。</p>
<p>我脑海里浮现的，就是《逃学威龙2》里面，星爷去当交通警察，拿着相机拍照的画面。难怪星爷要蹲点测速了：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/%e9%9b%b7%e8%be%be%e6%b5%8b%e9%80%9f.png"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/%e6%b5%8b%e9%80%9f.png"/> 
</figure>

<p>顺便感叹一下，北美的地是真的多，宜家在 Burnaby 的店，开得像个城堡一样大：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/ikea.jpg"/> 
</figure>

<h3 id="过马路"><!-- raw HTML omitted -->5.2<!-- raw HTML omitted --> 过马路</h3>
<p>我预想到会遇到很多状况，但是我没有预想到，过马路我都要学。</p>
<p>加国马路上的绿灯亮的时候，相同方向斑马线的灯却不一定会绿起来。</p>
<p>以致于我等了5分钟的灯，从路上的红灯等到绿灯，再转回红灯，都没有看到斑马线的灯绿起来，我还在想，这路口的灯是坏了嘛？</p>
<figure>
    <img loading="lazy" src="/ox-hugo/traffic_light1.jpg"/> 
</figure>

<p>直到后来有位行人加入等待的行列，按了信号灯上的一个装置，信号灯过了一会才绿了起来。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/traffic_light2.jpg"/> 
</figure>

<p>个人猜想，是因为加国地广人稀，并不一定有那么多的人要过马路，为了提高车的通行速度，如果没有行人显式标识要过马路，就不需要提醒司机，有人要过马路，再提醒司机。</p>
<h2 id="钱"><!-- raw HTML omitted -->6<!-- raw HTML omitted --> 钱</h2>
<h3 id="支付方式"><!-- raw HTML omitted -->6.1<!-- raw HTML omitted --> 支付方式</h3>
<p>在国内，已经习惯了不带钱包，只带手机出门。</p>
<p>但在加国，除去部分华人超市与市场，基本看不到支付宝和微信支付这两家国内常见三方支付的身影，只能使用现金或信用卡，部分商家还支持Apple Pay</p>
<p>刚开始时，就试过延续国内的习惯，出门吃饭没有带钱包，只能到店里后，又走回去拿钱包的情况。</p>
<p>作为之前在微信支付的打工人，很自然地会去思考，为什么像支付宝/微信支付这样的三方支付没有在加国流行起来。</p>
<p>观察下来，发现加国的POS机刷卡服务非常发达，无论是普通的快餐店，还是城里的商场，无一例外，都支持刷储蓄卡或者信用卡。</p>
<p>消费者只需要拿卡贴近一下机器，滴一下，就能完成付款，体验比微信支付扫码还方便；如果是消费金额较大，就需要输入密码进行支付。</p>
<p>除去pos刷卡体系完善外，像加拿大这样的北美国家，是建立在信用卡体系上的信用社会。前面提到的credit history 会和你的信用卡记录挂钩，也就是说，信用卡消费在加国不仅是一种支付方式，也是一种建立信用的途径。</p>
<p>而信用卡，在国内，还只是一种超前消费的支付方式。</p>
<p>对于有消费力，不需要透支的消费者而言，使用信用卡和储蓄卡并没有差别，信用卡积分也没有用处。</p>
<p>而国内因为此前金融业发展落后于北美，pos 刷卡远没有北美普及，而通过微信支付和支付宝，相当于直接跳过了pos 机普及的过程，直接信息化。</p>
<p>所以说微信支付和支付宝的发展是契合了中国的现状的弯道超车，但国外发达的pos 刷卡体系，也没有引进微信支付这样的三方支付方式的诉求，也难怪微信支付和支付宝在北美出海不顺利。</p>
<h3 id="货币"><!-- raw HTML omitted -->6.2<!-- raw HTML omitted --> 货币</h3>
<p>一个比较有趣的事情就是，加拿大现在还在使用硬币，硬币金额由大到小分别是：2元，1元，50分，25分，10分，5分。</p>
<p>而除了2元外，其他的硬币都没有写数字，像我这样开始不熟悉硬币的话，要盯着硬币看很久，才能找到5 cents, 或者 25 cents的标识。</p>
<p>硬币一般头像面是女王的头像，背面是动物。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/coins.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/coins2.jpg"/> 
</figure>

<p>为什么还会有10分，5分的硬币呢，因为还有$1.89这样的标价，给现金的时候，就会给回你10分。</p>
<p>只是让人相当不习惯的是，5分的硬币竟然是比10分大的。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/coins3.jpg"/> 
</figure>

<h3 id="物价"><!-- raw HTML omitted -->6.3<!-- raw HTML omitted --> 物价</h3>
<p>温哥华的物价是真的高，据说2022年，加国的通货膨胀达到了8%, 而物价上涨的幅度可能还不止于此，让我这个之前挣人民币的感觉压力山大。</p>
<p>和朋友提到物价这个事之后，他就说，你后面挣的是加元，那感觉就会好的啦。</p>
<p>即使挣的是加元，感觉压力也大嘛。</p>
<p>真的和深圳一样，「哪里挣钱哪里花，一分别想带回家」</p>
<h3 id="税"><!-- raw HTML omitted -->6.4<!-- raw HTML omitted --> 税</h3>
<p>据说加拿大的福利很好，但是羊毛出自羊身上，福利都是从公民身上收税收过来的，毕竟政府不会产生价值。</p>
<p>所以无论吃饭还是购物，小票上都可以看到加的税，购物需要交12%的税，分别是5%的联邦商品与消费税(federal Goods and Services Tax (GST)), 以及7% 的BC省销售税(Provincial Sales Tax (PST))；吃饭要交5% 的税，可谓是雁过拔毛了。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/receipt.jpg"/> 
</figure>

<p>问题就来了，为什么在国内消费，消费者感觉不到加的税呢，是否不需要加税呢？</p>
<p>正如我之前说的，「羊毛出自羊身上」，哪个国家都不例外。</p>
<p>宜家在国内的增值税大概是17%, 只是国内大部分商家的票据，应有关部门要求，都不会把税率打印出来。具体的税率，要开增值发票的时候才会展示出来。</p>
<p>只要不让羊知道羊毛出自羊身上就好。</p>
<h2 id="网"><!-- raw HTML omitted -->7<!-- raw HTML omitted --> 网</h2>
<p>坦言之，加拿大的手机网络是真的又贵又垃圾，25G流量的套餐，需要50加元，而信号又一言难尽。</p>
<p>在住处房间里面，即使是使用号称信号最强的Rogers 家的卡，也只有一格信号，在车库，就只能打紧急电话，信号完全没有了。</p>
<p>在刚搬进去，还没有装wifi 的时候，每天都是戒网治疗，而戒断反应又相当剧烈。微信文字有时能发出来，有时发不出来；晚上发不出去，早上能发出去。</p>
<p>要和家人或妹子语音聊天，只能到阳台外面去，温哥华的室外还只有不到10度，真的是一边聊天，一边在发抖；即使阳光信号也不稳定，有时延迟严重，说话靠喊才能听到。</p>
<p>我在想，即使我去贵州的深山里面，信号还是满格的；即使20年前也不需要如此通信吧。</p>
<p>移动，联通，电信，我应该向你们道个歉。</p>
<p>与同行一对比，你们都打出了苹果vs诺基亚的表现了。</p>
<h2 id="天"><!-- raw HTML omitted -->8<!-- raw HTML omitted --> 天</h2>
<p>总说国外的月亮更圆，晚上我盯着天空的月亮看，并不觉得更圆，但是脑海总是涌现苏轼的名句：</p>
<blockquote>
<p>但愿人长久，千里共婵娟</p>
</blockquote>
<p>可能要十万里才能共婵娟了。</p>
<p>国外的月不见得更圆，但天着实更蓝：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky1.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky2.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky3.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky4.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky5.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky6.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky7.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky8.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky9.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky10.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/blue_sky11.jpg"/> 
</figure>

<h2 id="地"><!-- raw HTML omitted -->9<!-- raw HTML omitted --> 地</h2>
<p>加拿大人与动物相处得很友好，路边随处可见各种动物与飞鸟。</p>
<p>天上与窗外飞过的海鸥（看来以后吃薯条要当心了）：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/seagulls1.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/seagulls2.jpg"/> 
</figure>

<p>车库溜进来的松鼠，看起来像大号的老鼠</p>
<figure>
    <img loading="lazy" src="/ox-hugo/squirrel.jpg"/> 
</figure>

<p>街上的兔子</p>
<figure>
    <img loading="lazy" src="/ox-hugo/rabbit1.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/rabbit2.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/rabbit3.jpg"/> 
</figure>

<h2 id="乱"><!-- raw HTML omitted -->10<!-- raw HTML omitted --> 乱</h2>
<p>因为加拿大可以合法吸大麻，所以在温哥华市区中心，有很多人吸大麻。</p>
<p>初时，我还不知道那股刺鼻的味道是什么，直到舍友科普，我才知道，原来那是大麻。</p>
<p>在大麻味道飘进鼻腔时，也能理解为什么加拿大被称为「加麻大」 .</p>
<p>正如朋友所言，在国内吸二手烟，在这里吸二手麻。</p>
<p>另外，Vancouver 市中心也真的多流浪汉，让农村来的我震惊不已，不过舍友说这比对美国，真的算小巫见大巫。</p>
<p>有流浪汉的地方，治安自然不会太好；而downtown 商铺加装的铁闸门，也似乎在印证我的想法。</p>
<p>之前，温哥华市长也来了一波「清理低端人口」的措施，不知道从哪里学来的。但是，这终究是治标不治本的手段，又能把人赶到哪里去呢。</p>
<p>如果有工作，有住处，可能大部分人都不想当嬉皮士。</p>
<p>只能说，没事多待在村里，离市中心远点来了。</p>
<h2 id="花"><!-- raw HTML omitted -->11<!-- raw HTML omitted --> 花</h2>
<p>来到之后才知道，温哥华有非常多的樱花，可谓随处可见。</p>
<p>4月的时候，樱花烂漫盛放，还有日本的樱花赏在温哥华公园举行。</p>
<p>人站在樱花树下，着实有种误入「樱花源」，「落英缤纷」的感觉：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/sakura1.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/sakura2.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/sakura3.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/sakura4.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/sakura5.jpg"/> 
</figure>

<figure>
    <img loading="lazy" src="/ox-hugo/sakura6.jpg"/> 
</figure>

<p>blooming</p>
<h2 id="语"><!-- raw HTML omitted -->12<!-- raw HTML omitted --> 语</h2>
<p>在落地之前一直担心语言不够用，落地之后，意识到我的语言是「够用」又不「够用」。</p>
<p>「够用」是指日常生活，购物，工作交流基本都能应付过来，无障碍。</p>
<p>而「不够用」是指难免会出现「词不达意」，或者「欲语还休」的情况，说明表达能力还不够用；</p>
<p>此外，软件工程师的工程并不只是限于写代码，那是「硬技能」，还需要有对应的「软技能」，而沟通就是非常重要的「软技能」。</p>
<p>如果技术生涯还想继续向上走，免不了要与更多人，更多团队交流，要扯皮，要对线，单纯地say yes 和 no 都不够用。</p>
<p>语言可以说决定了技术生涯的天花板，所以现在每天还会去抽时间学习英语。</p>
<p>现在可以说是「沉浸式学习」，有更多地学以致用的机会，相信坚持下来，效果会更佳。</p>
<h2 id="终"><!-- raw HTML omitted -->13<!-- raw HTML omitted --> 终</h2>
<p>大半个月的时候，可以说看到了，体验到非常多不一样的事物与人文，但一切终究还是停留在走马观花，蜻蜓点水的程度。</p>
<p>有朋友问我，这是我想要的么？</p>
<p>我只能说，还不确定，初到时，人容易被好奇和新鲜被迷惑，这最终只能由时间来赋予，由时间来洗尽铅华。</p>
<p>但有些理所当然的权利，在失而复得之后，却不会引起人的注意力，因为那是我们本就拥有的。</p>
<p>去地铁站坐车，再也不需要大包小包过安检。</p>
<p>打开网页，访问Google, 再也无需使用代理。</p>
<p>过了许久之后，我才突然意识到，无论线上或线下，出行都不需要被「安检」了。</p>
<hr>
<p>关于这篇文章的一个小彩蛋：</p>
<p>以「衣食住行」开篇，但写着写着，干脆把子标题都用一个字代替好了，因为这样看起来很有趣，就成这个样子了。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/easter_egg.png"/> 
</figure>

]]></content:encoded>
    </item>
    
  </channel>
</rss>
