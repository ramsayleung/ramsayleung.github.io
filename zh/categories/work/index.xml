<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>work on 自由庄园</title>
    <link>https://ramsayleung.github.io/zh/categories/work/</link>
    <description>Recent content in work on 自由庄园</description>
    <image>
      <title>自由庄园</title>
      <url>https://ramsayleung.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ramsayleung.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>See this site&#39;s source code [here](https://github.com/ramsayleung/ramsayleung.github.io), licensed under GPLv3 ·</copyright>
    <lastBuildDate>Sat, 20 May 2023 13:40:00 -0700</lastBuildDate><atom:link href="https://ramsayleung.github.io/zh/categories/work/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>软件工程师的软技能指北（四）：简历篇</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E7%AE%80%E5%8E%86%E7%AF%87/</link>
      <pubDate>Sat, 20 May 2023 13:40:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E7%AE%80%E5%8E%86%E7%AF%87/</guid>
      <description>1 前情提要 软件工程师的软技能指北（一）：总览篇 软件工程师的软技能指北（二）：事业篇 软件工程师的软技能指北（三）：高效交流篇 2 前言 我在高三的时</description>
      <content:encoded><![CDATA[<h2 id="前情提要"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前情提要</h2>
<ol>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/">软件工程师的软技能指北（一）：总览篇</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E4%BA%8B%E4%B8%9A%E7%AF%872/">软件工程师的软技能指北（二）：事业篇</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E9%AB%98%E6%95%88%E4%BA%A4%E6%B5%81%E7%AF%873/">软件工程师的软技能指北（三）：高效交流篇</a> <!-- raw HTML omitted --></li>
</ol>
<h2 id="前言"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 前言</h2>
<p>我在高三的时候，每周有五节的语文课，我的语文老师陆老师总是会拿一节语文课，当作书法课，让我们练字。 <!-- raw HTML omitted --></p>
<p>陆老师认为，写作文能言之有物，切中要点很重要，但是答卷的字体也很重要。 <!-- raw HTML omitted --></p>
<p>可能同样的答案内容，字体写得好的试卷会比字体一般的试卷高5到10分。 <!-- raw HTML omitted --></p>
<p>而陆老师自身的软硬笔书法水平都很过硬，黑板板书相当漂亮。 <!-- raw HTML omitted --></p>
<p>明清两朝，有专门用于科举考试的通用字体，特点是：以乌黑、方正、光洁而大小齐平。 <!-- raw HTML omitted --></p>
<p>明朝称之为「台阁体」，清朝称之为「馆阁体」： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/%e9%a6%86%e9%98%81%e4%bd%93.jpg"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>人终归是视觉动物，内涵固然重要，门面也不可或缺。 <!-- raw HTML omitted --></p>
<p>如果把工程师的职业当作事业的话，那么简历就是门面和敲门砖。 <!-- raw HTML omitted --></p>
<p>如果有足够的亮点的经历的话，再配上优秀的简历，可谓如虎添翼； <!-- raw HTML omitted -->
纵然经历不够亮点，一份得体的简历就如考试时的一手好字，同样可以让人眼前一亮。 <!-- raw HTML omitted --></p>
<h2 id="要点"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 要点</h2>
<p>所谓的简历，本质上和街边的宣传单，以及电视上的广告没有什么区别，都是希望可以引起潜在客户的注意，把「商品」销售出去。 <!-- raw HTML omitted --></p>
<p>只是他们销售的是商品，你销售的是自己的「劳动力」。 <!-- raw HTML omitted --></p>
<p>而你的目标是在诸多的同行竞争中脱颖而出，你需要做的是「扬长避短」，把自己的长处和优势展示给潜在客户。 <!-- raw HTML omitted --></p>
<p>根据社会心理学的研究，人总是会对先看到的词产生先入为主的认知。 <!-- raw HTML omitted --></p>
<p>如果形容一个人： <!-- raw HTML omitted --></p>
<p>勤劳，勇敢，善良，温柔，俊美，卑鄙，下流，肮脏，贪婪，邋遢。 <!-- raw HTML omitted --></p>
<p>你对他的印象是好是坏呢？ <!-- raw HTML omitted --></p>
<p>那下面这个人呢？ <!-- raw HTML omitted --></p>
<p>卑鄙，下流，肮脏，贪婪，邋遢，勤劳，勇敢，善良，温柔，俊美。 <!-- raw HTML omitted --></p>
<p>你对他的印象是坏是好呢？ <!-- raw HTML omitted --></p>
<p>同样的内容，调换了顺序，给人的认知就完全不一样了。 <!-- raw HTML omitted --></p>
<p>所以你需要做的，就是把你最引以为傲的内容（比如你的经历，学历），放在简历的前面； <!-- raw HTML omitted -->
再把你觉得弱势的内容（比如学历，经历），放到简历的后面。 <!-- raw HTML omitted --></p>
<h2 id="结构"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 结构</h2>
<p>我个人习惯是会在简历中呈现五部分内容：「联系方式(Contact)」, 「职业经历(Employment)」, 「项目(Project)」, 「教育(Education)」, 「总结(Summary)」。 <!-- raw HTML omitted --></p>
<p>放在最前方的，毫无疑问是「联系方式」，不然潜在客户对你再感兴趣，找不到你的联系方式，也是抓瞎。 <!-- raw HTML omitted --></p>
<p>其次就是「教育」，「职业经历」，「总结」的顺序。 <!-- raw HTML omitted --></p>
<p>我个人的学历不占优势，只有本科学历，又非名校，根据「扬长避短」原则，「教育」就被我放最后了。 <!-- raw HTML omitted --></p>
<p>因为我自己在两家所谓的「大厂」打过工，所以「职业经历」更有优势，所以「职业经历」放在前面。 <!-- raw HTML omitted --></p>
<p>而「项目」大多时候与「职业经历」挂钩，逻辑顺序上，在「职业经历」之后，所以结构就变成： <!-- raw HTML omitted --></p>
<p>「联系方式」 <!-- raw HTML omitted --></p>
<p>「职业经历」 <!-- raw HTML omitted --></p>
<p>「项目」 <!-- raw HTML omitted --></p>
<p>「总结」 <!-- raw HTML omitted --></p>
<p>「教育」 <!-- raw HTML omitted --></p>
<p>结构推荐是这五项，顺序就根据个人自身情况进行调整了。 <!-- raw HTML omitted --></p>
<h2 id="格式"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 格式</h2>
<p>「联系方式」与「教育」没有太多值得说道的点，可谓千篇一律。 <!-- raw HTML omitted --></p>
<p>主要聚焦点还是在「项目」和「职业经历」上。 <!-- raw HTML omitted --></p>
<h3 id="职业经历"><!-- raw HTML omitted -->5.1<!-- raw HTML omitted --> 职业经历</h3>
<p>职业经历的格式也相对固定： <!-- raw HTML omitted --></p>
<blockquote>
<p>「公司」，「地点」，「担任的角色」，「工作时间」 <!-- raw HTML omitted --></p>
<p>「在公司中负责或参与过的项目，一句话概括」： <!-- raw HTML omitted --></p>
<ol>
<li>参与xxx 项目，负责xxx 的开发，达成了什么成果 <!-- raw HTML omitted --></li>
<li>负责xxx 项目, 设计，开发xxx, 取得了什么项目成果 <!-- raw HTML omitted --></li>
<li>负责xxx 项目，&hellip; <!-- raw HTML omitted --></li>
</ol>
</blockquote>
<p>在职业经历中一句带过项目经历，进而引出下文提到的「项目经历」，相当于承上启下。 <!-- raw HTML omitted --></p>
<p>当然，如果项目太多，也需要作相应的增减。 <!-- raw HTML omitted --></p>
<h3 id="项目"><!-- raw HTML omitted -->5.2<!-- raw HTML omitted --> 项目</h3>
<p>可能会有朋友觉得项目和经历着实没有什么好写的，或者写出来的内容类似： <!-- raw HTML omitted --></p>
<blockquote>
<p>服务编码，前后端对接，测试 <!-- raw HTML omitted --></p>
<p>功能开发并上线 <!-- raw HTML omitted --></p>
</blockquote>
<p>每个项目和经历总是有东西可以写的，成功的项目有可写的内容，失败的项目也有可写的内容，只要有思考，总是有输出的。 <!-- raw HTML omitted --></p>
<p>那么思考的方式是什么呢？ <!-- raw HTML omitted --></p>
<h4 id="star-method"><!-- raw HTML omitted -->5.2.1<!-- raw HTML omitted --> STAR method</h4>
<p>就是之前在「 <a href="https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E9%AB%98%E6%95%88%E4%BA%A4%E6%B5%81%E7%AF%873/">软件工程师的软技能指北（三）：高效交流篇</a>」提到的「STAR method」这种结构化的思考和沟通方式。 <!-- raw HTML omitted --></p>
<p>所谓的STAR method, 是四个单词的首字母缩写，分别是: Situation(场景), Task(任务), Action(行动)，Result(结果)。即： <!-- raw HTML omitted --></p>
<ul>
<li>situation: 描述问题的背景，这个问题是什么，以及你为什么需要做这个事情 <!-- raw HTML omitted --></li>
<li>task: 你具体的任务是什么，你需要做什么，你的角色是什么？ <!-- raw HTML omitted --></li>
<li>action: 你做了什么事情？你的行动是什么? <!-- raw HTML omitted --></li>
<li>result: 项目结果如何？最好用可量化的指标来呈现? <!-- raw HTML omitted --></li>
</ul>
<p>通过STAR method, 以结构化的方式来思考，并呈现你的项目，描述你的职责与成果。 <!-- raw HTML omitted --></p>
<blockquote>
<p>xx 公司/xx 项目, 时间: 2020.03-2020.xx <!-- raw HTML omitted --></p>
<ol>
<li>项目背景一句话、 <!-- raw HTML omitted --></li>
<li>自己在项目里负责的工作 <!-- raw HTML omitted --></li>
<li>用到的技能/思考的过程或者难点攻克的过程 <!-- raw HTML omitted --></li>
<li>项目的结果或者我的成绩 <!-- raw HTML omitted --></li>
</ol>
</blockquote>
<p>例如： <!-- raw HTML omitted --></p>
<blockquote>
<p>服务编码，前后端对接，测试 <!-- raw HTML omitted --></p>
</blockquote>
<p>就可以修改成: <!-- raw HTML omitted --></p>
<blockquote>
<p>负责xxx项目开发与设计，主导前后端契约设计，前后端并行解耦开发工作，项目用时1个半月成功上线，日访问用户20w, 页面浏览量100w, 峰值访问1000/秒，服务平稳无故障。 <!-- raw HTML omitted --></p>
</blockquote>
<p>这不比平铺直述更有感染力嘛。 <!-- raw HTML omitted --></p>
<h4 id="量化指标"><!-- raw HTML omitted -->5.2.2<!-- raw HTML omitted --> 量化指标</h4>
<p>量化的数字让人更有印象，会让你的经历更有说服力，也更能突出你自己的成绩： <!-- raw HTML omitted --></p>
<p>如非量化的指标表述： <!-- raw HTML omitted --></p>
<blockquote>
<p>项目重构之后，服务性能与可用性都得到了显著提高 <!-- raw HTML omitted --></p>
</blockquote>
<p>难免让人觉得说明力不足 <!-- raw HTML omitted --></p>
<blockquote>
<p>项目重构之后，压测TPS从100/秒增长到1000/秒，系统的不可用总时长从上线前的2小时下降到20分钟，系统可用性从99.9% 增长到99.99% <!-- raw HTML omitted --></p>
</blockquote>
<p>这个又可以呼应「软技能指北（三）：高效交流篇」的「云雨伞」模型，通过数据来表述「云」，增加说明力。 <!-- raw HTML omitted --></p>
<h2 id="排版"><!-- raw HTML omitted -->6<!-- raw HTML omitted --> 排版</h2>
<p>所谓亮眼的简历，无非是「优秀的内容」+ 「简洁耐看的排版」。 <!-- raw HTML omitted --></p>
<p>「内容」值得每个工程师花心思去构思，但花时间去「排版」却大可不必。 <!-- raw HTML omitted --></p>
<p>所以写简历，我只推荐使用 LaTex, Word 还是算了吧。 <!-- raw HTML omitted --></p>
<p>有朋友可能不熟悉 LaTex, LaTex 是美国计算机科学家Leslie Lamport(没错，就是那个发明 Paxos 共识算法的大神) 在20世纪80年代开发的排版系统，遵循「展示与内容分离（separating presentation from content）的原则」。 <!-- raw HTML omitted --></p>
<p>即使用户没有排版和写代码的经验，只需要根据模板填入内容，就可以生成精美的出版刊物。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/wikipedia_latex.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>本地安装和使用LaTex 相对麻烦，所以建议使用网页版本的LaTex 服务，如 <a href="https://www.overleaf.com/">Overleaf:</a> <a href="https://www.overleaf.com/">https://www.overleaf.com/</a>. <!-- raw HTML omitted --></p>
<p>至于简历模板, Overleaf 本身有很多的简历模板分享，Github上也有许多类似的项目，如 <a href="https://github.com/billryan/resume">https://github.com/billryan/resume</a>, 只要把在 Overleaf 上把内容填入到模板中，即可生成一份好看的简历： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/overleaf_resume.png"/> 
</figure>
  <!-- raw HTML omitted --></p>
<h3 id="照片"><!-- raw HTML omitted -->6.1<!-- raw HTML omitted --> 照片</h3>
<p>是否要放照片，这个取决于行业和自身特点，遵循「扬长避短」原则即可，如果形象得体，大可把照片也放在简历中。 <!-- raw HTML omitted --></p>
<h3 id="文件格式"><!-- raw HTML omitted -->6.2<!-- raw HTML omitted --> 文件格式</h3>
<p>只推荐pdf，因为这是一种通用的文件格式，相当多的工具都能打开pdf. <!-- raw HTML omitted --></p>
<p>我既不推荐使用word 写简历，更不推荐发送word 格式的简历。 <!-- raw HTML omitted --></p>
<p>因为并非人人电脑都有装office 办公软件，不一定能打开；此外，版本不正确，或者相应字体没有安装，可能就会导致精心排版的简历乱掉了。 <!-- raw HTML omitted --></p>
<p>简历文件命名: 姓名_[公司/学校]_联系方式.pdf, 如果公司是优势项，那么文件命名就把公司带上，学历同理。 <!-- raw HTML omitted --></p>
<p>切记不要以「简历.pdf」这样的文件来命名，HR可能一天收到几百封简历， <!-- raw HTML omitted -->
她完全有可能不记得自己是否打开过「简历.pdf」这个没有辨识度的文件. <!-- raw HTML omitted --></p>
<h2 id="投递渠道"><!-- raw HTML omitted -->7<!-- raw HTML omitted --> 投递渠道</h2>
<p>写完简历之后，免不了要向潜在客户推销简历，就我个人所知的几个渠道「内推」，「官网」，「第三方招聘网站」，「猎头」，优先级分别是： <!-- raw HTML omitted --></p>
<p>「内推」&gt;&gt;「官网」&gt;「猎头」&gt;&gt;&gt;「第三方招聘网站」。 <!-- raw HTML omitted --></p>
<p>无论是找相熟或者不认识的朋友，「内推」总是投递简历的最优推荐，因为有人可以帮忙跟进处理进度。 <!-- raw HTML omitted --></p>
<p>无论「过」与「不过」，都可以马上知道结果，可以最大限度地避免「石沉大海」 <!-- raw HTML omitted --></p>
<p>如果「心仪公司」没有相熟朋友，也可以在「脉脉」或者「Linkedin」上找人内推。 <!-- raw HTML omitted --></p>
<p>别人一般都很乐意的，部分公司还对「内推」通过有奖励。 <!-- raw HTML omitted --></p>
<p>如果实在是找不到人内推，「官网」也是一个备选项，一般公司的简历系统都会对处理时间有规定，简历起码都会被处理到，但有可能「渺无音讯」。 <!-- raw HTML omitted --></p>
<p>之前去 Indeed 官网投递，几天后直接收到拒信了. <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/indeed_refuse.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>像「Boss某聘」这类的第三方招聘网站，一般是投递没有「官网」或者内部招聘系统的公司的选择。 <!-- raw HTML omitted --></p>
<p>毕竟HR连官网的简历都有可能处理不过来，着实不大可能去第三方网站上捞简历，只有要应付指标的时候，才会上去捞一下。 <!-- raw HTML omitted --></p>
<p>当然，把简历直接给到「Linkedin」,「脉脉」之类的三方招聘网站的HR, 那就是属于选项一的「内推」。 <!-- raw HTML omitted --></p>
<p>最后才聊到「猎头」，「猎头」本质上是把你的职业当作商品，你自己的「职业」规划和未来与他们关系着实不大，所以他们给你推的不一定是满足你规划和兴趣的公司。 <!-- raw HTML omitted --></p>
<p>何况「猎头」水平和态度参差不齐，只能作为一个备选项。 <!-- raw HTML omitted --></p>
<p>我在「Linkedin」上，把我的First Name 设为「啤酒的Emoji」，Last Name 才是「我的姓与名」。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/linkedin_basic_info.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>所以那些没有看过我信息，直接私聊发送招聘信息的，就会变成这个样子： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/hi_beer2.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/hi_beer3.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p>连我名字都没有写对的人，还能指望什么呢。 <!-- raw HTML omitted --></p>
<h2 id="示例"><!-- raw HTML omitted -->8<!-- raw HTML omitted --> 示例</h2>
<p>我按照上文提到的要点，结构与格式来整理了一下自己的简历： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/ramsay_resume1.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/ramsay_resume2.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="趣事"><!-- raw HTML omitted -->9<!-- raw HTML omitted --> 趣事</h2>
<p>我在三周前，在博客和公众号上发了一个内网看到的 Amazon的<a href="https://ramsayleung.github.io/zh/post/2023/amazon_canada_hiring_event/">国内专场招聘</a>，给有兴趣去加国血汗工厂打工的朋友分享了这个信息。 <!-- raw HTML omitted --></p>
<p>然后，过了一周后，我的个人邮箱收到了这个专场招聘的另外一位recruiter 的邮件，推荐我去参加这个专场招聘，因为我曾经用自己的个人邮箱给 Amazon 投递过简历。 <!-- raw HTML omitted --></p>
<p>只是这位recruiter 不知道我入职，并且与她同组的另外一位同事沟通过这个专场招聘的事。 <!-- raw HTML omitted --></p>
<p>就变成了我这个帮忙发专场招聘信息的人，最后究竟也收到了这个专场招聘的邀请。 <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/relocation_opportunity.png"/> 
</figure>
 <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->10<!-- raw HTML omitted --> 总结</h2>
<p>一份优秀的简历就好比一份宣传册子，可以更好地向我们的潜在客户推销自己。 <!-- raw HTML omitted --></p>
<p>但功夫在平时，简历的内容最终也是日常积累的呈现。 <!-- raw HTML omitted --></p>
<p>扎实做好日常工作，成为一个「靠谱（reliable）」的人 <!-- raw HTML omitted --></p>
<p>「金玉其外」自然好，「内有乾坤」更难得。 <!-- raw HTML omitted --></p>
<h2 id="参考"><!-- raw HTML omitted -->11<!-- raw HTML omitted --> 参考</h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/LaTeX">https://en.wikipedia.org/wiki/LaTeX</a> <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>软件工程师的软技能指北（三）：高效交流篇</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E9%AB%98%E6%95%88%E4%BA%A4%E6%B5%81%E7%AF%873/</link>
      <pubDate>Sun, 14 May 2023 16:51:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E9%AB%98%E6%95%88%E4%BA%A4%E6%B5%81%E7%AF%873/</guid>
      <description>1 前情提要 软件工程师的软技能指北（一）：总览篇 软件工程师的软技能指北（二）：事业篇 2 前言 让我静静，我只想写代码 化用《我的团长我的团》里面，孟</description>
      <content:encoded><![CDATA[<h2 id="前情提要"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前情提要</h2>
<ol>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/">软件工程师的软技能指北（一）：总览篇</a> <!-- raw HTML omitted --></li>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E4%BA%8B%E4%B8%9A%E7%AF%872/">软件工程师的软技能指北（二）：事业篇</a> <!-- raw HTML omitted --></li>
</ol>
<h2 id="前言"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 前言</h2>
<blockquote>
<p>让我静静，我只想写代码 <!-- raw HTML omitted --></p>
</blockquote>
<p>化用《我的团长我的团》里面，孟烦了父亲的一句话： <!-- raw HTML omitted --></p>
<blockquote>
<p>为何诺大的公司，放不下一张能安静写代码的书桌？ <!-- raw HTML omitted --></p>
</blockquote>
<p>在我此前的固有认知里，所谓的软件工程师就应该安安静静地写代码，但为何我总是求而不得呢？ <!-- raw HTML omitted --></p>
<p>但事实是，在软件开发的大部分时间里，我们都是在与「人」交流，而非与「计算机」交流。 <!-- raw HTML omitted --></p>
<p>即使我们编写代码，首先也是让「人」去理解，其次才是让机器来执行，否则直接写二进制代码即可。 <!-- raw HTML omitted --></p>
<p>而在程序优化中，有一条金科玉律：「针对热点代码进行优化」，因为那是性价比最高的优化策略。 <!-- raw HTML omitted --></p>
<p>既然软件开发中，大部分时间都是与人交流，那么如果能提高与人交流的效率，那么我们的开发效率也会相应地大幅提高。 <!-- raw HTML omitted --></p>
<h2 id="原则"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 原则</h2>
<h3 id="尊重"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 尊重</h3>
<p>与人相处时，最重要的概念之一（可能没有之一），就是尊重他人，每个人心底都是渴望被尊重的。 <!-- raw HTML omitted --></p>
<p>所谓的尊重体现在各种的细节里面，例如： <!-- raw HTML omitted --></p>
<p>尊重他人的观点和言论，留意倾听，眼神放在对方身上，不随意打断别人。 <!-- raw HTML omitted --></p>
<p>尊重他人的时间，不迟到。 <!-- raw HTML omitted --></p>
<p>尊重他人的成果和工作，引用时注意作者与链接等。 <!-- raw HTML omitted --></p>
<p>尊重别人的空间，不在工位附近大声开会，尽量找个会议室。 <!-- raw HTML omitted --></p>
<p>被尊重是每个人最基本的需要，也是很容易忽略的地方。 <!-- raw HTML omitted --></p>
<p>我自己也会在心急时，直接把别人的话打断掉，所以自己在这方面还有很大的改善空间。 <!-- raw HTML omitted --></p>
<h3 id="不随意批评"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> 不随意批评</h3>
<p>因为国内普遍存在的各种上下级等级关系和官本位思想。 <!-- raw HTML omitted --></p>
<p>遇到阻碍或者问题时，很容易通过「批评」来推动和开展工作，甚至很容易出现所谓的「PUA」话术： <!-- raw HTML omitted --></p>
<blockquote>
<p>其实，我对你是有一些失望的。当初给你定级px，是高于你面试时的水平的。 <!-- raw HTML omitted --></p>
<p>我是希望进来后，你能够拼一把，快速成长起来的。 <!-- raw HTML omitted --></p>
<p>px这个层级，不是把事情做好就可以的 <!-- raw HTML omitted --></p>
</blockquote>
<!-- raw HTML omitted -->
<blockquote>
<p>你的产出，和同层级比，是有些单薄的，马上要到年底了，加把劲儿。 <!-- raw HTML omitted --></p>
</blockquote>
<!-- raw HTML omitted -->
<blockquote>
<p>什么，这个事情排期要2周，1周就可以了，没有多少工作的。 <!-- raw HTML omitted --></p>
</blockquote>
<p>我自己也亲耳听过类似的话，心情着实是难受。 <!-- raw HTML omitted --></p>
<p>事实上，如果真的把「尊重」这个基本原则考虑在内，鼓励与赞扬是比批评更有用的工具。 <!-- raw HTML omitted --></p>
<p>我现在的 manager 是个白人，他就很喜欢夸人，我私下喊他做「夸夸群群主」。 <!-- raw HTML omitted --></p>
<p>我和组员刚来的时候，可能他担心我们不适宜，或者是不干活，我们做了一些工作之后，总是在换着法子在夸我们： <!-- raw HTML omitted --></p>
<blockquote>
<p>Thanks you for help to our team, your work makes a great difference. <!-- raw HTML omitted --></p>
<p>You are doing a great job, I am impressed by the way you tackled the problems. <!-- raw HTML omitted --></p>
<p>You will be successful in Amazon, I am pretty confident about that. <!-- raw HTML omitted --></p>
</blockquote>
<p>虽然知道老板目的还是想让我们干活，但是被人夸的感觉肯定比被人用鞭子抽打的感觉要好。 <!-- raw HTML omitted --></p>
<p>见贤思其焉，所以我也学老板多夸人。 <!-- raw HTML omitted --></p>
<p>有一次和舍友去一家韩餐餐馆吃饭，炸鸡很好吃，其他菜也不错。 <!-- raw HTML omitted --></p>
<p>上完菜后，韩国小姐姐过来问我们还有需要，我就说，「all foods are delicious, especially the fried chinken」。 <!-- raw HTML omitted --></p>
<p>小姐姐开心得拍起了小手。 <!-- raw HTML omitted --></p>
<p>身为中国人，可能从小被教育要内敛和矜持，但我们大可不必太高冷，不要吝啬自己的溢美之词。 <!-- raw HTML omitted --></p>
<h3 id="换位思考"><!-- raw HTML omitted -->3.3<!-- raw HTML omitted --> 换位思考</h3>
<p>高效沟通的另外一个要点就是换位思考，从别人的角度，而不是自己的角度来思考问题。 <!-- raw HTML omitted --></p>
<p>在沟通对话中，什么对于他们来说是重要的？他们想要的是什么？ <!-- raw HTML omitted --></p>
<p>最好的方案是一个共赢的方案，可以把多方的诉求都包括在内。 <!-- raw HTML omitted --></p>
<p>一个非常有效的技巧就是，在开始你自己的观点，先重复一次别人的观点，这样就给对方一个明确的信号，我是真的考虑过你的观点的。 <!-- raw HTML omitted --></p>
<p>举个例子，前段时间发了一个 Amazon Canada 招聘的<a href="https://ramsayleung.github.io/zh/post/2023/amazon_canada_hiring_event/">文章</a>，有朋友闻讯而来，给我发简历，让我内推到系统中。 <!-- raw HTML omitted --></p>
<p>只是他没有预料到的是，发送完简历后，马上就收到一封笔试邮件，要求在一周内完成笔试。 <!-- raw HTML omitted --></p>
<p>朋友觉得时间太紧，没有准备好，于是邮件告知我准备放弃。 <!-- raw HTML omitted --></p>
<p>我思索片刻之后，决定与recruiter 沟通下，询问能否推迟笔试截止时间。 <!-- raw HTML omitted --></p>
<p>因为对于朋友而言，他的诉求肯定是有充足的时间来准备； <!-- raw HTML omitted --></p>
<p>而对于recruiter 而言，她们办这个event ，也是希望有尽量多的候选人参加，有尽量多的候选人通过。 <!-- raw HTML omitted --></p>
<p>所以推迟笔试时间，以便朋友参与笔试，是一个符合多方诉求的方案，最后recruiter 的回复也是可以推迟时间： <!-- raw HTML omitted --></p>
<p><figure>
    <img loading="lazy" src="/ox-hugo/%e7%ac%94%e8%af%95%e5%bb%b6%e6%9c%9f.png"/> 
</figure>
  <!-- raw HTML omitted --></p>
<h3 id="充分的上下文"><!-- raw HTML omitted -->3.4<!-- raw HTML omitted --> 充分的上下文</h3>
<p>高效沟通和决策的前提是，提供足够的，充分的信息。 <!-- raw HTML omitted --></p>
<p>也就是说，在你提问题或者沟通的时候，把问题的上下文信息给提供清楚。 <!-- raw HTML omitted --></p>
<p>以前经常会遇到的一种情形是，在企业微信被人拉到一个群里，然后被@, 「xx哥，帮忙看下这个问题」。 <!-- raw HTML omitted --></p>
<p>我也很想帮忙，但是我连问题是什么都不清楚，我是没有办法解决的。 <!-- raw HTML omitted --></p>
<p>一个群几十上百条信息，我是没有精力去逐条翻聊天纪录的。 <!-- raw HTML omitted --></p>
<p>然后，很快就会有人打电话过来，让我解决这个xx问题。 <!-- raw HTML omitted --></p>
<p>如果想要我快速解决问题的话，麻烦首先要给出定义，问题是什么？然后再给出问题的上下文，这样我才能方便排查问题。 <!-- raw HTML omitted --></p>
<p>但这还不是最佳的咨询姿势，我推崇的咨询方式是所谓的 STAR 方法或者叫「Search before Asking」。 <!-- raw HTML omitted --></p>
<h2 id="star-方法-高效提问"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> STAR 方法：高效提问</h2>
<p>所谓的STAR method, 是四个单词的首字母缩写，分别是: Situation(场景), Task(任务), Action(行动)，Result(结果)。即： <!-- raw HTML omitted --></p>
<ul>
<li>situation: 描述问题的背景，这个问题是什么，以及你为什么需要做这个事情 <!-- raw HTML omitted --></li>
<li>task: 你具体的任务是什么，你需要做什么 <!-- raw HTML omitted --></li>
<li>action: 你做了什么事情？你的行动是什么. <!-- raw HTML omitted --></li>
<li>result: 结果如何，你得出的结论是什么? <!-- raw HTML omitted --></li>
</ul>
<p>前面提到过，尊重是与人交流的基本原则, 尊重自然包括尊重别人的时间，不做伸手党。 <!-- raw HTML omitted --></p>
<p>在咨询别人问题的时候，不仅要把问题说清楚，还需要把自己的调查和排查结果告诉别人，即所谓的「search before asking」，这样给人的印象是我尝试自己来解决，但解决无果才来请教你。 <!-- raw HTML omitted --></p>
<p>既表现出对别人能力的尊重，也显示出自己是经过调查才发问的，避免询问一些低级，Google 就能找到答案的问题。 <!-- raw HTML omitted --></p>
<p>没有人喜欢伸手党，你直接拿个问题，不经自己思考去询问别人，这就不是交流沟通，是「空手套方案」了。 <!-- raw HTML omitted --></p>
<p>别人没有这样的义务来给你提供解决方案。 <!-- raw HTML omitted --></p>
<p>所以我向别人求助，无论是企业微信，邮件，还是当面求教，流程一般是： <!-- raw HTML omitted --></p>
<ol>
<li>我现在尝试解决xx问题，我要去解决这个问题的原因是yyy <!-- raw HTML omitted --></li>
<li>我尝试了解法1, 解法2，都无法解决，这是我的日志 <!-- raw HTML omitted --></li>
<li>尝试这几种解法都不能解决问题，不能你能否根据你的经验，给我提供点思路呢？或者是我漏了什么关键步骤么? <!-- raw HTML omitted --></li>
</ol>
<p>或者是. <!-- raw HTML omitted --></p>
<ol>
<li>我现在尝试解决xx问题，我要去解决这个问题的原因是yyy <!-- raw HTML omitted --></li>
<li>我尝试了方案a xxxx, 得出的结果是xx, 然后我再尝试了方案b xxx, 得出的结果是xxx. <!-- raw HTML omitted --></li>
<li>我个人感觉这两种方案各有优劣，分别是xxx, 我倾向方案a, 原因是xxx. <!-- raw HTML omitted --></li>
<li>想请教下，你的看法是觉得哪个方案更优，或者你有什么建议么？ <!-- raw HTML omitted --></li>
</ol>
<p>提供足够的信息和选项给别人做选择题，让不是提供个空白问卷让别人做主观题。 <!-- raw HTML omitted --></p>
<p>毕竟大多数人都喜欢做选择题，省时省力。 <!-- raw HTML omitted --></p>
<h2 id="云雨伞-有效提建议"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 云雨伞: 有效提建议</h2>
<p>来源于日本知名咨询师大石哲之的著作《靠谱：顶尖咨询师教你的工作基本功》，简单有效，原理概括起来就一句话： <!-- raw HTML omitted --></p>
<blockquote>
<p>天上出现乌云，眼看要下雨，带上伞比较好。 <!-- raw HTML omitted --></p>
</blockquote>
<p>其中的「云」代表通过观察得到的客观事实；「快要下雨」，是从客观事实得出的分析；「带上伞」这个是根据分析给出的建议。 <!-- raw HTML omitted --></p>
<p>这就所谓的「云雨伞」模型的来源，运用「云雨伞」模型提建议，有理有据有方案，能让对方更愿意接受。 <!-- raw HTML omitted --></p>
<p>青史留名，给老板提建议（画饼）的名篇《隆中对》，也运用了「云雨伞」模型： <!-- raw HTML omitted --></p>
<blockquote>
<p>亮答曰：“自董卓以来，豪杰并起，跨州连郡者不可胜数。 <!-- raw HTML omitted --></p>
<p>&hellip; <!-- raw HTML omitted --></p>
<p>荆州北据汉、沔，利尽南海，东连吴会，西通巴、蜀，（描述「云」，表达事实） <!-- raw HTML omitted --></p>
<p>此用武之国，而其主不能守，此殆天所以资将军，（推测「雨」，即分析利弊） <!-- raw HTML omitted --></p>
<p>将军岂有意乎？（带上「伞」，即提出建议） <!-- raw HTML omitted --></p>
<p>益州险塞，沃野千里，天府之土，高祖因之以成帝业。（描述「云」，表达事实） <!-- raw HTML omitted --></p>
<p>刘璋暗弱，张鲁在北，民殷国富而不知存恤，智能之士思得明君。 <!-- raw HTML omitted --></p>
<p>将军既帝室之胄，信义著于四海，总揽英雄，思贤如渴，若跨有荆、益，保其岩阻，西和诸戎，南抚夷越，外结好孙权，内修政理； <!-- raw HTML omitted -->
（推测「雨」，即分析利弊） <!-- raw HTML omitted --></p>
<p>天下有变，则命一上将将荆州之军以向宛、洛，将军身率益州之众出于秦川，百姓孰敢不箪食壶浆以迎将军者乎？ <!-- raw HTML omitted -->
诚如是，则霸业可成，汉室可兴矣。（带上「伞」，即提出建议） <!-- raw HTML omitted --></p>
</blockquote>
<p>这一番结合「云雨伞」的建议（画饼），让老板直呼，「孤之有孔明，犹鱼之有水也」 <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->6<!-- raw HTML omitted --> 总结</h2>
<p>所谓的「Skill = knowledge + practice」，知道一项知识，如果不运用，没有办法修炼成技能的。 <!-- raw HTML omitted --></p>
<p>毕竟「纸上得来终觉浅，绝知此事要躬行」。 <!-- raw HTML omitted --></p>
<p>要多实践才能提高沟通能力。 <!-- raw HTML omitted --></p>
<p>推荐几本读过的，关于沟通，心理学与咨询的好书，推荐度由高至低： <!-- raw HTML omitted --></p>
<ol>
<li><a href="https://book.douban.com/subject/35519608/">《非暴力沟通》</a>, 豆瓣评分：8.7(当然，评分只是一个参考项) <!-- raw HTML omitted --></li>
<li>《<a href="https://book.douban.com/subject/2328458/">社会性动物</a>》，豆瓣评分：9.0 <!-- raw HTML omitted --></li>
<li>《<a href="https://book.douban.com/subject/27021786/">靠谱</a>》：豆瓣评分：7.6 <!-- raw HTML omitted --></li>
<li>《<a href="https://book.douban.com/subject/1377474/">QBQ!問題背後的問題</a>》，豆瓣评分：7.4 <!-- raw HTML omitted --></li>
</ol>
<p>软技能系列的下一篇是： <!-- raw HTML omitted --></p>
<ul>
<li>软件工程师的软技能指北（四）：简历篇 <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>软件工程师的软技能指北（二）：事业篇</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E4%BA%8B%E4%B8%9A%E7%AF%872/</link>
      <pubDate>Thu, 11 May 2023 21:32:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BD%AF%E6%8A%80%E8%83%BD%E6%8C%87%E5%8C%97_%E4%BA%8B%E4%B8%9A%E7%AF%872/</guid>
      <description>1 前情提要 软件工程师的软技能指北（一）：总览篇 2 前言 打工是不可能打工的，这辈子都不可能打工的。 3 心态转变 很多软件工程师容易把自己定义成「写代</description>
      <content:encoded><![CDATA[<h2 id="前情提要"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 前情提要</h2>
<ol>
<li><a href="https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/">软件工程师的软技能指北（一）：总览篇</a> <!-- raw HTML omitted --></li>
</ol>
<h2 id="前言"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 前言</h2>
<blockquote>
<p>打工是不可能打工的，这辈子都不可能打工的。 <!-- raw HTML omitted --></p>
</blockquote>
<h2 id="心态转变"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 心态转变</h2>
<p>很多软件工程师容易把自己定义成「写代码的」，或者是「码农」，就是以写软件为生的人。 <!-- raw HTML omitted --></p>
<p>也只愿意接受写代码相关的任务，什么文档，设计，需求分析，是一概不想理的，我就是一把唆。 <!-- raw HTML omitted --></p>
<p>也有工程师觉得，反正我把事情做好也只有这么点工资，摆烂收入也不一定会下降，那不如就躺平，反正我的收入是固定。 <!-- raw HTML omitted --></p>
<p>也不能说毫无道理，只是把自己定位成「需求翻译机」，着实和「流水线的工人」区别不大。 <!-- raw HTML omitted --></p>
<p>随着自动化技术的进步，「流水线工人」很容易就被机器人所取代，它们只要能源充足，就可以24小时不停地产出 <!-- raw HTML omitted --></p>
<p>但是踏实干活的工程师，也难免容易有与以上类似的疑惑。 <!-- raw HTML omitted --></p>
<p>那不如换个思路： <!-- raw HTML omitted --></p>
<p>把你的工作当成是你自己的生意（business），那你眼中的一切都会变得截然不同。 <!-- raw HTML omitted --></p>
<h3 id="客户"><!-- raw HTML omitted -->3.1<!-- raw HTML omitted --> 客户</h3>
<p>既然是生意，自然要找对目标客户。 <!-- raw HTML omitted --></p>
<p>如果把工作当成生意，那么你的客户就是你的雇主，虽然你的客户大多数情况下只有一个。 <!-- raw HTML omitted --></p>
<p>但是很多的公司，都是靠给某一个大客户供货而做大做强的。 <!-- raw HTML omitted --></p>
<h4 id="客户-customer-与用户-user"><!-- raw HTML omitted -->3.1.1<!-- raw HTML omitted --> 客户（customer）与用户（user）</h4>
<p>谈起business, 我就想聊一下个人对于客户与用户的浅薄见解。 <!-- raw HTML omitted --></p>
<p>归纳起来，就是两点： <!-- raw HTML omitted --></p>
<p><strong><strong>商业公司总是客户第一</strong></strong> <!-- raw HTML omitted --></p>
<p><strong><strong>用户不等于客户</strong></strong> <!-- raw HTML omitted --></p>
<p>简而言之，用户是使用某项服务或者产品的人，而客户是为某项服务或者产品付费的人。 <!-- raw HTML omitted --></p>
<p>举个例子，经常有人说，微信不注重用户体验，微信不倾听用户的声音，微信有着地球上第二傲慢的产品经理团队（第一可能是苹果）。 <!-- raw HTML omitted --></p>
<p>就我在微信的开发经历而言，的确如此。 <!-- raw HTML omitted --></p>
<p>没有见过哪些产品经理提的需求是来自于改善用户体验的， <!-- raw HTML omitted -->
腾讯内网上都是挂着各种反馈微信用户体验的帖子，最后都是以「这个问题，楼主可以私聊我们讨论」结束的。 <!-- raw HTML omitted --></p>
<p>因为，对于微信而言，微信用户只是使用微信这个软件的人，而不是为微信付费的人，不是微信收入的来源。 <!-- raw HTML omitted --></p>
<p>对于微信支付而言，客户是各种接入微信支付的商户，因为每笔交易，他们要交约等于交易金额 0.0021%或者更多的手续费，属于躺着赚钱的模式； <!-- raw HTML omitted --></p>
<p>对于微信朋友圈，公众号而言，客户是各种广告主； <!-- raw HTML omitted --></p>
<p>在微信用户面前，微信就是个爹，教育你们怎么使用微信；但是在微信客户面前，比如美团，快手这些微信支付的大客户，微信就是孙子。 <!-- raw HTML omitted --></p>
<p>要做什么需求，产品经理根本没有办法推；要什么时候上线，就什么时候上线，即使不合理，也只能回来压榨工程师的时间。 <!-- raw HTML omitted --></p>
<p>毕竟客户说了，你们不做我们就切到支付宝去。 <!-- raw HTML omitted --></p>
<p>所以微信用户本质上只是微信收入来源的耗材和燃料，反正用户离不开微信这口灶，产品经理为什么还要听燃料的心声呢。 <!-- raw HTML omitted --></p>
<p>当然，背后的商业逻辑是这样，用户体验又是另外一回事了。 <!-- raw HTML omitted --></p>
<h3 id="产品"><!-- raw HTML omitted -->3.2<!-- raw HTML omitted --> 产品</h3>
<p>既然是生意，那么自然要有可以营利的产品或服务，对于大部分工程师而言，他们能提供的产品，就是生产软件的服务。 <!-- raw HTML omitted --></p>
<p>那和「写代码的」也没有什么差别嘛？ <!-- raw HTML omitted --></p>
<p>稍安勿躁，这只是第一步嘛。 <!-- raw HTML omitted --></p>
<p>如果我们提供的生产软件的服务是生意的话，那么要想营利，产生更大的利润，就需要我们考虑一个问题： <!-- raw HTML omitted --></p>
<p>如何大家都是生产软件的生意，你的产品又如何从同质化严重的同行中脱颖而出。 <!-- raw HTML omitted --></p>
<h3 id="竞争优势"><!-- raw HTML omitted -->3.3<!-- raw HTML omitted --> 竞争优势</h3>
<p>搞低价倾销（加班巻死他们）？ <!-- raw HTML omitted --></p>
<p>这也是个可行但不能持久的法子： <!-- raw HTML omitted --></p>
<ol>
<li>毕竟你搞低价倾销，即使把生意都抢到，你产能有限，客户的单不一定都能接过来； <!-- raw HTML omitted --></li>
<li>另外低价倾销，只会把市场搞坏，降低了利润空间，只会让客户单方面受益 <!-- raw HTML omitted --></li>
<li>强中自有强中手，一山还有一山高，万一遇到比你还能搞低价倾销的同行，那不是哑巴吃黄莲，有苦说不出嘛。 <!-- raw HTML omitted --></li>
</ol>
<p>所以最优解应该是你提供更优质的服务，将优质服务作为自己的竞争优势。 <!-- raw HTML omitted --></p>
<p>既然要提供优势的服务，就需要 <!-- raw HTML omitted --></p>
<ol>
<li>学会与客户沟通交流，先明确客户的需求， <!-- raw HTML omitted --></li>
<li>然后分析需求，明确这服务是否客户想要的， <!-- raw HTML omitted --></li>
<li>再动工建设，保证最终成品贴近客户的诉求。 <!-- raw HTML omitted --></li>
</ol>
<p>或者是成为某个领域的专家，提供差异化的服务。 <!-- raw HTML omitted --></p>
<p>所谓人无我有，人有我优。 <!-- raw HTML omitted --></p>
<p>看到这里，有朋友可能会质疑：即使我做了这么多，做得这么好，但是工资（产品的售价）还是不涨阿，那还有什么意思？ <!-- raw HTML omitted --></p>
<p>如果把这个当作自己的生意，提供优质服务之后，自然是需要和客户重新谈合同的嘛（加薪）。 <!-- raw HTML omitted --></p>
<p>如果谈不拢，那就换家客户就好了，反正我只要产品够好，自然不缺客户，我还可以拿现有的供货合同和未来的客户谈。 <!-- raw HTML omitted --></p>
<p>生意是自己，服务做优质之后，最终受益的还是自己（当然，需要些时间和策略） <!-- raw HTML omitted --></p>
<h3 id="大厂光环"><!-- raw HTML omitted -->3.4<!-- raw HTML omitted --> 大厂光环</h3>
<p>所谓的大厂光环，和偶像光环类似，就觉得个人会因为进去某个公司，把平台优势当作自己的成就，从而骄傲了起来。 <!-- raw HTML omitted --></p>
<p>坦白讲，以前我也有大厂光环，在自己去了某家大厂之后。 <!-- raw HTML omitted --></p>
<p>走路的时候，头抬得更高了，背挺得更直了，以便于胸前的工牌更加醒目。 <!-- raw HTML omitted --></p>
<p>如果把自己的职业生涯比作一门生意后，我想我应该不会再为与某个客户合作而沾沾自喜，毕竟客户的商业成就，与我关系不大。 <!-- raw HTML omitted --></p>
<p>客户可以有很多个，没有必要为别人的成就而自得不已。 <!-- raw HTML omitted --></p>
<p>最近新读到一首诗，唐代孟郊的《劝学》： <!-- raw HTML omitted --></p>
<blockquote>
<p>击石乃有火，不击元无烟。 <!-- raw HTML omitted --></p>
<p>人学始知道，不学非自然。 <!-- raw HTML omitted --></p>
<p>万事须己运，他得非我贤。 <!-- raw HTML omitted --></p>
<p>青春须早为，岂能长少年。 <!-- raw HTML omitted --></p>
</blockquote>
<p><strong><strong>万事须己运，他得非我贤。</strong></strong> <!-- raw HTML omitted --></p>
<h2 id="十项全能"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 十项全能</h2>
<p>既然是要做生意，那么只会写代码，注定是不可行。 <!-- raw HTML omitted --></p>
<p>毕竟没有见过哪家成功的商业公司，只在车间生产产品即可，不需要一系列配套的商业运作流程： <!-- raw HTML omitted --></p>
<ol>
<li>营销与广告，打造个人品牌，写博客或者做Up主 <!-- raw HTML omitted --></li>
<li>持续学习，没有什么生意是一成不变，就能从爷爷辈做到孙子辈的 <!-- raw HTML omitted --></li>
<li>如何提升个人效率，以更少的投入获取更多的产出 <!-- raw HTML omitted --></li>
<li>如何理财，管理你生意的营收与支出 <!-- raw HTML omitted --></li>
<li>如何健身，管理你自己的身材 <!-- raw HTML omitted --></li>
<li>旋转720度，落地无水花 <!-- raw HTML omitted --></li>
</ol>
<p>诸如此类，这些技能要求也就变成理所当然。 <!-- raw HTML omitted --></p>
<h2 id="总结"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 总结</h2>
<p>把工作当作生意的思路转变，只是第一步。 <!-- raw HTML omitted --></p>
<p>套用《霸王别姬》的一句台词： <!-- raw HTML omitted --></p>
<blockquote>
<p>今儿个是破题儿 <!-- raw HTML omitted --></p>
<p>文章还在后头呢 <!-- raw HTML omitted --></p>
</blockquote>
<p>客户或公司是一个抽象的概念，实际也是由形形色色的人组成。 <!-- raw HTML omitted --></p>
<p>与客户合作，实际是与各种人打交道，如何高效沟通和交流就是一个非常有用的技能。 <!-- raw HTML omitted --></p>
<p>但对于曾经社恐的我来说，跨出第一步却是非常艰难。 <!-- raw HTML omitted --></p>
<p>所以软技能系统的下一篇是： <!-- raw HTML omitted --></p>
<p>软件工程师的软技能指北（三）：高效交流篇 <!-- raw HTML omitted --></p>
<p>对于后续的篇章，呼应上文，我有了大概腹稿，分别是： <!-- raw HTML omitted --></p>
<ul>
<li>软件工程师的软技能指北（四）：简历篇 <!-- raw HTML omitted --></li>
<li>软件工程师的软技能指北（五）：面试篇 <!-- raw HTML omitted --></li>
<li>软件工程师的软技能指北（六）：谈薪篇 <!-- raw HTML omitted --></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>软件工程师的软技能指北（一）：总览篇</title>
      <link>https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/</link>
      <pubDate>Fri, 05 May 2023 08:24:00 -0700</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2023/%E6%80%BB%E8%A7%88%E7%AF%87/</guid>
      <description>1 背景 上大学时，曾经看过一本书《软技能，代码之外的生存指南》，主要介绍程序员要想取得成功的职业生涯，所必需的软技能。 所谓的软技能，是区别与使</description>
      <content:encoded><![CDATA[<h2 id="背景"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 背景</h2>
<p>上大学时，曾经看过一本书《软技能，代码之外的生存指南》，主要介绍程序员要想取得成功的职业生涯，所必需的软技能。</p>
<figure>
    <img loading="lazy" src="/ox-hugo/book_cover_v1.jpg"/> 
</figure>

<p>所谓的软技能，是区别与使用C++或Java 编写业务逻辑和单元测试代码，使用Docker 部署等「硬技能」，而是注重职场，心态，身体与理财等各方面提升的「软技能」。</p>
<p>大学时候的我还沉迷于编写各种很cool 的代码，学各种编程语言，觉得此书不过是面向程序员的「鸡汤」一本。</p>
<h3 id="再读"><!-- raw HTML omitted -->1.1<!-- raw HTML omitted --> 再读</h3>
<p>工作第三年时，换了一份工作，对职业充满了迷茫与困惑，然后再读了一次这本书，得出的结论是书挺不错的，但是不符合中国程序员的国情。</p>
<p>比如理财方面，建议程序员在低房价时买房，我也想买，但是在深圳只能是望楼兴叹；</p>
<p>健身方面，下班后多运动，自己做饭，控制饮食以增肌减脂，着实没有时间自己做饭。</p>
<p>但里面的思路和哲学很有参考意义。</p>
<h3 id="三读"><!-- raw HTML omitted -->1.2<!-- raw HTML omitted --> 三读</h3>
<p>最近突然想起了这本书，搜索之后发现，英文原版在2020能出了第二版，而中文版本也在2022年翻译出版了；</p>
<p>因为书再版了，所以又重读了一次这本书，英文书名会更正常一些：Soft Skills: The Software Developer&rsquo;s Life Manual</p>
<figure>
    <img loading="lazy" src="/ox-hugo/book_cover.jpg"/> 
</figure>

<p>得出的结论还是与之前一致：「书中的思路和哲学很有参考意义，做法却不一定适用」。</p>
<p>但区别在于，我这次打算把我自己的做法与行动也总结下来，「用他的旧瓶子，装我的新酒」。</p>
<p>就成功的标准而言，我的职业生涯还远谈不上成功，甚至可以说还有很多失败之处，这也算是我自己反思的心得。</p>
<p>毕竟也不只有别人优秀的经历，我这种潦倒的经历也是可以参考的。</p>
<blockquote>
<p>见贤思齐焉，见不贤而内自省也。</p>
</blockquote>
<p>这让我想起了Netflix 的高分纪录片《我心永随桑德兰》，别人拍纪录片是记录成功，这部豆瓣9.2分的片子却是在记录失败：</p>
<figure>
    <img loading="lazy" src="/ox-hugo/%e6%88%91%e5%bf%83%e6%b0%b8%e9%9a%8f%e6%a1%91%e5%be%b7%e5%85%b0.png"/> 
</figure>

<p>英超保级劲旅桑德兰，在2017年终于花光自己在英超的保级运气，从顶级联赛英超跌入二级联赛英冠。</p>
<p>然后俱乐部高层想拍一部纪录片，记录自己奋发图强，卧薪尝胆杀回英超的经历，以此吸引投资者，最后却是二连跳，跌入到三级联赛英甲的神剧情。</p>
<p>把我不开心的事说出来，拿出来给大家一起开心下嘛。</p>
<h2 id="软技能"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 软技能</h2>
<p>就软技能而言，绝不止「软件工程师」这个职业需要这个技能，而是绝大部分职业都需要的。</p>
<p>因为绝大部分的工作都是与人打交道，而软技能就是如果更高效与人沟通的关键技能。</p>
<p>如果有「软件工程师」认为自己只要写代码就可以了（我曾经就是这么认为的）；或者觉得，写代码才是最有趣的部分（我现在也是这么认为的），我不想理这么多事情；</p>
<p>那么你的可替代性就非常高，当代码生成工具足够成熟之后，你就可以被裁掉了。</p>
<p>之前办信用卡时候，我说的职业是Software Engineer，银行客户经理问我，你们是不是只要埋头对着电脑敲键盘即可，不需要和人说话的？</p>
<p>（我心想，你是美剧看多了吧）</p>
<p>而事实恰恰与直觉相反，软件工程师大部分时间都在与人打交道：</p>
<ol>
<li>拿到需求时，需要分析需求的可行性，与产品经理扯皮，理清模糊之处</li>
<li>撰写设计文档，和组员及老板介绍方案，比较方案优劣，选择最优解</li>
<li>与上下游团队扯皮，求下游团队帮忙干活，给上游团队表演太极</li>
<li>和老板画饼，只要再给我些时间，定然能做得成绩斐然。</li>
</ol>
<p>哪项不是与人打交道呢？项项都是我缺乏的技能阿，我就只会接活，干活，然后再接再干。</p>
<p>老黄牛听到我这境况，估计都得叫我一声兄弟；流水线见我这际遇，也会直呼一声「内行」</p>
<p>所以「软技能」真的是不可或缺。</p>
<p>或许是我给银行客户经理的答案不合他意，我信用卡申请被拒了；</p>
<p>或许我「软技能」再强大一些就能通过了.</p>
<h2 id="主旨"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 主旨</h2>
<p>原书把主旨分成七部分，分别是:</p>
<ol>
<li>事业(Career): 像经营企业一样，打磨自己的职业生涯</li>
<li>自我营销(Marketing Yourself): 通过高质量文章和视频，打造自己的个人品牌</li>
<li>学习(Learning): 终身学习，自我学习</li>
<li>生产力（Productivity）：提高生产力的方式</li>
<li>理财（Finanacial）：如何复利，创造被动收入</li>
<li>健身（Fitness）：健康，有型的体魄</li>
<li>心态（Mindset）：培养积极的心态，To be a better man(woman).</li>
</ol>
<p>我就不会按照作者的主旨来阐述我自己的想法，毕竟「他瓶装我酒」，想怎么「装」就是我自己的选择了。</p>
<p>感触多些的主旨，就拆分开多几篇文章，没有太多感慨的部分，可能就选择性省略了。</p>
<h2 id="总结"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 总结</h2>
<p>所以要「软硬都抓，内外兼修」，才能成长为一个优秀的软件工程师。</p>
<p>只会写代码的软件工程师，真的是注定吃亏，酒香也怕巷子深。这是多次吃亏之后得出的经验总结。</p>
<p>其他的职业与岗位也大抵如此。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>应届生如何写好技术简历</title>
      <link>https://ramsayleung.github.io/zh/post/2020/%E5%BA%94%E5%B1%8A%E7%94%9F%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BD%E6%8A%80%E6%9C%AF%E7%AE%80%E5%8E%86/</link>
      <pubDate>Sat, 14 Mar 2020 13:07:00 +0800</pubDate>
      
      <guid>https://ramsayleung.github.io/zh/post/2020/%E5%BA%94%E5%B1%8A%E7%94%9F%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BD%E6%8A%80%E6%9C%AF%E7%AE%80%E5%8E%86/</guid>
      <description>1 背景介绍 笔者目前在蚂蚁金服-网商银行做后端开发, 因为在组内毕业时间最短(2年), 所以经常会被Leader当成免费的HR去找校招简历, 所以见</description>
      <content:encoded><![CDATA[<h2 id="背景介绍"><!-- raw HTML omitted -->1<!-- raw HTML omitted --> 背景介绍</h2>
<p>笔者目前在蚂蚁金服-网商银行做后端开发, 因为在组内毕业时间最短(2年),
所以经常会被Leader当成免费的HR去找校招简历, 所以见过不少的简历(&gt;100份),
把收到简历之后, 有时会给简历打分, 然后再给到老板.</p>
<p>因为见过不少的简历,
发现有些学历,经历优秀的同学, 因为没有好好写简历而被埋没, 也见过通过简历,
放大自身优点的同学. 所以在这里, 以前人的姿态,
斗胆谈一个应届生如何写好一份简历的技巧, 也希望给各位同学带来一点帮忙.</p>
<h2 id="自我介绍"><!-- raw HTML omitted -->2<!-- raw HTML omitted --> 自我介绍</h2>
<p>自我介绍, 无需赘言, 就是把你的个人信息简明介绍完, 包括教育经历, 专业,
邮箱, 电话, Github地址(如果有优秀项目的话, 如果只是注册了个账号,
还是不要放上去).</p>
<p>需要注意的是, 关于是否放照片这一点, 个人倾向于不放,
作为技术开发, 放不放都无所谓, 放了容易分散注意力. 如果要放照片,
照片请做到简洁, 得体.</p>
<h2 id="实习经历-项目经历"><!-- raw HTML omitted -->3<!-- raw HTML omitted --> 实习经历/项目经历</h2>
<p>对于开发岗, 实习经历和项目经历是重要的栏目, 也是面试官期待看到的栏目,
因为应届生没有工作经历, 所以就只好写实习经历和项目经历,
对于实习经历/项目经历, 按时间升序或者降序排列, 不要太乱, 个人推荐的格式:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">xx</span> <span class="err">公司</span><span class="o">/</span><span class="n">xx</span> <span class="err">项目</span><span class="o">,</span> <span class="err">时间</span><span class="o">:</span> <span class="mf">2020.03</span><span class="o">-</span><span class="mf">2020.</span><span class="n">xx</span>
</span></span><span class="line"><span class="cl">    <span class="mf">1.</span> <span class="err">项目背景一句话、</span>
</span></span><span class="line"><span class="cl">    <span class="mf">2.</span> <span class="err">自己在项目里负责的工作</span>
</span></span><span class="line"><span class="cl">    <span class="mf">3.</span> <span class="err">用到的技能</span><span class="o">/</span><span class="err">思考的过程或者难点攻克的过程</span>
</span></span><span class="line"><span class="cl">    <span class="mf">4.</span> <span class="err">项目的结果或者我的成绩</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="err">总而言之</span><span class="o">,</span> <span class="err">参考</span><span class="n">STAR</span><span class="err">法则</span><span class="o">.</span>
</span></span></code></pre></div><p>需要避免的一些问题:</p>
<ol>
<li>技术无关的事情少写, 更不要写一些大家都知道的事情. 在项目中负责”代码的编写, 用例的测试, 以及相关文档的校对/编辑”,
总结来说, 你写代码了, 但是做了啥呢? 没体现.</li>
<li>避免流水账, 希望可以简洁明了, 突出重点, 使用STAR法则, 参见<a href="https://www.zhihu.com/question/47061396">如何使用STAR法则写自己的简历啊</a></li>
<li>避免写和你面试岗位不相关的内容, 我去当家教了, 我把它写到简历里,
但是你面试的是技术岗位, 不是老师.</li>
</ol>
<h2 id="个人技能"><!-- raw HTML omitted -->4<!-- raw HTML omitted --> 个人技能</h2>
<p>将个人技能按照熟悉程度降序排列, 通过项目和技能介绍,
给面试官留下一种”喜欢学习新事物, 喜欢挑战, 喜欢折腾, 有geek精神”.
列下需要注意的点:</p>
<ol>
<li>避免主观内容, 比如吃苦耐劳, 善于学习这些; 招聘面试很重要的一点是筛选出符合有相关专业/潜力的同学,
这些都是通过客观条件体现的, 比如你的项目, 竞赛, 论文等,
尝试通过能力和项目来证明, 而不是自己主观评价. 程序开发是技术活,
对于应届生而言, 讲究的是 Talk is cheap, Show me your work.</li>
<li>尝试提供事实支撑; 如”熟悉Spring框架”的表述, 肯定不如”了解Spring框架,
读过部分代码, 包括容器依赖注入, 控制反转, 总结相关的设计模式”等.</li>
<li>不要写一些和技术无关的技能, 如”会PS, 有驾照”这类. 四六级, 雅思/托福,
日语N1/N2这些语言技能可以加上</li>
</ol>
<h2 id="顶级期刊论文-acm竞赛"><!-- raw HTML omitted -->5<!-- raw HTML omitted --> 顶级期刊论文/Acm竞赛</h2>
<p>这些都是重要加分项, 如果有的话, 就把期刊论文和Acm竞赛的获奖经历, 列出来,
提高面试官的期望值, 按奖项/论文的含金量降序排列, 如果没有的话, 就跳过.</p>
<h2 id="其他亮点"><!-- raw HTML omitted -->6<!-- raw HTML omitted --> 其他亮点</h2>
<p>大部分的同学可能都没有Github 1w+的star, 没有为Linux Kernel/Netty/Redis/Mysql这些项目贡献过代码 ,没发过顶级期刊的论文,
就觉得自惭形愧, 一无是处.</p>
<p>我觉得并非如此, 我觉得折腾过Vim/Emacs, 熟悉使用Zsh+Tmux+Git, 熟悉Linux(关于熟悉的标准, 参见下文), 也是亮点;</p>
<p>并非要做到最好, 才叫有亮点; 也并非产出对应的结果才讲亮点, 对于学生而言, 探索/折腾的过程同样重要; 此外, 没有哪个专家不是从菜鸟开始起步的; 接下来我会列举下我认为亮点的地方:</p>
<ol>
<li>参与开源项目, 有一定的star/follower, 比如我到现在都在维护Rust的一个<a href="https://github.com/ramsayleung/rspotify/">开源库</a>, 也写过700+star的爬虫.</li>
<li>有自己的blog, 很多新的技术就可以在blog实践, 也有地方可以沉淀自己的思考, 包括遇到的问题及其排查思路与过程,　记录有趣的事情等等, 但如果都是搬运的文章就算了.</li>
<li>研究过开源技术, 如我自己折腾过常用的Linux发行版本, 个人开发日常使用Linux, 使用Emacs超过5年, 自己编写Shell脚本管理电脑,
在17年开始学习Rust等等.</li>
<li>阅读相关项目源码, 有相应的总结/思考. 如Jdk/JUC源码, Spring源码,
Tomcat源码, Netty源码, 记录在自己blog上.</li>
<li>了解/使用多种语言, Java/C++/C/Python/Go/Rust/Sql/Shell,
这个就不一一列举了.</li>
</ol>
<p>总而言之, 自己的思考_动手折腾_新鲜事物的探索, 都可以像亮点.</p>
<h2 id="个人评价-兴趣爱好"><!-- raw HTML omitted -->7<!-- raw HTML omitted --> 个人评价/兴趣爱好</h2>
<p>公司招聘是选择<strong>有能力</strong>, 并且合适的同学, 并不是相亲, 所以老板并不关心你的兴趣爱好和个人评价; 在面试中, 你应该是由面试官评价,
自我评价并没有什么用处, 写上去还占空间.</p>
<h2 id="细节"><!-- raw HTML omitted -->8<!-- raw HTML omitted --> 细节</h2>
<p>需要明确的一点, 在面试官面试你之前, 你的简历就是你最大的推销手段,
你的简历代表着你在和其他上百名的竞争者做着竞争.</p>
<p>因此你的简历每多打磨一分, 你的在众多简历中脱颖而出的机会就多了一分,
所以简历需要精心打磨, 那么很多细节就应该注意, 说下我看到的细节点:</p>
<ol>
<li>文档格式: 简历的文件类型最好用pdf, 很多技术开发用的是Mac,
如果用的是word, 可能遇到各种问题, 排版也可能会乱掉,
对于pdf而言就不存在这样的问题, 速度也足够行.</li>
<li>简历模板: 可以的话, 请不要用 word 套模板, 要套模板就用latex, 不用调格式, 例如: <a href="https://github.com/billryan/resume">https://github.com/billryan/resume</a> 对于伸手党同学, 注册这个网站, 把你的简历内容替换掉模板即可:
<a href="https://www.overleaf.com/project/5e6c67ac54a3190001a2fed7">https://www.overleaf.com/project/5e6c67ac54a3190001a2fed7</a>
如果这样还不会的话, 那就&hellip;</li>
<li>简历篇幅: 应届生的简历最好一页写完, 如果一页没写完,
第二页只多了一点内容, 就会显得很难受.</li>
<li>简历命名: 发送简历给面试官, 或者简历收集同学的时候,
请不要用”个人简历_我的简历”这类的名字, 谁知道”个人_我”指的是谁,
推荐命名: 学校_学历_姓名_求职意愿.pdf 如:
xx大学_硕士_宫xx_后端开发.pdf</li>
<li>技术熟悉程度: 精通, 熟悉, 了解; 这些用词请注意, 按我的理解,
&ldquo;了解&quot;要起码用这个技术自己做过一点东西, 平时关心相关的新闻和前沿进展;
&ldquo;熟悉&quot;则是平时经常用到这个技术,
或者曾经在很长一段时间内以它为主做过开发;&ldquo;精通&quot;则起码要能把它从头到尾理解得非常透彻才能算是.
如果你是了解, 然后简历说是精通, 面试官对你的期望会拔高,
然后发现你是了解, 那心理就会有落差. 举例 ,我精通git, 然而只会git
add/git commit/git push, 连git bisect都没听过, 那就&hellip;</li>
<li>参与程度; 参与, 负责; 请注意用词, 参与系统开发表现对某个功能模块清楚,
负责表示所有设计考虑, 技术实现都清楚.</li>
<li>和你面试工作相关的东西不要写; 如我是学生会干部, 这个没啥用,
我们要的不是干部, 而是有相关专业技能的人才.</li>
</ol>
<h2 id="总结"><!-- raw HTML omitted -->9<!-- raw HTML omitted --> 总结</h2>
<p>总而言之, 写好简历可以做到扬长避短, 最大限度突出亮点的作用,
如果你觉得实在绞尽脑汁都没有什么可以写的话,
或者你应该重新去做些个人项目, 积累经验再来投递.</p>
<p>说了这么多, 因为拿份示例出来了, 因为我已经工作2年, 已经找不到找实习当时的简历了,
所以拿了基友的简历过来, 基友拿到了AWS的offer,
他的实习/学术项目已经足够丰富, 其他内容就做了取舍(已获得基友授权,
基于本人要求, 去掉个人信息):</p>
<figure>
    <img loading="lazy" src="https://uploadfiles.nowcoder.com/files/20200312/188797_1583998156546_8ZxIzt.jpg"
         alt="Figure 1: 8ZxIzt.jpg"/> <figcaption>
            <p><!-- raw HTML omitted -->Figure 1: <!-- raw HTML omitted -->8ZxIzt.jpg</p>
        </figcaption>
</figure>

]]></content:encoded>
    </item>
    
  </channel>
</rss>
