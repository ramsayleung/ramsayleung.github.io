<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on In Pursuit of Hubris</title><link>https://ramsayleung.github.io/tags/python/</link><description>Recent content in python on In Pursuit of Hubris</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 12 Nov 2017 07:05:00 +0800</lastBuildDate><atom:link href="https://ramsayleung.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>用python 来操控 sqlite3</title><link>https://ramsayleung.github.io/post/2017/python_with_sqlite3/</link><pubDate>Sun, 12 Nov 2017 07:05:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/python_with_sqlite3/</guid><description>python 与嵌入式关系数据库 sqlite3的邂逅 SQLite 是一个非常优秀的嵌入式数据库，非常轻量，可以与 Mysql, PostgreSQL 这样的 大型数据库互补使用. 而 Python 标准库中的 sqlite3 模块实</description></item><item><title>从京东"窃取"150+万条数据</title><link>https://ramsayleung.github.io/post/2017/jd_spider/</link><pubDate>Wed, 21 Jun 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/jd_spider/</guid><description>我最近编写了两只京东商品和评论的分布式爬虫来进行数据分析，现在就来分享一下。 1 爬取策略 众所周知，爬虫比较难爬取的就是动态生成的网页，因为需要</description></item><item><title>你所不可或缺的 – logging</title><link>https://ramsayleung.github.io/post/2017/logging/</link><pubDate>Sun, 09 Apr 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/logging/</guid><description>1 重要性 笔者最近都在负责项目中关于日志的部分，因为跟日志打交道比较多，所以有一些关于日 志感受和技巧想要分享一下。 笔者认为对于各种程序和应用，</description></item><item><title>爬虫高效去重之布隆过滤器</title><link>https://ramsayleung.github.io/post/2017/bloom_filter/</link><pubDate>Sun, 09 Apr 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/bloom_filter/</guid><description>笔者最近思考如何编写高效的爬虫; 而在编写高效爬虫的时候，有一个必需解决的问题就是： url 的去重，即如何判别 url 是否已经被爬取，如果被爬取，那就不要</description></item><item><title>Python多线程端口扫描器</title><link>https://ramsayleung.github.io/post/2017/port_scanner/</link><pubDate>Sun, 19 Mar 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/port_scanner/</guid><description>近两日，闲来无事，就写了些端口扫描器，重温TCP/IP协议栈的部分原理。 1 端口扫描器 所谓的端口扫描器，其实是用来检测目标服务器有哪些端口开放</description></item><item><title>flask牛刀小试之微信公众号开发</title><link>https://ramsayleung.github.io/post/2017/weixin_flask/</link><pubDate>Thu, 23 Feb 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/weixin_flask/</guid><description>flask 是一个轻量级的python 框架(官网称为微型框架),很容易上手，之前因为笔者跟朋友开发小程序的时候使用过 flask,过后就遗忘了。 为了重拾</description></item><item><title>在Emacs中使用Ipython</title><link>https://ramsayleung.github.io/post/2017/emacs_ipython/</link><pubDate>Wed, 22 Feb 2017 00:00:00 +0800</pubDate><guid>https://ramsayleung.github.io/post/2017/emacs_ipython/</guid><description>1 Emacs Ipython 输出错误 在Emacs 运行 run-python 的时候，报错了，如下 1 2 [?12l[?25h2+2 [J[?7h[?12l[?25h[?2004l[?7hOut[1]: 4 因为我的版本时Ipython5,查阅文档http://ipython.read</description></item></channel></rss>